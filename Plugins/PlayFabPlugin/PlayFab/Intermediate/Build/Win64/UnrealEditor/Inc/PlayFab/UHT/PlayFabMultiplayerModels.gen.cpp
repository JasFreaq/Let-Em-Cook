// Copyright Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Generated code exported from UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "UObject/GeneratedCppIncludes.h"
#include "../Classes/PlayFabMultiplayerModels.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodePlayFabMultiplayerModels() {}
// Cross Module References
	PLAYFAB_API UClass* Z_Construct_UClass_UPlayFabJsonObject_NoRegister();
	PLAYFAB_API UEnum* Z_Construct_UEnum_PlayFab_EAccessPolicy();
	PLAYFAB_API UEnum* Z_Construct_UEnum_PlayFab_EAzureVmSize();
	PLAYFAB_API UEnum* Z_Construct_UEnum_PlayFab_EContainerFlavor();
	PLAYFAB_API UEnum* Z_Construct_UEnum_PlayFab_EExternalFriendSources();
	PLAYFAB_API UEnum* Z_Construct_UEnum_PlayFab_EMembershipLock();
	PLAYFAB_API UEnum* Z_Construct_UEnum_PlayFab_EOwnerMigrationPolicy();
	PLAYFAB_API UEnum* Z_Construct_UEnum_PlayFab_ESubscriptionType();
	PLAYFAB_API UEnum* Z_Construct_UEnum_PlayFab_ETitleMultiplayerServerEnabledStatus();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerEmptyResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetLobbyResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMatchResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerJoinLobbyResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerLobbyEmptyResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FPlayFabRequestCommon();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FPlayFabResultCommon();
	UPackage* Z_Construct_UPackage__Script_PlayFab();
// End Cross Module References

static_assert(std::is_polymorphic<FMultiplayerCreateLobbyRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCreateLobbyRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCreateLobbyRequest;
class UScriptStruct* FMultiplayerCreateLobbyRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateLobbyRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCreateLobbyRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateLobbyRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCreateLobbyRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateLobbyRequest>()
{
	return FMultiplayerCreateLobbyRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FBytePropertyParams NewProp_AccessPolicy_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AccessPolicy_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_AccessPolicy;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_LobbyData_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_LobbyData;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MaxPlayers_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_MaxPlayers;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Members_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Members_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_Members;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Owner_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Owner;
		static const UECodeGen_Private::FBytePropertyParams NewProp_OwnerMigrationPolicy_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_OwnerMigrationPolicy_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_OwnerMigrationPolicy;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SearchData_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_SearchData;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_UseConnections_MetaData[];
#endif
		static void NewProp_UseConnections_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_UseConnections;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Request to create a lobby. A Server or client can create a lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Request to create a lobby. A Server or client can create a lobby." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateLobbyRequest>();
	}
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_AccessPolicy_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_AccessPolicy_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The policy indicating who is allowed to join the lobby, and the visibility to queries. May be 'Public', 'Friends' or\n     * 'Private'. Public means the lobby is both visible in queries and any player may join, including invited players. Friends\n     * means that users who are bidirectional friends of members in the lobby may search to find friend lobbies, to retrieve\n     * its connection string. Private means the lobby is not visible in queries, and a player must receive an invitation to\n     * join. Defaults to 'Public' on creation. Can only be changed by the lobby owner.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The policy indicating who is allowed to join the lobby, and the visibility to queries. May be 'Public', 'Friends' or\n'Private'. Public means the lobby is both visible in queries and any player may join, including invited players. Friends\nmeans that users who are bidirectional friends of members in the lobby may search to find friend lobbies, to retrieve\nits connection string. Private means the lobby is not visible in queries, and a player must receive an invitation to\njoin. Defaults to 'Public' on creation. Can only be changed by the lobby owner." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_AccessPolicy = { "AccessPolicy", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateLobbyRequest, AccessPolicy), Z_Construct_UEnum_PlayFab_EAccessPolicy, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_AccessPolicy_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_AccessPolicy_MetaData)) }; // 3287369783
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateLobbyRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_LobbyData_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The private key-value pairs which are visible to all entities in the lobby. At most 30 key-value pairs may be stored\n     * here, keys are limited to 30 characters and values to 1000. The total size of all lobbyData values may not exceed 4096\n     * bytes. Keys are case sensitive.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The private key-value pairs which are visible to all entities in the lobby. At most 30 key-value pairs may be stored\nhere, keys are limited to 30 characters and values to 1000. The total size of all lobbyData values may not exceed 4096\nbytes. Keys are case sensitive." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_LobbyData = { "LobbyData", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateLobbyRequest, LobbyData), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_LobbyData_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_LobbyData_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_MaxPlayers_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The maximum number of players allowed in the lobby. The value must be between 2 and 128. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The maximum number of players allowed in the lobby. The value must be between 2 and 128." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_MaxPlayers = { "MaxPlayers", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateLobbyRequest, MaxPlayers), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_MaxPlayers_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_MaxPlayers_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_Members_Inner = { "Members", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_Members_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The member initially added to the lobby. Client must specify exactly one member, which is the creator's entity and\n     * member data. Member PubSubConnectionHandle must be null or empty. Game servers must not specify any members.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The member initially added to the lobby. Client must specify exactly one member, which is the creator's entity and\nmember data. Member PubSubConnectionHandle must be null or empty. Game servers must not specify any members." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_Members = { "Members", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateLobbyRequest, Members), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_Members_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_Members_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_Owner_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The lobby owner. Must be the calling entity. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The lobby owner. Must be the calling entity." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_Owner = { "Owner", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateLobbyRequest, Owner), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_Owner_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_Owner_MetaData)) };
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_OwnerMigrationPolicy_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_OwnerMigrationPolicy_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The policy for how a new owner is chosen. May be 'Automatic', 'Manual' or 'None'. Can only be specified by clients. If\n     * client-owned and 'Automatic' - The Lobby service will automatically assign another connected owner when the current\n     * owner leaves or disconnects. The useConnections property must be true. If client - owned and 'Manual' - Ownership is\n     * protected as long as the current owner is connected. If the current owner leaves or disconnects any member may set\n     * themselves as the current owner. The useConnections property must be true. If client-owned and 'None' - Any member can\n     * set ownership. The useConnections property can be either true or false.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The policy for how a new owner is chosen. May be 'Automatic', 'Manual' or 'None'. Can only be specified by clients. If\nclient-owned and 'Automatic' - The Lobby service will automatically assign another connected owner when the current\nowner leaves or disconnects. The useConnections property must be true. If client - owned and 'Manual' - Ownership is\nprotected as long as the current owner is connected. If the current owner leaves or disconnects any member may set\nthemselves as the current owner. The useConnections property must be true. If client-owned and 'None' - Any member can\nset ownership. The useConnections property can be either true or false." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_OwnerMigrationPolicy = { "OwnerMigrationPolicy", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateLobbyRequest, OwnerMigrationPolicy), Z_Construct_UEnum_PlayFab_EOwnerMigrationPolicy, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_OwnerMigrationPolicy_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_OwnerMigrationPolicy_MetaData)) }; // 1641217694
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_SearchData_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The public key-value pairs which allow queries to differentiate between lobbies. Queries will refer to these key-value\n     * pairs in their filter and order by clauses to retrieve lobbies fitting the specified criteria. At most 30 key-value\n     * pairs may be stored here. Keys are of the format string_key1, string_key2 ... string_key30 for string values, or\n     * number_key1, number_key2, ... number_key30 for numeric values.Numeric values are floats. Values can be at most 256\n     * characters long. The total size of all searchData values may not exceed 1024 bytes.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The public key-value pairs which allow queries to differentiate between lobbies. Queries will refer to these key-value\npairs in their filter and order by clauses to retrieve lobbies fitting the specified criteria. At most 30 key-value\npairs may be stored here. Keys are of the format string_key1, string_key2 ... string_key30 for string values, or\nnumber_key1, number_key2, ... number_key30 for numeric values.Numeric values are floats. Values can be at most 256\ncharacters long. The total size of all searchData values may not exceed 1024 bytes." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_SearchData = { "SearchData", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateLobbyRequest, SearchData), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_SearchData_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_SearchData_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_UseConnections_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * A setting to control whether connections are used. Defaults to true. When true, notifications are sent to subscribed\n     * players, disconnect detection removes connectionHandles, only owner migration policies using connections are allowed,\n     * and lobbies must have at least one connected member to be searchable or be a server hosted lobby with a connected\n     * server. If false, then notifications are not sent, connections are not allowed, and lobbies do not need connections to\n     * be searchable.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A setting to control whether connections are used. Defaults to true. When true, notifications are sent to subscribed\nplayers, disconnect detection removes connectionHandles, only owner migration policies using connections are allowed,\nand lobbies must have at least one connected member to be searchable or be a server hosted lobby with a connected\nserver. If false, then notifications are not sent, connections are not allowed, and lobbies do not need connections to\nbe searchable." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_UseConnections_SetBit(void* Obj)
	{
		((FMultiplayerCreateLobbyRequest*)Obj)->UseConnections = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_UseConnections = { "UseConnections", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerCreateLobbyRequest), &Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_UseConnections_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_UseConnections_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_UseConnections_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_AccessPolicy_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_AccessPolicy,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_LobbyData,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_MaxPlayers,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_Members_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_Members,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_Owner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_OwnerMigrationPolicy_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_OwnerMigrationPolicy,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_SearchData,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewProp_UseConnections,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCreateLobbyRequest",
		sizeof(FMultiplayerCreateLobbyRequest),
		alignof(FMultiplayerCreateLobbyRequest),
		Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateLobbyRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCreateLobbyRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCreateLobbyRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCreateLobbyResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCreateLobbyResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCreateLobbyResult;
class UScriptStruct* FMultiplayerCreateLobbyResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateLobbyResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCreateLobbyResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateLobbyResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCreateLobbyResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateLobbyResult>()
{
	return FMultiplayerCreateLobbyResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ConnectionString_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ConnectionString;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_LobbyId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_LobbyId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateLobbyResult>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::NewProp_ConnectionString_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** A field which indicates which lobby the user will be joining. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A field which indicates which lobby the user will be joining." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::NewProp_ConnectionString = { "ConnectionString", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateLobbyResult, ConnectionString), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::NewProp_ConnectionString_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::NewProp_ConnectionString_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::NewProp_LobbyId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** Id to uniquely identify a lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Id to uniquely identify a lobby." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::NewProp_LobbyId = { "LobbyId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateLobbyResult, LobbyId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::NewProp_LobbyId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::NewProp_LobbyId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::NewProp_ConnectionString,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::NewProp_LobbyId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCreateLobbyResult",
		sizeof(FMultiplayerCreateLobbyResult),
		alignof(FMultiplayerCreateLobbyResult),
		Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateLobbyResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCreateLobbyResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCreateLobbyResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerDeleteLobbyRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerDeleteLobbyRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerDeleteLobbyRequest;
class UScriptStruct* FMultiplayerDeleteLobbyRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerDeleteLobbyRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerDeleteLobbyRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerDeleteLobbyRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerDeleteLobbyRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerDeleteLobbyRequest>()
{
	return FMultiplayerDeleteLobbyRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_LobbyId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_LobbyId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Request to delete a lobby. Only servers can delete lobbies. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Request to delete a lobby. Only servers can delete lobbies." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerDeleteLobbyRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteLobbyRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::NewProp_LobbyId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The id of the lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The id of the lobby." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::NewProp_LobbyId = { "LobbyId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteLobbyRequest, LobbyId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::NewProp_LobbyId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::NewProp_LobbyId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::NewProp_LobbyId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerDeleteLobbyRequest",
		sizeof(FMultiplayerDeleteLobbyRequest),
		alignof(FMultiplayerDeleteLobbyRequest),
		Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerDeleteLobbyRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerDeleteLobbyRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerDeleteLobbyRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerLobbyEmptyResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerLobbyEmptyResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerLobbyEmptyResult;
class UScriptStruct* FMultiplayerLobbyEmptyResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerLobbyEmptyResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerLobbyEmptyResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerLobbyEmptyResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerLobbyEmptyResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerLobbyEmptyResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerLobbyEmptyResult>()
{
	return FMultiplayerLobbyEmptyResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerLobbyEmptyResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerLobbyEmptyResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerLobbyEmptyResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerLobbyEmptyResult>();
	}
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerLobbyEmptyResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerLobbyEmptyResult",
		sizeof(FMultiplayerLobbyEmptyResult),
		alignof(FMultiplayerLobbyEmptyResult),
		nullptr,
		0,
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerLobbyEmptyResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerLobbyEmptyResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerLobbyEmptyResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerLobbyEmptyResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerLobbyEmptyResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerLobbyEmptyResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerLobbyEmptyResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerFindFriendLobbiesRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerFindFriendLobbiesRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerFindFriendLobbiesRequest;
class UScriptStruct* FMultiplayerFindFriendLobbiesRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerFindFriendLobbiesRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerFindFriendLobbiesRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerFindFriendLobbiesRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerFindFriendLobbiesRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerFindFriendLobbiesRequest>()
{
	return FMultiplayerFindFriendLobbiesRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FBytePropertyParams NewProp_ExternalPlatformFriends_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ExternalPlatformFriends_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_ExternalPlatformFriends;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Filter_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Filter;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_OrderBy_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_OrderBy;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Pagination_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Pagination;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_XboxToken_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_XboxToken;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Request to find friends lobbies. Only a client can find friend lobbies. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Request to find friends lobbies. Only a client can find friend lobbies." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerFindFriendLobbiesRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerFindFriendLobbiesRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_ExternalPlatformFriends_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_ExternalPlatformFriends_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** Indicates which other platforms' friends this query should link to. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Indicates which other platforms' friends this query should link to." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_ExternalPlatformFriends = { "ExternalPlatformFriends", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerFindFriendLobbiesRequest, ExternalPlatformFriends), Z_Construct_UEnum_PlayFab_EExternalFriendSources, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_ExternalPlatformFriends_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_ExternalPlatformFriends_MetaData)) }; // 3810239192
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_Filter_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * OData style string that contains one or more filters. Only the following operators are supported: \"and\" (logical and),\n     * \"eq\" (equal), \"ne\" (not equals), \"ge\" (greater than or equal), \"gt\" (greater than), \"le\" (less than or equal), and \"lt\"\n     * (less than). The left-hand side of each OData logical expression should be either a search property key (e.g.\n     * string_key1, number_key3, etc) or one of the pre-defined search keys all of which must be prefixed by \"lobby/\":\n     * lobby/memberCount (number of players in a lobby), lobby/maxMemberCount (maximum number of players allowed in a lobby),\n     * lobby/memberCountRemaining (remaining number of players who can be allowed in a lobby), lobby/membershipLock (must equal\n     * 'Unlocked' or 'Locked'), lobby/amOwner (required to equal \"true\"), lobby/amMember (required to equal \"true\").\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "OData style string that contains one or more filters. Only the following operators are supported: \"and\" (logical and),\n\"eq\" (equal), \"ne\" (not equals), \"ge\" (greater than or equal), \"gt\" (greater than), \"le\" (less than or equal), and \"lt\"\n(less than). The left-hand side of each OData logical expression should be either a search property key (e.g.\nstring_key1, number_key3, etc) or one of the pre-defined search keys all of which must be prefixed by \"lobby/\":\nlobby/memberCount (number of players in a lobby), lobby/maxMemberCount (maximum number of players allowed in a lobby),\nlobby/memberCountRemaining (remaining number of players who can be allowed in a lobby), lobby/membershipLock (must equal\n'Unlocked' or 'Locked'), lobby/amOwner (required to equal \"true\"), lobby/amMember (required to equal \"true\")." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_Filter = { "Filter", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerFindFriendLobbiesRequest, Filter), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_Filter_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_Filter_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_OrderBy_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * OData style string that contains sorting for this query in either ascending (\"asc\") or descending (\"desc\") order.\n     * OrderBy clauses are of the form \"number_key1 asc\" or the pre-defined search key \"lobby/memberCount asc\",\n     * \"lobby/memberCountRemaining desc\" and \"lobby/maxMemberCount desc\". To sort by closest, a moniker `distance{number_key1 =\n     * 5}` can be used to sort by distance from the given number. This field only supports either one sort clause or one\n     * distance clause.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "OData style string that contains sorting for this query in either ascending (\"asc\") or descending (\"desc\") order.\nOrderBy clauses are of the form \"number_key1 asc\" or the pre-defined search key \"lobby/memberCount asc\",\n\"lobby/memberCountRemaining desc\" and \"lobby/maxMemberCount desc\". To sort by closest, a moniker `distance{number_key1 =\n5}` can be used to sort by distance from the given number. This field only supports either one sort clause or one\ndistance clause." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_OrderBy = { "OrderBy", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerFindFriendLobbiesRequest, OrderBy), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_OrderBy_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_OrderBy_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_Pagination_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** Request pagination information. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Request pagination information." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_Pagination = { "Pagination", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerFindFriendLobbiesRequest, Pagination), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_Pagination_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_Pagination_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_XboxToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** Xbox token if Xbox friends should be included. Requires Xbox be configured on PlayFab. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Xbox token if Xbox friends should be included. Requires Xbox be configured on PlayFab." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_XboxToken = { "XboxToken", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerFindFriendLobbiesRequest, XboxToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_XboxToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_XboxToken_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_ExternalPlatformFriends_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_ExternalPlatformFriends,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_Filter,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_OrderBy,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_Pagination,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewProp_XboxToken,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerFindFriendLobbiesRequest",
		sizeof(FMultiplayerFindFriendLobbiesRequest),
		alignof(FMultiplayerFindFriendLobbiesRequest),
		Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerFindFriendLobbiesRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerFindFriendLobbiesRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerFindFriendLobbiesRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerFindFriendLobbiesResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerFindFriendLobbiesResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerFindFriendLobbiesResult;
class UScriptStruct* FMultiplayerFindFriendLobbiesResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerFindFriendLobbiesResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerFindFriendLobbiesResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerFindFriendLobbiesResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerFindFriendLobbiesResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerFindFriendLobbiesResult>()
{
	return FMultiplayerFindFriendLobbiesResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Lobbies_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Lobbies_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_Lobbies;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Pagination_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Pagination;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerFindFriendLobbiesResult>();
	}
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::NewProp_Lobbies_Inner = { "Lobbies", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::NewProp_Lobbies_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** Array of lobbies found that matched FindFriendLobbies request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Array of lobbies found that matched FindFriendLobbies request." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::NewProp_Lobbies = { "Lobbies", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerFindFriendLobbiesResult, Lobbies), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::NewProp_Lobbies_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::NewProp_Lobbies_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::NewProp_Pagination_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** Pagination response for FindFriendLobbies request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Pagination response for FindFriendLobbies request." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::NewProp_Pagination = { "Pagination", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerFindFriendLobbiesResult, Pagination), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::NewProp_Pagination_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::NewProp_Pagination_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::NewProp_Lobbies_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::NewProp_Lobbies,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::NewProp_Pagination,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerFindFriendLobbiesResult",
		sizeof(FMultiplayerFindFriendLobbiesResult),
		alignof(FMultiplayerFindFriendLobbiesResult),
		Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerFindFriendLobbiesResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerFindFriendLobbiesResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerFindFriendLobbiesResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerFindLobbiesRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerFindLobbiesRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerFindLobbiesRequest;
class UScriptStruct* FMultiplayerFindLobbiesRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerFindLobbiesRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerFindLobbiesRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerFindLobbiesRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerFindLobbiesRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerFindLobbiesRequest>()
{
	return FMultiplayerFindLobbiesRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Filter_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Filter;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_OrderBy_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_OrderBy;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Pagination_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Pagination;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Request to find lobbies. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Request to find lobbies." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerFindLobbiesRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerFindLobbiesRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_Filter_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * OData style string that contains one or more filters. Only the following operators are supported: \"and\" (logical and),\n     * \"eq\" (equal), \"ne\" (not equals), \"ge\" (greater than or equal), \"gt\" (greater than), \"le\" (less than or equal), and \"lt\"\n     * (less than). The left-hand side of each OData logical expression should be either a search property key (e.g.\n     * string_key1, number_key3, etc) or one of the pre-defined search keys all of which must be prefixed by \"lobby/\":\n     * lobby/memberCount (number of players in a lobby), lobby/maxMemberCount (maximum number of players allowed in a lobby),\n     * lobby/memberCountRemaining (remaining number of players who can be allowed in a lobby), lobby/membershipLock (must equal\n     * 'Unlocked' or 'Locked'), lobby/amOwner (required to equal \"true\"), lobby/amMember (required to equal \"true\").\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "OData style string that contains one or more filters. Only the following operators are supported: \"and\" (logical and),\n\"eq\" (equal), \"ne\" (not equals), \"ge\" (greater than or equal), \"gt\" (greater than), \"le\" (less than or equal), and \"lt\"\n(less than). The left-hand side of each OData logical expression should be either a search property key (e.g.\nstring_key1, number_key3, etc) or one of the pre-defined search keys all of which must be prefixed by \"lobby/\":\nlobby/memberCount (number of players in a lobby), lobby/maxMemberCount (maximum number of players allowed in a lobby),\nlobby/memberCountRemaining (remaining number of players who can be allowed in a lobby), lobby/membershipLock (must equal\n'Unlocked' or 'Locked'), lobby/amOwner (required to equal \"true\"), lobby/amMember (required to equal \"true\")." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_Filter = { "Filter", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerFindLobbiesRequest, Filter), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_Filter_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_Filter_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_OrderBy_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * OData style string that contains sorting for this query in either ascending (\"asc\") or descending (\"desc\") order.\n     * OrderBy clauses are of the form \"number_key1 asc\" or the pre-defined search key \"lobby/memberCount asc\",\n     * \"lobby/memberCountRemaining desc\" and \"lobby/maxMemberCount desc\". To sort by closest, a moniker `distance{number_key1 =\n     * 5}` can be used to sort by distance from the given number. This field only supports either one sort clause or one\n     * distance clause.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "OData style string that contains sorting for this query in either ascending (\"asc\") or descending (\"desc\") order.\nOrderBy clauses are of the form \"number_key1 asc\" or the pre-defined search key \"lobby/memberCount asc\",\n\"lobby/memberCountRemaining desc\" and \"lobby/maxMemberCount desc\". To sort by closest, a moniker `distance{number_key1 =\n5}` can be used to sort by distance from the given number. This field only supports either one sort clause or one\ndistance clause." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_OrderBy = { "OrderBy", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerFindLobbiesRequest, OrderBy), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_OrderBy_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_OrderBy_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_Pagination_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** Request pagination information. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Request pagination information." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_Pagination = { "Pagination", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerFindLobbiesRequest, Pagination), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_Pagination_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_Pagination_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_Filter,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_OrderBy,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewProp_Pagination,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerFindLobbiesRequest",
		sizeof(FMultiplayerFindLobbiesRequest),
		alignof(FMultiplayerFindLobbiesRequest),
		Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerFindLobbiesRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerFindLobbiesRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerFindLobbiesRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerFindLobbiesResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerFindLobbiesResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerFindLobbiesResult;
class UScriptStruct* FMultiplayerFindLobbiesResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerFindLobbiesResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerFindLobbiesResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerFindLobbiesResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerFindLobbiesResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerFindLobbiesResult>()
{
	return FMultiplayerFindLobbiesResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Lobbies_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Lobbies_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_Lobbies;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Pagination_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Pagination;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerFindLobbiesResult>();
	}
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::NewProp_Lobbies_Inner = { "Lobbies", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::NewProp_Lobbies_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** Array of lobbies found that matched FindLobbies request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Array of lobbies found that matched FindLobbies request." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::NewProp_Lobbies = { "Lobbies", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerFindLobbiesResult, Lobbies), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::NewProp_Lobbies_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::NewProp_Lobbies_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::NewProp_Pagination_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** Pagination response for FindLobbies request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Pagination response for FindLobbies request." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::NewProp_Pagination = { "Pagination", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerFindLobbiesResult, Pagination), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::NewProp_Pagination_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::NewProp_Pagination_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::NewProp_Lobbies_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::NewProp_Lobbies,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::NewProp_Pagination,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerFindLobbiesResult",
		sizeof(FMultiplayerFindLobbiesResult),
		alignof(FMultiplayerFindLobbiesResult),
		Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerFindLobbiesResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerFindLobbiesResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerFindLobbiesResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetLobbyRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetLobbyRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetLobbyRequest;
class UScriptStruct* FMultiplayerGetLobbyRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetLobbyRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetLobbyRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetLobbyRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetLobbyRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetLobbyRequest>()
{
	return FMultiplayerGetLobbyRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_LobbyId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_LobbyId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Request to get a lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Request to get a lobby." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetLobbyRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetLobbyRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::NewProp_LobbyId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The id of the lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The id of the lobby." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::NewProp_LobbyId = { "LobbyId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetLobbyRequest, LobbyId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::NewProp_LobbyId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::NewProp_LobbyId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::NewProp_LobbyId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetLobbyRequest",
		sizeof(FMultiplayerGetLobbyRequest),
		alignof(FMultiplayerGetLobbyRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetLobbyRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetLobbyRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetLobbyRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetLobbyResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetLobbyResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetLobbyResult;
class UScriptStruct* FMultiplayerGetLobbyResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetLobbyResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetLobbyResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetLobbyResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetLobbyResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetLobbyResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetLobbyResult>()
{
	return FMultiplayerGetLobbyResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetLobbyResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Lobby_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Lobby;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetLobbyResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetLobbyResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetLobbyResult>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetLobbyResult_Statics::NewProp_Lobby_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The information pertaining to the requested lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The information pertaining to the requested lobby." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetLobbyResult_Statics::NewProp_Lobby = { "Lobby", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetLobbyResult, Lobby), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetLobbyResult_Statics::NewProp_Lobby_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetLobbyResult_Statics::NewProp_Lobby_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetLobbyResult_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetLobbyResult_Statics::NewProp_Lobby,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetLobbyResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetLobbyResult",
		sizeof(FMultiplayerGetLobbyResult),
		alignof(FMultiplayerGetLobbyResult),
		Z_Construct_UScriptStruct_FMultiplayerGetLobbyResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetLobbyResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetLobbyResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetLobbyResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetLobbyResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetLobbyResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetLobbyResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetLobbyResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetLobbyResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerInviteToLobbyRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerInviteToLobbyRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerInviteToLobbyRequest;
class UScriptStruct* FMultiplayerInviteToLobbyRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerInviteToLobbyRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerInviteToLobbyRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerInviteToLobbyRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerInviteToLobbyRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerInviteToLobbyRequest>()
{
	return FMultiplayerInviteToLobbyRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_InviteeEntity_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_InviteeEntity;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_LobbyId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_LobbyId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MemberEntity_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_MemberEntity;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Request to invite a player to a lobby the caller is already a member of. Only a client can invite another player to a\n * lobby.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Request to invite a player to a lobby the caller is already a member of. Only a client can invite another player to a\nlobby." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerInviteToLobbyRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerInviteToLobbyRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_InviteeEntity_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The entity invited to the lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The entity invited to the lobby." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_InviteeEntity = { "InviteeEntity", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerInviteToLobbyRequest, InviteeEntity), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_InviteeEntity_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_InviteeEntity_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_LobbyId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The id of the lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The id of the lobby." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_LobbyId = { "LobbyId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerInviteToLobbyRequest, LobbyId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_LobbyId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_LobbyId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_MemberEntity_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The member entity sending the invite. Must be a member of the lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The member entity sending the invite. Must be a member of the lobby." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_MemberEntity = { "MemberEntity", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerInviteToLobbyRequest, MemberEntity), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_MemberEntity_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_MemberEntity_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_InviteeEntity,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_LobbyId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewProp_MemberEntity,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerInviteToLobbyRequest",
		sizeof(FMultiplayerInviteToLobbyRequest),
		alignof(FMultiplayerInviteToLobbyRequest),
		Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerInviteToLobbyRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerInviteToLobbyRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerInviteToLobbyRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerJoinArrangedLobbyRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerJoinArrangedLobbyRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerJoinArrangedLobbyRequest;
class UScriptStruct* FMultiplayerJoinArrangedLobbyRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerJoinArrangedLobbyRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerJoinArrangedLobbyRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerJoinArrangedLobbyRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerJoinArrangedLobbyRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerJoinArrangedLobbyRequest>()
{
	return FMultiplayerJoinArrangedLobbyRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FBytePropertyParams NewProp_AccessPolicy_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AccessPolicy_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_AccessPolicy;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ArrangementString_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ArrangementString;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MaxPlayers_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_MaxPlayers;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MemberData_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_MemberData;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MemberEntity_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_MemberEntity;
		static const UECodeGen_Private::FBytePropertyParams NewProp_OwnerMigrationPolicy_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_OwnerMigrationPolicy_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_OwnerMigrationPolicy;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_UseConnections_MetaData[];
#endif
		static void NewProp_UseConnections_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_UseConnections;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Request to join an arranged lobby. Only a client can join an arranged lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Request to join an arranged lobby. Only a client can join an arranged lobby." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerJoinArrangedLobbyRequest>();
	}
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_AccessPolicy_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_AccessPolicy_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The policy indicating who is allowed to join the lobby, and the visibility to queries. May be 'Public', 'Friends' or\n     * 'Private'. Public means the lobby is both visible in queries and any player may join, including invited players. Friends\n     * means that users who are bidirectional friends of members in the lobby may search to find friend lobbies, to retrieve\n     * its connection string. Private means the lobby is not visible in queries, and a player must receive an invitation to\n     * join. Defaults to 'Public' on creation. Can only be changed by the lobby owner.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The policy indicating who is allowed to join the lobby, and the visibility to queries. May be 'Public', 'Friends' or\n'Private'. Public means the lobby is both visible in queries and any player may join, including invited players. Friends\nmeans that users who are bidirectional friends of members in the lobby may search to find friend lobbies, to retrieve\nits connection string. Private means the lobby is not visible in queries, and a player must receive an invitation to\njoin. Defaults to 'Public' on creation. Can only be changed by the lobby owner." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_AccessPolicy = { "AccessPolicy", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinArrangedLobbyRequest, AccessPolicy), Z_Construct_UEnum_PlayFab_EAccessPolicy, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_AccessPolicy_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_AccessPolicy_MetaData)) }; // 3287369783
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_ArrangementString_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * A field which indicates which lobby the user will be joining. This field is opaque to everyone except the Lobby service\n     * and the creator of the arrangementString (Matchmaking). This string defines a unique identifier for the arranged lobby\n     * as well as the title and member the string is valid for. Arrangement strings have an expiration.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A field which indicates which lobby the user will be joining. This field is opaque to everyone except the Lobby service\nand the creator of the arrangementString (Matchmaking). This string defines a unique identifier for the arranged lobby\nas well as the title and member the string is valid for. Arrangement strings have an expiration." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_ArrangementString = { "ArrangementString", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinArrangedLobbyRequest, ArrangementString), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_ArrangementString_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_ArrangementString_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinArrangedLobbyRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_MaxPlayers_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The maximum number of players allowed in the lobby. The value must be between 2 and 128. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The maximum number of players allowed in the lobby. The value must be between 2 and 128." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_MaxPlayers = { "MaxPlayers", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinArrangedLobbyRequest, MaxPlayers), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_MaxPlayers_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_MaxPlayers_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_MemberData_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The private key-value pairs used by the member to communicate information to other members and the owner. Visible to all\n     * entities in the lobby. At most 30 key-value pairs may be stored here, keys are limited to 30 characters and values to\n     * 1000. The total size of all memberData values may not exceed 4096 bytes. Keys are case sensitive.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The private key-value pairs used by the member to communicate information to other members and the owner. Visible to all\nentities in the lobby. At most 30 key-value pairs may be stored here, keys are limited to 30 characters and values to\n1000. The total size of all memberData values may not exceed 4096 bytes. Keys are case sensitive." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_MemberData = { "MemberData", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinArrangedLobbyRequest, MemberData), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_MemberData_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_MemberData_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_MemberEntity_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The member entity who is joining the lobby. The first member to join will be the lobby owner. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The member entity who is joining the lobby. The first member to join will be the lobby owner." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_MemberEntity = { "MemberEntity", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinArrangedLobbyRequest, MemberEntity), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_MemberEntity_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_MemberEntity_MetaData)) };
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_OwnerMigrationPolicy_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_OwnerMigrationPolicy_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The policy for how a new owner is chosen. May be 'Automatic', 'Manual' or 'None'. Can only be specified by clients. If\n     * client-owned and 'Automatic' - The Lobby service will automatically assign another connected owner when the current\n     * owner leaves or disconnects. The useConnections property must be true. If client - owned and 'Manual' - Ownership is\n     * protected as long as the current owner is connected. If the current owner leaves or disconnects any member may set\n     * themselves as the current owner. The useConnections property must be true. If client-owned and 'None' - Any member can\n     * set ownership. The useConnections property can be either true or false.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The policy for how a new owner is chosen. May be 'Automatic', 'Manual' or 'None'. Can only be specified by clients. If\nclient-owned and 'Automatic' - The Lobby service will automatically assign another connected owner when the current\nowner leaves or disconnects. The useConnections property must be true. If client - owned and 'Manual' - Ownership is\nprotected as long as the current owner is connected. If the current owner leaves or disconnects any member may set\nthemselves as the current owner. The useConnections property must be true. If client-owned and 'None' - Any member can\nset ownership. The useConnections property can be either true or false." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_OwnerMigrationPolicy = { "OwnerMigrationPolicy", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinArrangedLobbyRequest, OwnerMigrationPolicy), Z_Construct_UEnum_PlayFab_EOwnerMigrationPolicy, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_OwnerMigrationPolicy_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_OwnerMigrationPolicy_MetaData)) }; // 1641217694
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_UseConnections_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * A setting to control whether connections are used. Defaults to true. When true, notifications are sent to subscribed\n     * players, disconnect detection removes connectionHandles, only owner migration policies using connections are allowed,\n     * and lobbies must have at least one connected member to be searchable or be a server hosted lobby with a connected\n     * server. If false, then notifications are not sent, connections are not allowed, and lobbies do not need connections to\n     * be searchable.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A setting to control whether connections are used. Defaults to true. When true, notifications are sent to subscribed\nplayers, disconnect detection removes connectionHandles, only owner migration policies using connections are allowed,\nand lobbies must have at least one connected member to be searchable or be a server hosted lobby with a connected\nserver. If false, then notifications are not sent, connections are not allowed, and lobbies do not need connections to\nbe searchable." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_UseConnections_SetBit(void* Obj)
	{
		((FMultiplayerJoinArrangedLobbyRequest*)Obj)->UseConnections = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_UseConnections = { "UseConnections", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerJoinArrangedLobbyRequest), &Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_UseConnections_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_UseConnections_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_UseConnections_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_AccessPolicy_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_AccessPolicy,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_ArrangementString,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_MaxPlayers,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_MemberData,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_MemberEntity,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_OwnerMigrationPolicy_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_OwnerMigrationPolicy,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewProp_UseConnections,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerJoinArrangedLobbyRequest",
		sizeof(FMultiplayerJoinArrangedLobbyRequest),
		alignof(FMultiplayerJoinArrangedLobbyRequest),
		Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerJoinArrangedLobbyRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerJoinArrangedLobbyRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerJoinArrangedLobbyRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerJoinLobbyResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerJoinLobbyResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyResult;
class UScriptStruct* FMultiplayerJoinLobbyResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerJoinLobbyResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerJoinLobbyResult>()
{
	return FMultiplayerJoinLobbyResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerJoinLobbyResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_LobbyId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_LobbyId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinLobbyResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerJoinLobbyResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerJoinLobbyResult>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinLobbyResult_Statics::NewProp_LobbyId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** Successfully joined lobby's id. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Successfully joined lobby's id." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinLobbyResult_Statics::NewProp_LobbyId = { "LobbyId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinLobbyResult, LobbyId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyResult_Statics::NewProp_LobbyId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyResult_Statics::NewProp_LobbyId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerJoinLobbyResult_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinLobbyResult_Statics::NewProp_LobbyId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerJoinLobbyResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerJoinLobbyResult",
		sizeof(FMultiplayerJoinLobbyResult),
		alignof(FMultiplayerJoinLobbyResult),
		Z_Construct_UScriptStruct_FMultiplayerJoinLobbyResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerJoinLobbyResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerJoinLobbyResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerJoinLobbyRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerJoinLobbyRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyRequest;
class UScriptStruct* FMultiplayerJoinLobbyRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerJoinLobbyRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerJoinLobbyRequest>()
{
	return FMultiplayerJoinLobbyRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ConnectionString_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ConnectionString;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MemberData_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_MemberData;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MemberEntity_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_MemberEntity;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Request to join a lobby. Only a client can join a lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Request to join a lobby. Only a client can join a lobby." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerJoinLobbyRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_ConnectionString_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** A field which indicates which lobby the user will be joining. This field is opaque to everyone except the Lobby service. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A field which indicates which lobby the user will be joining. This field is opaque to everyone except the Lobby service." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_ConnectionString = { "ConnectionString", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinLobbyRequest, ConnectionString), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_ConnectionString_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_ConnectionString_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinLobbyRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_MemberData_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The private key-value pairs used by the member to communicate information to other members and the owner. Visible to all\n     * entities in the lobby. At most 30 key-value pairs may be stored here, keys are limited to 30 characters and values to\n     * 1000. The total size of all memberData values may not exceed 4096 bytes.Keys are case sensitive.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The private key-value pairs used by the member to communicate information to other members and the owner. Visible to all\nentities in the lobby. At most 30 key-value pairs may be stored here, keys are limited to 30 characters and values to\n1000. The total size of all memberData values may not exceed 4096 bytes.Keys are case sensitive." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_MemberData = { "MemberData", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinLobbyRequest, MemberData), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_MemberData_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_MemberData_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_MemberEntity_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The member entity who is joining the lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The member entity who is joining the lobby." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_MemberEntity = { "MemberEntity", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinLobbyRequest, MemberEntity), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_MemberEntity_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_MemberEntity_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_ConnectionString,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_MemberData,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewProp_MemberEntity,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerJoinLobbyRequest",
		sizeof(FMultiplayerJoinLobbyRequest),
		alignof(FMultiplayerJoinLobbyRequest),
		Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerJoinLobbyAsServerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerJoinLobbyAsServerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyAsServerRequest;
class UScriptStruct* FMultiplayerJoinLobbyAsServerRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyAsServerRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyAsServerRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerJoinLobbyAsServerRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyAsServerRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerJoinLobbyAsServerRequest>()
{
	return FMultiplayerJoinLobbyAsServerRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ConnectionString_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ConnectionString;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerData_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_ServerData;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerEntity_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_ServerEntity;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Preview: Request to join a lobby as a server. Only callable by a game_server entity and this is restricted to client\n * owned lobbies which are using connections.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Preview: Request to join a lobby as a server. Only callable by a game_server entity and this is restricted to client\nowned lobbies which are using connections." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerJoinLobbyAsServerRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_ConnectionString_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * A field which indicates which lobby the game_server will be joining. This field is opaque to everyone except the Lobby\n     * service.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A field which indicates which lobby the game_server will be joining. This field is opaque to everyone except the Lobby\nservice." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_ConnectionString = { "ConnectionString", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinLobbyAsServerRequest, ConnectionString), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_ConnectionString_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_ConnectionString_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinLobbyAsServerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_ServerData_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The private key-value pairs which are visible to all entities in the lobby but can only be modified by the joined\n     * server.At most 30 key - value pairs may be stored here, keys are limited to 30 characters and values to 1000.The total\n     * size of all serverData values may not exceed 4096 bytes.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The private key-value pairs which are visible to all entities in the lobby but can only be modified by the joined\nserver.At most 30 key - value pairs may be stored here, keys are limited to 30 characters and values to 1000.The total\nsize of all serverData values may not exceed 4096 bytes." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_ServerData = { "ServerData", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinLobbyAsServerRequest, ServerData), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_ServerData_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_ServerData_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_ServerEntity_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The game_server entity which is joining the Lobby. If a different game_server entity has already joined the request will\n     * fail unless the joined entity is disconnected, in which case the incoming game_server entity will replace the\n     * disconnected entity.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game_server entity which is joining the Lobby. If a different game_server entity has already joined the request will\nfail unless the joined entity is disconnected, in which case the incoming game_server entity will replace the\ndisconnected entity." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_ServerEntity = { "ServerEntity", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinLobbyAsServerRequest, ServerEntity), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_ServerEntity_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_ServerEntity_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_ConnectionString,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_ServerData,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewProp_ServerEntity,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerJoinLobbyAsServerRequest",
		sizeof(FMultiplayerJoinLobbyAsServerRequest),
		alignof(FMultiplayerJoinLobbyAsServerRequest),
		Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyAsServerRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyAsServerRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyAsServerRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerJoinLobbyAsServerResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerJoinLobbyAsServerResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyAsServerResult;
class UScriptStruct* FMultiplayerJoinLobbyAsServerResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyAsServerResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyAsServerResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerJoinLobbyAsServerResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyAsServerResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerJoinLobbyAsServerResult>()
{
	return FMultiplayerJoinLobbyAsServerResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_LobbyId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_LobbyId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerJoinLobbyAsServerResult>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerResult_Statics::NewProp_LobbyId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** Successfully joined lobby's id. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Successfully joined lobby's id." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerResult_Statics::NewProp_LobbyId = { "LobbyId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinLobbyAsServerResult, LobbyId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerResult_Statics::NewProp_LobbyId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerResult_Statics::NewProp_LobbyId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerResult_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerResult_Statics::NewProp_LobbyId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerJoinLobbyAsServerResult",
		sizeof(FMultiplayerJoinLobbyAsServerResult),
		alignof(FMultiplayerJoinLobbyAsServerResult),
		Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyAsServerResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyAsServerResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyAsServerResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerLeaveLobbyRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerLeaveLobbyRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerLeaveLobbyRequest;
class UScriptStruct* FMultiplayerLeaveLobbyRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerLeaveLobbyRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerLeaveLobbyRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerLeaveLobbyRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerLeaveLobbyRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerLeaveLobbyRequest>()
{
	return FMultiplayerLeaveLobbyRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_LobbyId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_LobbyId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MemberEntity_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_MemberEntity;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Request to leave a lobby. Only a client can leave a lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Request to leave a lobby. Only a client can leave a lobby." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerLeaveLobbyRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerLeaveLobbyRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::NewProp_LobbyId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The id of the lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The id of the lobby." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::NewProp_LobbyId = { "LobbyId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerLeaveLobbyRequest, LobbyId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::NewProp_LobbyId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::NewProp_LobbyId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::NewProp_MemberEntity_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The member entity leaving the lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The member entity leaving the lobby." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::NewProp_MemberEntity = { "MemberEntity", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerLeaveLobbyRequest, MemberEntity), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::NewProp_MemberEntity_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::NewProp_MemberEntity_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::NewProp_LobbyId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::NewProp_MemberEntity,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerLeaveLobbyRequest",
		sizeof(FMultiplayerLeaveLobbyRequest),
		alignof(FMultiplayerLeaveLobbyRequest),
		Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerLeaveLobbyRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerLeaveLobbyRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerLeaveLobbyRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerLeaveLobbyAsServerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerLeaveLobbyAsServerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerLeaveLobbyAsServerRequest;
class UScriptStruct* FMultiplayerLeaveLobbyAsServerRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerLeaveLobbyAsServerRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerLeaveLobbyAsServerRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerLeaveLobbyAsServerRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerLeaveLobbyAsServerRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerLeaveLobbyAsServerRequest>()
{
	return FMultiplayerLeaveLobbyAsServerRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_LobbyId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_LobbyId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerEntity_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_ServerEntity;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Preview: Request for server to leave a lobby. Only a game_server entity can leave and this is restricted to client owned\n * lobbies which are using connections.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Preview: Request for server to leave a lobby. Only a game_server entity can leave and this is restricted to client owned\nlobbies which are using connections." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerLeaveLobbyAsServerRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerLeaveLobbyAsServerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::NewProp_LobbyId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The id of the lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The id of the lobby." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::NewProp_LobbyId = { "LobbyId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerLeaveLobbyAsServerRequest, LobbyId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::NewProp_LobbyId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::NewProp_LobbyId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::NewProp_ServerEntity_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The game_server entity leaving the lobby. If the game_server was subscribed to notifications, it will be unsubscribed.\n     * If a the given game_server entity is not in the lobby, it will fail.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game_server entity leaving the lobby. If the game_server was subscribed to notifications, it will be unsubscribed.\nIf a the given game_server entity is not in the lobby, it will fail." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::NewProp_ServerEntity = { "ServerEntity", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerLeaveLobbyAsServerRequest, ServerEntity), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::NewProp_ServerEntity_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::NewProp_ServerEntity_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::NewProp_LobbyId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::NewProp_ServerEntity,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerLeaveLobbyAsServerRequest",
		sizeof(FMultiplayerLeaveLobbyAsServerRequest),
		alignof(FMultiplayerLeaveLobbyAsServerRequest),
		Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerLeaveLobbyAsServerRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerLeaveLobbyAsServerRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerLeaveLobbyAsServerRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerRemoveMemberFromLobbyRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerRemoveMemberFromLobbyRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerRemoveMemberFromLobbyRequest;
class UScriptStruct* FMultiplayerRemoveMemberFromLobbyRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerRemoveMemberFromLobbyRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerRemoveMemberFromLobbyRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerRemoveMemberFromLobbyRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerRemoveMemberFromLobbyRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerRemoveMemberFromLobbyRequest>()
{
	return FMultiplayerRemoveMemberFromLobbyRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_LobbyId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_LobbyId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MemberEntity_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_MemberEntity;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PreventRejoin_MetaData[];
#endif
		static void NewProp_PreventRejoin_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_PreventRejoin;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Request to remove a member from a lobby. Owners may remove other members from a lobby. Members cannot remove themselves\n * (use LeaveLobby instead).\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Request to remove a member from a lobby. Owners may remove other members from a lobby. Members cannot remove themselves\n(use LeaveLobby instead)." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerRemoveMemberFromLobbyRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRemoveMemberFromLobbyRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_LobbyId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The id of the lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The id of the lobby." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_LobbyId = { "LobbyId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRemoveMemberFromLobbyRequest, LobbyId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_LobbyId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_LobbyId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_MemberEntity_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The member entity to be removed from the lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The member entity to be removed from the lobby." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_MemberEntity = { "MemberEntity", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRemoveMemberFromLobbyRequest, MemberEntity), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_MemberEntity_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_MemberEntity_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_PreventRejoin_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** If true, removed member can never rejoin this lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "If true, removed member can never rejoin this lobby." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_PreventRejoin_SetBit(void* Obj)
	{
		((FMultiplayerRemoveMemberFromLobbyRequest*)Obj)->PreventRejoin = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_PreventRejoin = { "PreventRejoin", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerRemoveMemberFromLobbyRequest), &Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_PreventRejoin_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_PreventRejoin_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_PreventRejoin_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_LobbyId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_MemberEntity,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewProp_PreventRejoin,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerRemoveMemberFromLobbyRequest",
		sizeof(FMultiplayerRemoveMemberFromLobbyRequest),
		alignof(FMultiplayerRemoveMemberFromLobbyRequest),
		Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerRemoveMemberFromLobbyRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerRemoveMemberFromLobbyRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerRemoveMemberFromLobbyRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerSubscribeToLobbyResourceRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerSubscribeToLobbyResourceRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerSubscribeToLobbyResourceRequest;
class UScriptStruct* FMultiplayerSubscribeToLobbyResourceRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerSubscribeToLobbyResourceRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerSubscribeToLobbyResourceRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerSubscribeToLobbyResourceRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerSubscribeToLobbyResourceRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerSubscribeToLobbyResourceRequest>()
{
	return FMultiplayerSubscribeToLobbyResourceRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_EntityKey_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_EntityKey;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PubSubConnectionHandle_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_PubSubConnectionHandle;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ResourceId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ResourceId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SubscriptionVersion_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_SubscriptionVersion;
		static const UECodeGen_Private::FBytePropertyParams NewProp_Type_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Type_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_Type;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Request to subscribe to lobby resource notifications. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Request to subscribe to lobby resource notifications." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerSubscribeToLobbyResourceRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerSubscribeToLobbyResourceRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_EntityKey_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The entity performing the subscription. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The entity performing the subscription." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_EntityKey = { "EntityKey", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerSubscribeToLobbyResourceRequest, EntityKey), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_EntityKey_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_EntityKey_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_PubSubConnectionHandle_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** Opaque string, given to a client upon creating a connection with PubSub. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Opaque string, given to a client upon creating a connection with PubSub." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_PubSubConnectionHandle = { "PubSubConnectionHandle", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerSubscribeToLobbyResourceRequest, PubSubConnectionHandle), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_PubSubConnectionHandle_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_PubSubConnectionHandle_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_ResourceId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The name of the resource to subscribe to. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the resource to subscribe to." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_ResourceId = { "ResourceId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerSubscribeToLobbyResourceRequest, ResourceId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_ResourceId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_ResourceId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_SubscriptionVersion_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** Version number for the subscription of this resource. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Version number for the subscription of this resource." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_SubscriptionVersion = { "SubscriptionVersion", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerSubscribeToLobbyResourceRequest, SubscriptionVersion), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_SubscriptionVersion_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_SubscriptionVersion_MetaData)) };
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_Type_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_Type_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** Subscription type. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Subscription type." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_Type = { "Type", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerSubscribeToLobbyResourceRequest, Type), Z_Construct_UEnum_PlayFab_ESubscriptionType, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_Type_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_Type_MetaData)) }; // 1218037643
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_EntityKey,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_PubSubConnectionHandle,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_ResourceId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_SubscriptionVersion,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_Type_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewProp_Type,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerSubscribeToLobbyResourceRequest",
		sizeof(FMultiplayerSubscribeToLobbyResourceRequest),
		alignof(FMultiplayerSubscribeToLobbyResourceRequest),
		Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerSubscribeToLobbyResourceRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerSubscribeToLobbyResourceRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerSubscribeToLobbyResourceRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerSubscribeToLobbyResourceResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerSubscribeToLobbyResourceResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerSubscribeToLobbyResourceResult;
class UScriptStruct* FMultiplayerSubscribeToLobbyResourceResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerSubscribeToLobbyResourceResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerSubscribeToLobbyResourceResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerSubscribeToLobbyResourceResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerSubscribeToLobbyResourceResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerSubscribeToLobbyResourceResult>()
{
	return FMultiplayerSubscribeToLobbyResourceResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Topic_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Topic;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerSubscribeToLobbyResourceResult>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceResult_Statics::NewProp_Topic_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** Topic will be returned in all notifications that are the result of this subscription. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Topic will be returned in all notifications that are the result of this subscription." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceResult_Statics::NewProp_Topic = { "Topic", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerSubscribeToLobbyResourceResult, Topic), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceResult_Statics::NewProp_Topic_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceResult_Statics::NewProp_Topic_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceResult_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceResult_Statics::NewProp_Topic,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerSubscribeToLobbyResourceResult",
		sizeof(FMultiplayerSubscribeToLobbyResourceResult),
		alignof(FMultiplayerSubscribeToLobbyResourceResult),
		Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerSubscribeToLobbyResourceResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerSubscribeToLobbyResourceResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerSubscribeToLobbyResourceResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerUnsubscribeFromLobbyResourceRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerUnsubscribeFromLobbyResourceRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerUnsubscribeFromLobbyResourceRequest;
class UScriptStruct* FMultiplayerUnsubscribeFromLobbyResourceRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerUnsubscribeFromLobbyResourceRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerUnsubscribeFromLobbyResourceRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerUnsubscribeFromLobbyResourceRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerUnsubscribeFromLobbyResourceRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerUnsubscribeFromLobbyResourceRequest>()
{
	return FMultiplayerUnsubscribeFromLobbyResourceRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_EntityKey_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_EntityKey;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PubSubConnectionHandle_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_PubSubConnectionHandle;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ResourceId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ResourceId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SubscriptionVersion_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_SubscriptionVersion;
		static const UECodeGen_Private::FBytePropertyParams NewProp_Type_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Type_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_Type;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Request to unsubscribe from lobby notifications. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Request to unsubscribe from lobby notifications." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerUnsubscribeFromLobbyResourceRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUnsubscribeFromLobbyResourceRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_EntityKey_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The entity which performed the subscription. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The entity which performed the subscription." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_EntityKey = { "EntityKey", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUnsubscribeFromLobbyResourceRequest, EntityKey), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_EntityKey_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_EntityKey_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_PubSubConnectionHandle_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** Opaque string, given to a client upon creating a connection with PubSub. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Opaque string, given to a client upon creating a connection with PubSub." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_PubSubConnectionHandle = { "PubSubConnectionHandle", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUnsubscribeFromLobbyResourceRequest, PubSubConnectionHandle), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_PubSubConnectionHandle_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_PubSubConnectionHandle_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_ResourceId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The name of the resource to unsubscribe from. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the resource to unsubscribe from." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_ResourceId = { "ResourceId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUnsubscribeFromLobbyResourceRequest, ResourceId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_ResourceId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_ResourceId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_SubscriptionVersion_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** Version number passed for the subscription of this resource. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Version number passed for the subscription of this resource." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_SubscriptionVersion = { "SubscriptionVersion", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUnsubscribeFromLobbyResourceRequest, SubscriptionVersion), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_SubscriptionVersion_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_SubscriptionVersion_MetaData)) };
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_Type_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_Type_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** Subscription type. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Subscription type." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_Type = { "Type", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUnsubscribeFromLobbyResourceRequest, Type), Z_Construct_UEnum_PlayFab_ESubscriptionType, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_Type_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_Type_MetaData)) }; // 1218037643
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_EntityKey,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_PubSubConnectionHandle,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_ResourceId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_SubscriptionVersion,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_Type_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewProp_Type,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerUnsubscribeFromLobbyResourceRequest",
		sizeof(FMultiplayerUnsubscribeFromLobbyResourceRequest),
		alignof(FMultiplayerUnsubscribeFromLobbyResourceRequest),
		Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerUnsubscribeFromLobbyResourceRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerUnsubscribeFromLobbyResourceRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerUnsubscribeFromLobbyResourceRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerUpdateLobbyRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerUpdateLobbyRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerUpdateLobbyRequest;
class UScriptStruct* FMultiplayerUpdateLobbyRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerUpdateLobbyRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerUpdateLobbyRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerUpdateLobbyRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerUpdateLobbyRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerUpdateLobbyRequest>()
{
	return FMultiplayerUpdateLobbyRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FBytePropertyParams NewProp_AccessPolicy_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AccessPolicy_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_AccessPolicy;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_LobbyData_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_LobbyData;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_LobbyDataToDelete_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_LobbyDataToDelete;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_LobbyId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_LobbyId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MaxPlayers_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_MaxPlayers;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MemberData_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_MemberData;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MemberDataToDelete_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_MemberDataToDelete;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MemberEntity_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_MemberEntity;
		static const UECodeGen_Private::FBytePropertyParams NewProp_MembershipLock_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MembershipLock_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_MembershipLock;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Owner_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Owner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SearchData_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_SearchData;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SearchDataToDelete_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SearchDataToDelete;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Request to update a lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Request to update a lobby." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerUpdateLobbyRequest>();
	}
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_AccessPolicy_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_AccessPolicy_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The policy indicating who is allowed to join the lobby, and the visibility to queries. May be 'Public', 'Friends' or\n     * 'Private'. Public means the lobby is both visible in queries and any player may join, including invited players. Friends\n     * means that users who are bidirectional friends of members in the lobby may search to find friend lobbies, to retrieve\n     * its connection string. Private means the lobby is not visible in queries, and a player must receive an invitation to\n     * join. Defaults to 'Public' on creation. Can only be changed by the lobby owner.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The policy indicating who is allowed to join the lobby, and the visibility to queries. May be 'Public', 'Friends' or\n'Private'. Public means the lobby is both visible in queries and any player may join, including invited players. Friends\nmeans that users who are bidirectional friends of members in the lobby may search to find friend lobbies, to retrieve\nits connection string. Private means the lobby is not visible in queries, and a player must receive an invitation to\njoin. Defaults to 'Public' on creation. Can only be changed by the lobby owner." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_AccessPolicy = { "AccessPolicy", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateLobbyRequest, AccessPolicy), Z_Construct_UEnum_PlayFab_EAccessPolicy, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_AccessPolicy_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_AccessPolicy_MetaData)) }; // 3287369783
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateLobbyRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_LobbyData_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The private key-value pairs which are visible to all entities in the lobby. Optional. Sets or updates key-value pairs on\n     * the lobby. Only the current lobby owner can set lobby data. Keys may be an arbitrary string of at most 30 characters.\n     * The total size of all lobbyData values may not exceed 4096 bytes. Values are not individually limited. There can be up\n     * to 30 key-value pairs stored here. Keys are case sensitive.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The private key-value pairs which are visible to all entities in the lobby. Optional. Sets or updates key-value pairs on\nthe lobby. Only the current lobby owner can set lobby data. Keys may be an arbitrary string of at most 30 characters.\nThe total size of all lobbyData values may not exceed 4096 bytes. Values are not individually limited. There can be up\nto 30 key-value pairs stored here. Keys are case sensitive." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_LobbyData = { "LobbyData", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateLobbyRequest, LobbyData), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_LobbyData_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_LobbyData_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_LobbyDataToDelete_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The keys to delete from the lobby LobbyData. Optional. Behaves similar to searchDataToDelete, but applies to lobbyData. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The keys to delete from the lobby LobbyData. Optional. Behaves similar to searchDataToDelete, but applies to lobbyData." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_LobbyDataToDelete = { "LobbyDataToDelete", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateLobbyRequest, LobbyDataToDelete), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_LobbyDataToDelete_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_LobbyDataToDelete_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_LobbyId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The id of the lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The id of the lobby." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_LobbyId = { "LobbyId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateLobbyRequest, LobbyId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_LobbyId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_LobbyId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MaxPlayers_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The maximum number of players allowed in the lobby. Updates the maximum allowed number of players in the lobby. Only the\n     * current lobby owner can set this. If set, the value must be greater than or equal to the number of members currently in\n     * the lobby.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The maximum number of players allowed in the lobby. Updates the maximum allowed number of players in the lobby. Only the\ncurrent lobby owner can set this. If set, the value must be greater than or equal to the number of members currently in\nthe lobby." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MaxPlayers = { "MaxPlayers", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateLobbyRequest, MaxPlayers), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MaxPlayers_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MaxPlayers_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MemberData_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The private key-value pairs used by the member to communicate information to other members and the owner. Optional. Sets\n     * or updates new key-value pairs on the caller's member data. New keys will be added with their values and existing keys\n     * will be updated with the new values. Visible to all entities in the lobby. At most 30 key-value pairs may be stored\n     * here, keys are limited to 30 characters and values to 1000. The total size of all memberData values may not exceed 4096\n     * bytes. Keys are case sensitive. Servers cannot specifiy this.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The private key-value pairs used by the member to communicate information to other members and the owner. Optional. Sets\nor updates new key-value pairs on the caller's member data. New keys will be added with their values and existing keys\nwill be updated with the new values. Visible to all entities in the lobby. At most 30 key-value pairs may be stored\nhere, keys are limited to 30 characters and values to 1000. The total size of all memberData values may not exceed 4096\nbytes. Keys are case sensitive. Servers cannot specifiy this." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MemberData = { "MemberData", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateLobbyRequest, MemberData), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MemberData_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MemberData_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MemberDataToDelete_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The keys to delete from the lobby MemberData. Optional. Deletes key-value pairs on the caller's member data. All the\n     * specified keys will be removed from the caller's member data. Keys that do not exist are a no-op. If the key to delete\n     * exists in the memberData (same request) it will result in a bad request. Servers cannot specifiy this.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The keys to delete from the lobby MemberData. Optional. Deletes key-value pairs on the caller's member data. All the\nspecified keys will be removed from the caller's member data. Keys that do not exist are a no-op. If the key to delete\nexists in the memberData (same request) it will result in a bad request. Servers cannot specifiy this." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MemberDataToDelete = { "MemberDataToDelete", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateLobbyRequest, MemberDataToDelete), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MemberDataToDelete_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MemberDataToDelete_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MemberEntity_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The member entity whose data is being modified. Servers cannot specify this. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The member entity whose data is being modified. Servers cannot specify this." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MemberEntity = { "MemberEntity", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateLobbyRequest, MemberEntity), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MemberEntity_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MemberEntity_MetaData)) };
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MembershipLock_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MembershipLock_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * A setting indicating whether the lobby is locked. May be 'Unlocked' or 'Locked'. When Locked new members are not allowed\n     * to join. Defaults to 'Unlocked' on creation. Can only be changed by the lobby owner.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A setting indicating whether the lobby is locked. May be 'Unlocked' or 'Locked'. When Locked new members are not allowed\nto join. Defaults to 'Unlocked' on creation. Can only be changed by the lobby owner." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MembershipLock = { "MembershipLock", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateLobbyRequest, MembershipLock), Z_Construct_UEnum_PlayFab_EMembershipLock, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MembershipLock_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MembershipLock_MetaData)) }; // 2068437401
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_Owner_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The lobby owner. Optional. Set to transfer ownership of the lobby. If client - owned and 'Automatic' - The Lobby service\n     * will automatically assign another connected owner when the current owner leaves or disconnects. useConnections must be\n     * true. If client - owned and 'Manual' - Ownership is protected as long as the current owner is connected. If the current\n     * owner leaves or disconnects any member may set themselves as the current owner. The useConnections property must be\n     * true. If client-owned and 'None' - Any member can set ownership. The useConnections property can be either true or\n     * false. For all client-owned lobbies when the owner leaves and a new owner can not be automatically selected - The owner\n     * field is set to null. For all client-owned lobbies when the owner disconnects and a new owner can not be automatically\n     * selected - The owner field remains unchanged and the current owner retains all owner abilities for the lobby. If\n     * server-owned (must be 'Server') - Any server can set ownership. The useConnections property must be true.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The lobby owner. Optional. Set to transfer ownership of the lobby. If client - owned and 'Automatic' - The Lobby service\nwill automatically assign another connected owner when the current owner leaves or disconnects. useConnections must be\ntrue. If client - owned and 'Manual' - Ownership is protected as long as the current owner is connected. If the current\nowner leaves or disconnects any member may set themselves as the current owner. The useConnections property must be\ntrue. If client-owned and 'None' - Any member can set ownership. The useConnections property can be either true or\nfalse. For all client-owned lobbies when the owner leaves and a new owner can not be automatically selected - The owner\nfield is set to null. For all client-owned lobbies when the owner disconnects and a new owner can not be automatically\nselected - The owner field remains unchanged and the current owner retains all owner abilities for the lobby. If\nserver-owned (must be 'Server') - Any server can set ownership. The useConnections property must be true." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_Owner = { "Owner", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateLobbyRequest, Owner), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_Owner_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_Owner_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_SearchData_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The public key-value pairs which allow queries to differentiate between lobbies. Optional. Sets or updates key-value\n     * pairs on the lobby for use with queries. Only the current lobby owner can set search data. New keys will be added with\n     * their values and existing keys will be updated with the new values. There can be up to 30 key-value pairs stored here.\n     * Keys are of the format string_key1, string_key2... string_key30 for string values, or number_key1, number_key2, ...\n     * number_key30 for numeric values. Numeric values are floats. Values can be at most 256 characters long. The total size of\n     * all searchData values may not exceed 1024 bytes.Keys are case sensitive.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The public key-value pairs which allow queries to differentiate between lobbies. Optional. Sets or updates key-value\npairs on the lobby for use with queries. Only the current lobby owner can set search data. New keys will be added with\ntheir values and existing keys will be updated with the new values. There can be up to 30 key-value pairs stored here.\nKeys are of the format string_key1, string_key2... string_key30 for string values, or number_key1, number_key2, ...\nnumber_key30 for numeric values. Numeric values are floats. Values can be at most 256 characters long. The total size of\nall searchData values may not exceed 1024 bytes.Keys are case sensitive." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_SearchData = { "SearchData", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateLobbyRequest, SearchData), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_SearchData_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_SearchData_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_SearchDataToDelete_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The keys to delete from the lobby SearchData. Optional. Deletes key-value pairs on the lobby. Only the current lobby\n     * owner can delete search data. All the specified keys will be removed from the search data. Keys that do not exist in the\n     * lobby are a no-op.If the key to delete exists in the searchData (same request) it will result in a bad request.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The keys to delete from the lobby SearchData. Optional. Deletes key-value pairs on the lobby. Only the current lobby\nowner can delete search data. All the specified keys will be removed from the search data. Keys that do not exist in the\nlobby are a no-op.If the key to delete exists in the searchData (same request) it will result in a bad request." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_SearchDataToDelete = { "SearchDataToDelete", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateLobbyRequest, SearchDataToDelete), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_SearchDataToDelete_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_SearchDataToDelete_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_AccessPolicy_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_AccessPolicy,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_LobbyData,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_LobbyDataToDelete,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_LobbyId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MaxPlayers,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MemberData,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MemberDataToDelete,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MemberEntity,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MembershipLock_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_MembershipLock,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_Owner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_SearchData,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewProp_SearchDataToDelete,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerUpdateLobbyRequest",
		sizeof(FMultiplayerUpdateLobbyRequest),
		alignof(FMultiplayerUpdateLobbyRequest),
		Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerUpdateLobbyRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerUpdateLobbyRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerUpdateLobbyRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerUpdateLobbyAsServerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerUpdateLobbyAsServerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerUpdateLobbyAsServerRequest;
class UScriptStruct* FMultiplayerUpdateLobbyAsServerRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerUpdateLobbyAsServerRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerUpdateLobbyAsServerRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerUpdateLobbyAsServerRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerUpdateLobbyAsServerRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerUpdateLobbyAsServerRequest>()
{
	return FMultiplayerUpdateLobbyAsServerRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_LobbyId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_LobbyId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerData_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_ServerData;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerDataToDelete_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ServerDataToDelete;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerEntity_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_ServerEntity;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Preview: Request to update the serverData and serverEntity in case of migration. Only a game_server entity can update\n * this information and this is restricted to client owned lobbies which are using connections.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Preview: Request to update the serverData and serverEntity in case of migration. Only a game_server entity can update\nthis information and this is restricted to client owned lobbies which are using connections." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerUpdateLobbyAsServerRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateLobbyAsServerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_LobbyId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/** The id of the lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The id of the lobby." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_LobbyId = { "LobbyId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateLobbyAsServerRequest, LobbyId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_LobbyId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_LobbyId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_ServerData_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The private key-value pairs which are visible to all entities in the lobby and modifiable by the joined server.\n     * Optional. Sets or updates key-value pairs on the lobby. Only the current lobby lobby server can set serverData. Keys may\n     * be an arbitrary string of at most 30 characters. The total size of all serverData values may not exceed 4096 bytes.\n     * Values are not individually limited. There can be up to 30 key-value pairs stored here. Keys are case sensitive.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The private key-value pairs which are visible to all entities in the lobby and modifiable by the joined server.\nOptional. Sets or updates key-value pairs on the lobby. Only the current lobby lobby server can set serverData. Keys may\nbe an arbitrary string of at most 30 characters. The total size of all serverData values may not exceed 4096 bytes.\nValues are not individually limited. There can be up to 30 key-value pairs stored here. Keys are case sensitive." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_ServerData = { "ServerData", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateLobbyAsServerRequest, ServerData), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_ServerData_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_ServerData_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_ServerDataToDelete_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The keys to delete from the lobby serverData. Optional. Optional. Deletes key-value pairs on the lobby. Only the current\n     * joined lobby server can delete serverData. All the specified keys will be removed from the serverData. Keys that do not\n     * exist in the lobby are a no-op. If the key to delete exists in the serverData (same request) it will result in a bad\n     * request.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The keys to delete from the lobby serverData. Optional. Optional. Deletes key-value pairs on the lobby. Only the current\njoined lobby server can delete serverData. All the specified keys will be removed from the serverData. Keys that do not\nexist in the lobby are a no-op. If the key to delete exists in the serverData (same request) it will result in a bad\nrequest." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_ServerDataToDelete = { "ServerDataToDelete", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateLobbyAsServerRequest, ServerDataToDelete), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_ServerDataToDelete_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_ServerDataToDelete_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_ServerEntity_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Lobby Models" },
		{ "Comment", "/**\n     * The lobby server. Optional. Set a different server as the joined server of the lobby (there can only be 1 joined\n     * server). When changing the server the previous server will automatically be unsubscribed.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The lobby server. Optional. Set a different server as the joined server of the lobby (there can only be 1 joined\nserver). When changing the server the previous server will automatically be unsubscribed." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_ServerEntity = { "ServerEntity", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateLobbyAsServerRequest, ServerEntity), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_ServerEntity_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_ServerEntity_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_LobbyId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_ServerData,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_ServerDataToDelete,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewProp_ServerEntity,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerUpdateLobbyAsServerRequest",
		sizeof(FMultiplayerUpdateLobbyAsServerRequest),
		alignof(FMultiplayerUpdateLobbyAsServerRequest),
		Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerUpdateLobbyAsServerRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerUpdateLobbyAsServerRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerUpdateLobbyAsServerRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCancelAllMatchmakingTicketsForPlayerRequest;
class UScriptStruct* FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCancelAllMatchmakingTicketsForPlayerRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCancelAllMatchmakingTicketsForPlayerRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCancelAllMatchmakingTicketsForPlayerRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCancelAllMatchmakingTicketsForPlayerRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest>()
{
	return FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Entity_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Entity;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_QueueName;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Cancels all tickets of which the player is a member in a given queue that are not cancelled or matched. This API is\n * useful if you lose track of what tickets the player is a member of (if the title crashes for instance) and want to\n * \"reset\". The Entity field is optional if the caller is a player and defaults to that player. Players may not cancel\n * tickets for other people. The Entity field is required if the caller is a server (authenticated as the title).\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Cancels all tickets of which the player is a member in a given queue that are not cancelled or matched. This API is\nuseful if you lose track of what tickets the player is a member of (if the title crashes for instance) and want to\n\"reset\". The Entity field is optional if the caller is a player and defaults to that player. Players may not cancel\ntickets for other people. The Entity field is required if the caller is a server (authenticated as the title)." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The entity key of the player whose tickets should be canceled. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The entity key of the player whose tickets should be canceled." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity = { "Entity", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest, Entity), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue from which a player's tickets should be canceled. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue from which a player's tickets should be canceled." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCancelAllMatchmakingTicketsForPlayerRequest",
		sizeof(FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest),
		alignof(FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest),
		Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCancelAllMatchmakingTicketsForPlayerRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCancelAllMatchmakingTicketsForPlayerRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCancelAllMatchmakingTicketsForPlayerRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCancelAllMatchmakingTicketsForPlayerResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCancelAllMatchmakingTicketsForPlayerResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCancelAllMatchmakingTicketsForPlayerResult;
class UScriptStruct* FMultiplayerCancelAllMatchmakingTicketsForPlayerResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCancelAllMatchmakingTicketsForPlayerResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCancelAllMatchmakingTicketsForPlayerResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCancelAllMatchmakingTicketsForPlayerResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCancelAllMatchmakingTicketsForPlayerResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCancelAllMatchmakingTicketsForPlayerResult>()
{
	return FMultiplayerCancelAllMatchmakingTicketsForPlayerResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCancelAllMatchmakingTicketsForPlayerResult>();
	}
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCancelAllMatchmakingTicketsForPlayerResult",
		sizeof(FMultiplayerCancelAllMatchmakingTicketsForPlayerResult),
		alignof(FMultiplayerCancelAllMatchmakingTicketsForPlayerResult),
		nullptr,
		0,
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCancelAllMatchmakingTicketsForPlayerResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCancelAllMatchmakingTicketsForPlayerResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCancelAllMatchmakingTicketsForPlayerResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCancelAllServerBackfillTicketsForPlayerRequest;
class UScriptStruct* FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCancelAllServerBackfillTicketsForPlayerRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCancelAllServerBackfillTicketsForPlayerRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCancelAllServerBackfillTicketsForPlayerRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCancelAllServerBackfillTicketsForPlayerRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest>()
{
	return FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Entity_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Entity;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_QueueName;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Cancels all backfill tickets of which the player is a member in a given queue that are not cancelled or matched. This\n * API is useful if you lose track of what tickets the player is a member of (if the server crashes for instance) and want\n * to \"reset\".\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Cancels all backfill tickets of which the player is a member in a given queue that are not cancelled or matched. This\nAPI is useful if you lose track of what tickets the player is a member of (if the server crashes for instance) and want\nto \"reset\"." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The entity key of the player whose backfill tickets should be canceled. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The entity key of the player whose backfill tickets should be canceled." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity = { "Entity", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest, Entity), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue from which a player's backfill tickets should be canceled. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue from which a player's backfill tickets should be canceled." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCancelAllServerBackfillTicketsForPlayerRequest",
		sizeof(FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest),
		alignof(FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest),
		Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCancelAllServerBackfillTicketsForPlayerRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCancelAllServerBackfillTicketsForPlayerRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCancelAllServerBackfillTicketsForPlayerRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCancelAllServerBackfillTicketsForPlayerResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCancelAllServerBackfillTicketsForPlayerResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCancelAllServerBackfillTicketsForPlayerResult;
class UScriptStruct* FMultiplayerCancelAllServerBackfillTicketsForPlayerResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCancelAllServerBackfillTicketsForPlayerResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCancelAllServerBackfillTicketsForPlayerResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCancelAllServerBackfillTicketsForPlayerResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCancelAllServerBackfillTicketsForPlayerResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCancelAllServerBackfillTicketsForPlayerResult>()
{
	return FMultiplayerCancelAllServerBackfillTicketsForPlayerResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCancelAllServerBackfillTicketsForPlayerResult>();
	}
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCancelAllServerBackfillTicketsForPlayerResult",
		sizeof(FMultiplayerCancelAllServerBackfillTicketsForPlayerResult),
		alignof(FMultiplayerCancelAllServerBackfillTicketsForPlayerResult),
		nullptr,
		0,
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCancelAllServerBackfillTicketsForPlayerResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCancelAllServerBackfillTicketsForPlayerResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCancelAllServerBackfillTicketsForPlayerResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCancelMatchmakingTicketRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCancelMatchmakingTicketRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCancelMatchmakingTicketRequest;
class UScriptStruct* FMultiplayerCancelMatchmakingTicketRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCancelMatchmakingTicketRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCancelMatchmakingTicketRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCancelMatchmakingTicketRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCancelMatchmakingTicketRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCancelMatchmakingTicketRequest>()
{
	return FMultiplayerCancelMatchmakingTicketRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_QueueName;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_TicketId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_TicketId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Only servers and ticket members can cancel a ticket. The ticket can be in five different states when it is cancelled. 1:\n * the ticket is waiting for members to join it, and it has not started matching. If the ticket is cancelled at this stage,\n * it will never match. 2: the ticket is matching. If the ticket is cancelled, it will stop matching. 3: the ticket is\n * matched. A matched ticket cannot be cancelled. 4: the ticket is already cancelled and nothing happens. 5: the ticket is\n * waiting for a server. If the ticket is cancelled, server allocation will be stopped. A server may still be allocated due\n * to a race condition, but that will not be reflected in the ticket. There may be race conditions between the ticket\n * getting matched and the client making a cancellation request. The client must handle the possibility that the cancel\n * request fails if a match is found before the cancellation request is processed. We do not allow resubmitting a cancelled\n * ticket because players must consent to enter matchmaking again. Create a new ticket instead.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Only servers and ticket members can cancel a ticket. The ticket can be in five different states when it is cancelled. 1:\nthe ticket is waiting for members to join it, and it has not started matching. If the ticket is cancelled at this stage,\nit will never match. 2: the ticket is matching. If the ticket is cancelled, it will stop matching. 3: the ticket is\nmatched. A matched ticket cannot be cancelled. 4: the ticket is already cancelled and nothing happens. 5: the ticket is\nwaiting for a server. If the ticket is cancelled, server allocation will be stopped. A server may still be allocated due\nto a race condition, but that will not be reflected in the ticket. There may be race conditions between the ticket\ngetting matched and the client making a cancellation request. The client must handle the possibility that the cancel\nrequest fails if a match is found before the cancellation request is processed. We do not allow resubmitting a cancelled\nticket because players must consent to enter matchmaking again. Create a new ticket instead." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCancelMatchmakingTicketRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCancelMatchmakingTicketRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue the ticket is in. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue the ticket is in." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCancelMatchmakingTicketRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_TicketId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of the ticket to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of the ticket to find a match for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_TicketId = { "TicketId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCancelMatchmakingTicketRequest, TicketId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_TicketId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_TicketId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_QueueName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_TicketId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCancelMatchmakingTicketRequest",
		sizeof(FMultiplayerCancelMatchmakingTicketRequest),
		alignof(FMultiplayerCancelMatchmakingTicketRequest),
		Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCancelMatchmakingTicketRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCancelMatchmakingTicketRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCancelMatchmakingTicketRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCancelMatchmakingTicketResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCancelMatchmakingTicketResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCancelMatchmakingTicketResult;
class UScriptStruct* FMultiplayerCancelMatchmakingTicketResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCancelMatchmakingTicketResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCancelMatchmakingTicketResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCancelMatchmakingTicketResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCancelMatchmakingTicketResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCancelMatchmakingTicketResult>()
{
	return FMultiplayerCancelMatchmakingTicketResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCancelMatchmakingTicketResult>();
	}
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCancelMatchmakingTicketResult",
		sizeof(FMultiplayerCancelMatchmakingTicketResult),
		alignof(FMultiplayerCancelMatchmakingTicketResult),
		nullptr,
		0,
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCancelMatchmakingTicketResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCancelMatchmakingTicketResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCancelMatchmakingTicketResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCancelServerBackfillTicketRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCancelServerBackfillTicketRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCancelServerBackfillTicketRequest;
class UScriptStruct* FMultiplayerCancelServerBackfillTicketRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCancelServerBackfillTicketRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCancelServerBackfillTicketRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCancelServerBackfillTicketRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCancelServerBackfillTicketRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCancelServerBackfillTicketRequest>()
{
	return FMultiplayerCancelServerBackfillTicketRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_QueueName;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_TicketId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_TicketId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Only servers can cancel a backfill ticket. The ticket can be in three different states when it is cancelled. 1: the\n * ticket is matching. If the ticket is cancelled, it will stop matching. 2: the ticket is matched. A matched ticket cannot\n * be cancelled. 3: the ticket is already cancelled and nothing happens. There may be race conditions between the ticket\n * getting matched and the server making a cancellation request. The server must handle the possibility that the cancel\n * request fails if a match is found before the cancellation request is processed. We do not allow resubmitting a cancelled\n * ticket. Create a new ticket instead.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Only servers can cancel a backfill ticket. The ticket can be in three different states when it is cancelled. 1: the\nticket is matching. If the ticket is cancelled, it will stop matching. 2: the ticket is matched. A matched ticket cannot\nbe cancelled. 3: the ticket is already cancelled and nothing happens. There may be race conditions between the ticket\ngetting matched and the server making a cancellation request. The server must handle the possibility that the cancel\nrequest fails if a match is found before the cancellation request is processed. We do not allow resubmitting a cancelled\nticket. Create a new ticket instead." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCancelServerBackfillTicketRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCancelServerBackfillTicketRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue the ticket is in. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue the ticket is in." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCancelServerBackfillTicketRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_QueueName_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_TicketId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of the ticket to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of the ticket to find a match for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_TicketId = { "TicketId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCancelServerBackfillTicketRequest, TicketId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_TicketId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_TicketId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_QueueName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_TicketId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCancelServerBackfillTicketRequest",
		sizeof(FMultiplayerCancelServerBackfillTicketRequest),
		alignof(FMultiplayerCancelServerBackfillTicketRequest),
		Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCancelServerBackfillTicketRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCancelServerBackfillTicketRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCancelServerBackfillTicketRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCancelServerBackfillTicketResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCancelServerBackfillTicketResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCancelServerBackfillTicketResult;
class UScriptStruct* FMultiplayerCancelServerBackfillTicketResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCancelServerBackfillTicketResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCancelServerBackfillTicketResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCancelServerBackfillTicketResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCancelServerBackfillTicketResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCancelServerBackfillTicketResult>()
{
	return FMultiplayerCancelServerBackfillTicketResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCancelServerBackfillTicketResult>();
	}
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCancelServerBackfillTicketResult",
		sizeof(FMultiplayerCancelServerBackfillTicketResult),
		alignof(FMultiplayerCancelServerBackfillTicketResult),
		nullptr,
		0,
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCancelServerBackfillTicketResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCancelServerBackfillTicketResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCancelServerBackfillTicketResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCreateMatchmakingTicketRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCreateMatchmakingTicketRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCreateMatchmakingTicketRequest;
class UScriptStruct* FMultiplayerCreateMatchmakingTicketRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateMatchmakingTicketRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCreateMatchmakingTicketRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateMatchmakingTicketRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCreateMatchmakingTicketRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateMatchmakingTicketRequest>()
{
	return FMultiplayerCreateMatchmakingTicketRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Creator_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Creator;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GiveUpAfterSeconds_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_GiveUpAfterSeconds;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_MembersToMatchWith_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MembersToMatchWith_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_MembersToMatchWith;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_QueueName;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** The client specifies the creator's attributes and optionally a list of other users to match with. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The client specifies the creator's attributes and optionally a list of other users to match with." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateMatchmakingTicketRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_Creator_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The User who created this ticket. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The User who created this ticket." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_Creator = { "Creator", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateMatchmakingTicketRequest, Creator), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_Creator_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_Creator_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateMatchmakingTicketRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** How long to attempt matching this ticket in seconds. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "How long to attempt matching this ticket in seconds." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds = { "GiveUpAfterSeconds", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateMatchmakingTicketRequest, GiveUpAfterSeconds), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_MembersToMatchWith_Inner = { "MembersToMatchWith", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_MembersToMatchWith_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** A list of Entity Keys of other users to match with. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A list of Entity Keys of other users to match with." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_MembersToMatchWith = { "MembersToMatchWith", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateMatchmakingTicketRequest, MembersToMatchWith), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_MembersToMatchWith_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_MembersToMatchWith_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of a match queue. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of a match queue." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateMatchmakingTicketRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_Creator,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_MembersToMatchWith_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_MembersToMatchWith,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_QueueName,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCreateMatchmakingTicketRequest",
		sizeof(FMultiplayerCreateMatchmakingTicketRequest),
		alignof(FMultiplayerCreateMatchmakingTicketRequest),
		Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateMatchmakingTicketRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCreateMatchmakingTicketRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCreateMatchmakingTicketRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCreateMatchmakingTicketResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCreateMatchmakingTicketResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCreateMatchmakingTicketResult;
class UScriptStruct* FMultiplayerCreateMatchmakingTicketResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateMatchmakingTicketResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCreateMatchmakingTicketResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateMatchmakingTicketResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCreateMatchmakingTicketResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateMatchmakingTicketResult>()
{
	return FMultiplayerCreateMatchmakingTicketResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_TicketId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_TicketId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateMatchmakingTicketResult>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::NewProp_TicketId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of the ticket to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of the ticket to find a match for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::NewProp_TicketId = { "TicketId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateMatchmakingTicketResult, TicketId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::NewProp_TicketId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::NewProp_TicketId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::NewProp_TicketId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCreateMatchmakingTicketResult",
		sizeof(FMultiplayerCreateMatchmakingTicketResult),
		alignof(FMultiplayerCreateMatchmakingTicketResult),
		Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateMatchmakingTicketResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCreateMatchmakingTicketResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCreateMatchmakingTicketResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCreateServerBackfillTicketRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCreateServerBackfillTicketRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCreateServerBackfillTicketRequest;
class UScriptStruct* FMultiplayerCreateServerBackfillTicketRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateServerBackfillTicketRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCreateServerBackfillTicketRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateServerBackfillTicketRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCreateServerBackfillTicketRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateServerBackfillTicketRequest>()
{
	return FMultiplayerCreateServerBackfillTicketRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GiveUpAfterSeconds_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_GiveUpAfterSeconds;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Members_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Members_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_Members;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_QueueName;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerDetails_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_ServerDetails;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** The server specifies all the members, their teams and their attributes, and the server details if applicable. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The server specifies all the members, their teams and their attributes, and the server details if applicable." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateServerBackfillTicketRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateServerBackfillTicketRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_GiveUpAfterSeconds_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** How long to attempt matching this ticket in seconds. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "How long to attempt matching this ticket in seconds." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_GiveUpAfterSeconds = { "GiveUpAfterSeconds", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateServerBackfillTicketRequest, GiveUpAfterSeconds), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_GiveUpAfterSeconds_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_GiveUpAfterSeconds_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_Members_Inner = { "Members", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_Members_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The users who will be part of this ticket, along with their team assignments. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The users who will be part of this ticket, along with their team assignments." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_Members = { "Members", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateServerBackfillTicketRequest, Members), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_Members_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_Members_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of a match queue. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of a match queue." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateServerBackfillTicketRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_QueueName_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_ServerDetails_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The details of the server the members are connected to. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The details of the server the members are connected to." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_ServerDetails = { "ServerDetails", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateServerBackfillTicketRequest, ServerDetails), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_ServerDetails_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_ServerDetails_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_GiveUpAfterSeconds,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_Members_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_Members,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_QueueName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_ServerDetails,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCreateServerBackfillTicketRequest",
		sizeof(FMultiplayerCreateServerBackfillTicketRequest),
		alignof(FMultiplayerCreateServerBackfillTicketRequest),
		Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateServerBackfillTicketRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCreateServerBackfillTicketRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCreateServerBackfillTicketRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCreateServerBackfillTicketResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCreateServerBackfillTicketResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCreateServerBackfillTicketResult;
class UScriptStruct* FMultiplayerCreateServerBackfillTicketResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateServerBackfillTicketResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCreateServerBackfillTicketResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateServerBackfillTicketResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCreateServerBackfillTicketResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateServerBackfillTicketResult>()
{
	return FMultiplayerCreateServerBackfillTicketResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_TicketId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_TicketId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateServerBackfillTicketResult>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::NewProp_TicketId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of the ticket to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of the ticket to find a match for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::NewProp_TicketId = { "TicketId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateServerBackfillTicketResult, TicketId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::NewProp_TicketId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::NewProp_TicketId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::NewProp_TicketId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCreateServerBackfillTicketResult",
		sizeof(FMultiplayerCreateServerBackfillTicketResult),
		alignof(FMultiplayerCreateServerBackfillTicketResult),
		Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateServerBackfillTicketResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCreateServerBackfillTicketResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCreateServerBackfillTicketResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCreateServerMatchmakingTicketRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCreateServerMatchmakingTicketRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCreateServerMatchmakingTicketRequest;
class UScriptStruct* FMultiplayerCreateServerMatchmakingTicketRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateServerMatchmakingTicketRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCreateServerMatchmakingTicketRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateServerMatchmakingTicketRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCreateServerMatchmakingTicketRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateServerMatchmakingTicketRequest>()
{
	return FMultiplayerCreateServerMatchmakingTicketRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GiveUpAfterSeconds_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_GiveUpAfterSeconds;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Members_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Members_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_Members;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_QueueName;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** The server specifies all the members and their attributes. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The server specifies all the members and their attributes." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateServerMatchmakingTicketRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateServerMatchmakingTicketRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** How long to attempt matching this ticket in seconds. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "How long to attempt matching this ticket in seconds." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds = { "GiveUpAfterSeconds", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateServerMatchmakingTicketRequest, GiveUpAfterSeconds), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_Members_Inner = { "Members", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_Members_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The users who will be part of this ticket. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The users who will be part of this ticket." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_Members = { "Members", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateServerMatchmakingTicketRequest, Members), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_Members_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_Members_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of a match queue. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of a match queue." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateServerMatchmakingTicketRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_Members_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_Members,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_QueueName,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCreateServerMatchmakingTicketRequest",
		sizeof(FMultiplayerCreateServerMatchmakingTicketRequest),
		alignof(FMultiplayerCreateServerMatchmakingTicketRequest),
		Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateServerMatchmakingTicketRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCreateServerMatchmakingTicketRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCreateServerMatchmakingTicketRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetMatchRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetMatchRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetMatchRequest;
class UScriptStruct* FMultiplayerGetMatchRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetMatchRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetMatchRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetMatchRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetMatchRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetMatchRequest>()
{
	return FMultiplayerGetMatchRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_EscapeObject_MetaData[];
#endif
		static void NewProp_EscapeObject_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_EscapeObject;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MatchId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_MatchId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_QueueName;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ReturnMemberAttributes_MetaData[];
#endif
		static void NewProp_ReturnMemberAttributes_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_ReturnMemberAttributes;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * When matchmaking has successfully matched together a collection of tickets, it produces a 'match' with an Id. The match\n * contains all of the players that were matched together, and their team assigments. Only servers and ticket members can\n * get the match.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When matchmaking has successfully matched together a collection of tickets, it produces a 'match' with an Id. The match\ncontains all of the players that were matched together, and their team assigments. Only servers and ticket members can\nget the match." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetMatchRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_EscapeObject_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/**\n     * Determines whether the matchmaking attributes will be returned as an escaped JSON string or as an un-escaped JSON\n     * object.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Determines whether the matchmaking attributes will be returned as an escaped JSON string or as an un-escaped JSON\nobject." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_EscapeObject_SetBit(void* Obj)
	{
		((FMultiplayerGetMatchRequest*)Obj)->EscapeObject = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_EscapeObject = { "EscapeObject", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerGetMatchRequest), &Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_EscapeObject_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_EscapeObject_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_EscapeObject_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_MatchId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of a match. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of a match." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_MatchId = { "MatchId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchRequest, MatchId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_MatchId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_MatchId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue to join. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue to join." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_QueueName_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_ReturnMemberAttributes_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** Determines whether the matchmaking attributes for each user should be returned in the response for match request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Determines whether the matchmaking attributes for each user should be returned in the response for match request." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_ReturnMemberAttributes_SetBit(void* Obj)
	{
		((FMultiplayerGetMatchRequest*)Obj)->ReturnMemberAttributes = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_ReturnMemberAttributes = { "ReturnMemberAttributes", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerGetMatchRequest), &Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_ReturnMemberAttributes_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_ReturnMemberAttributes_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_ReturnMemberAttributes_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_EscapeObject,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_MatchId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_QueueName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_ReturnMemberAttributes,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetMatchRequest",
		sizeof(FMultiplayerGetMatchRequest),
		alignof(FMultiplayerGetMatchRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetMatchRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetMatchRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetMatchRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetMatchResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetMatchResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetMatchResult;
class UScriptStruct* FMultiplayerGetMatchResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetMatchResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetMatchResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetMatchResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetMatchResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetMatchResult>()
{
	return FMultiplayerGetMatchResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ArrangementString_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ArrangementString;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MatchId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_MatchId;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Members_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Members_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_Members;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_RegionPreferences_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_RegionPreferences;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerDetails_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_ServerDetails;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetMatchResult>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_ArrangementString_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** A string that is used by players that are matched together to join an arranged lobby. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A string that is used by players that are matched together to join an arranged lobby." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_ArrangementString = { "ArrangementString", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchResult, ArrangementString), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_ArrangementString_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_ArrangementString_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_MatchId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of a match. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of a match." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_MatchId = { "MatchId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchResult, MatchId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_MatchId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_MatchId_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_Members_Inner = { "Members", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_Members_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** A list of Users that are matched together, along with their team assignments. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A list of Users that are matched together, along with their team assignments." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_Members = { "Members", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchResult, Members), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_Members_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_Members_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_RegionPreferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/**\n     * A list of regions that the match could be played in sorted by preference. This value is only set if the queue has a\n     * region selection rule.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A list of regions that the match could be played in sorted by preference. This value is only set if the queue has a\nregion selection rule." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_RegionPreferences = { "RegionPreferences", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchResult, RegionPreferences), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_RegionPreferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_RegionPreferences_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_ServerDetails_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The details of the server that the match has been allocated to. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The details of the server that the match has been allocated to." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_ServerDetails = { "ServerDetails", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchResult, ServerDetails), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_ServerDetails_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_ServerDetails_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_ArrangementString,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_MatchId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_Members_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_Members,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_RegionPreferences,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_ServerDetails,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetMatchResult",
		sizeof(FMultiplayerGetMatchResult),
		alignof(FMultiplayerGetMatchResult),
		Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMatchResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetMatchResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetMatchResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetMatchResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetMatchmakingTicketRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetMatchmakingTicketRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetMatchmakingTicketRequest;
class UScriptStruct* FMultiplayerGetMatchmakingTicketRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetMatchmakingTicketRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetMatchmakingTicketRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetMatchmakingTicketRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetMatchmakingTicketRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetMatchmakingTicketRequest>()
{
	return FMultiplayerGetMatchmakingTicketRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_EscapeObject_MetaData[];
#endif
		static void NewProp_EscapeObject_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_EscapeObject;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_QueueName;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_TicketId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_TicketId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * The ticket includes the invited players, their attributes if they have joined, the ticket status, the match Id when\n * applicable, etc. Only servers, the ticket creator and the invited players can get the ticket.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ticket includes the invited players, their attributes if they have joined, the ticket status, the match Id when\napplicable, etc. Only servers, the ticket creator and the invited players can get the ticket." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetMatchmakingTicketRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_EscapeObject_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/**\n     * Determines whether the matchmaking attributes will be returned as an escaped JSON string or as an un-escaped JSON\n     * object.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Determines whether the matchmaking attributes will be returned as an escaped JSON string or as an un-escaped JSON\nobject." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_EscapeObject_SetBit(void* Obj)
	{
		((FMultiplayerGetMatchmakingTicketRequest*)Obj)->EscapeObject = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_EscapeObject = { "EscapeObject", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerGetMatchmakingTicketRequest), &Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_EscapeObject_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_EscapeObject_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_EscapeObject_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue to find a match for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_TicketId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of the ticket to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of the ticket to find a match for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_TicketId = { "TicketId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketRequest, TicketId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_TicketId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_TicketId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_EscapeObject,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_QueueName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_TicketId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetMatchmakingTicketRequest",
		sizeof(FMultiplayerGetMatchmakingTicketRequest),
		alignof(FMultiplayerGetMatchmakingTicketRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetMatchmakingTicketRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetMatchmakingTicketRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetMatchmakingTicketRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetMatchmakingTicketResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetMatchmakingTicketResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetMatchmakingTicketResult;
class UScriptStruct* FMultiplayerGetMatchmakingTicketResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetMatchmakingTicketResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetMatchmakingTicketResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetMatchmakingTicketResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetMatchmakingTicketResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetMatchmakingTicketResult>()
{
	return FMultiplayerGetMatchmakingTicketResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CancellationReasonString_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_CancellationReasonString;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ChangeNumber_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_ChangeNumber;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Created_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Created;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Creator_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Creator;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GiveUpAfterSeconds_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_GiveUpAfterSeconds;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MatchId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_MatchId;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Members_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Members_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_Members;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_MembersToMatchWith_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MembersToMatchWith_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_MembersToMatchWith;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_QueueName;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Status_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Status;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_TicketId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_TicketId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetMatchmakingTicketResult>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_CancellationReasonString_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/**\n     * The reason why the current ticket was canceled. This field is only set if the ticket is in canceled state. Please retry\n     * if CancellationReason is RetryRequired.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The reason why the current ticket was canceled. This field is only set if the ticket is in canceled state. Please retry\nif CancellationReason is RetryRequired." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_CancellationReasonString = { "CancellationReasonString", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, CancellationReasonString), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_CancellationReasonString_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_CancellationReasonString_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_ChangeNumber_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** Change number used for differentiating older matchmaking status updates from newer ones. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Change number used for differentiating older matchmaking status updates from newer ones." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_ChangeNumber = { "ChangeNumber", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, ChangeNumber), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_ChangeNumber_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_ChangeNumber_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Created_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The server date and time at which ticket was created. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The server date and time at which ticket was created." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Created = { "Created", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, Created), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Created_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Created_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Creator_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Creator's entity key. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Creator's entity key." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Creator = { "Creator", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, Creator), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Creator_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Creator_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_GiveUpAfterSeconds_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** How long to attempt matching this ticket in seconds. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "How long to attempt matching this ticket in seconds." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_GiveUpAfterSeconds = { "GiveUpAfterSeconds", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, GiveUpAfterSeconds), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_GiveUpAfterSeconds_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_GiveUpAfterSeconds_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MatchId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of a match. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of a match." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MatchId = { "MatchId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, MatchId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MatchId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MatchId_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Members_Inner = { "Members", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Members_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** A list of Users that have joined this ticket. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A list of Users that have joined this ticket." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Members = { "Members", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, Members), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Members_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Members_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MembersToMatchWith_Inner = { "MembersToMatchWith", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MembersToMatchWith_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** A list of PlayFab Ids of Users to match with. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A list of PlayFab Ids of Users to match with." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MembersToMatchWith = { "MembersToMatchWith", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, MembersToMatchWith), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MembersToMatchWith_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MembersToMatchWith_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of a match queue. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of a match queue." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_QueueName_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Status_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/**\n     * The current ticket status. Possible values are: WaitingForPlayers, WaitingForMatch, WaitingForServer, Canceled and\n     * Matched.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The current ticket status. Possible values are: WaitingForPlayers, WaitingForMatch, WaitingForServer, Canceled and\nMatched." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Status = { "Status", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, Status), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Status_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Status_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_TicketId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of the ticket to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of the ticket to find a match for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_TicketId = { "TicketId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, TicketId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_TicketId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_TicketId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_CancellationReasonString,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_ChangeNumber,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Created,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Creator,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_GiveUpAfterSeconds,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MatchId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Members_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Members,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MembersToMatchWith_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MembersToMatchWith,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_QueueName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Status,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_TicketId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetMatchmakingTicketResult",
		sizeof(FMultiplayerGetMatchmakingTicketResult),
		alignof(FMultiplayerGetMatchmakingTicketResult),
		Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetMatchmakingTicketResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetMatchmakingTicketResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetMatchmakingTicketResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetQueueStatisticsRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetQueueStatisticsRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetQueueStatisticsRequest;
class UScriptStruct* FMultiplayerGetQueueStatisticsRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetQueueStatisticsRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetQueueStatisticsRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetQueueStatisticsRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetQueueStatisticsRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetQueueStatisticsRequest>()
{
	return FMultiplayerGetQueueStatisticsRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_QueueName;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Returns the matchmaking statistics for a queue. These include the number of players matching and the statistics related\n * to the time to match statistics in seconds (average and percentiles). Statistics are refreshed once every 5 minutes.\n * Servers can access all statistics no matter what the ClientStatisticsVisibility is configured to. Clients can access\n * statistics according to the ClientStatisticsVisibility. Client requests are forbidden if all visibility fields are\n * false.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns the matchmaking statistics for a queue. These include the number of players matching and the statistics related\nto the time to match statistics in seconds (average and percentiles). Statistics are refreshed once every 5 minutes.\nServers can access all statistics no matter what the ClientStatisticsVisibility is configured to. Clients can access\nstatistics according to the ClientStatisticsVisibility. Client requests are forbidden if all visibility fields are\nfalse." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetQueueStatisticsRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetQueueStatisticsRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetQueueStatisticsRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_QueueName_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_QueueName,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetQueueStatisticsRequest",
		sizeof(FMultiplayerGetQueueStatisticsRequest),
		alignof(FMultiplayerGetQueueStatisticsRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetQueueStatisticsRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetQueueStatisticsRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetQueueStatisticsRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetQueueStatisticsResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetQueueStatisticsResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetQueueStatisticsResult;
class UScriptStruct* FMultiplayerGetQueueStatisticsResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetQueueStatisticsResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetQueueStatisticsResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetQueueStatisticsResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetQueueStatisticsResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetQueueStatisticsResult>()
{
	return FMultiplayerGetQueueStatisticsResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_NumberOfPlayersMatching_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_NumberOfPlayersMatching;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_TimeToMatchStatisticsInSeconds_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_TimeToMatchStatisticsInSeconds;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetQueueStatisticsResult>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_NumberOfPlayersMatching_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The current number of players in the matchmaking queue, who are waiting to be matched. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The current number of players in the matchmaking queue, who are waiting to be matched." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_NumberOfPlayersMatching = { "NumberOfPlayersMatching", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetQueueStatisticsResult, NumberOfPlayersMatching), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_NumberOfPlayersMatching_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_NumberOfPlayersMatching_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_TimeToMatchStatisticsInSeconds_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** Statistics representing the time (in seconds) it takes for tickets to find a match. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Statistics representing the time (in seconds) it takes for tickets to find a match." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_TimeToMatchStatisticsInSeconds = { "TimeToMatchStatisticsInSeconds", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetQueueStatisticsResult, TimeToMatchStatisticsInSeconds), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_TimeToMatchStatisticsInSeconds_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_TimeToMatchStatisticsInSeconds_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_NumberOfPlayersMatching,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_TimeToMatchStatisticsInSeconds,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetQueueStatisticsResult",
		sizeof(FMultiplayerGetQueueStatisticsResult),
		alignof(FMultiplayerGetQueueStatisticsResult),
		Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetQueueStatisticsResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetQueueStatisticsResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetQueueStatisticsResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetServerBackfillTicketRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetServerBackfillTicketRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetServerBackfillTicketRequest;
class UScriptStruct* FMultiplayerGetServerBackfillTicketRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetServerBackfillTicketRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetServerBackfillTicketRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetServerBackfillTicketRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetServerBackfillTicketRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetServerBackfillTicketRequest>()
{
	return FMultiplayerGetServerBackfillTicketRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_EscapeObject_MetaData[];
#endif
		static void NewProp_EscapeObject_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_EscapeObject;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_QueueName;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_TicketId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_TicketId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * The ticket includes the players, their attributes, their teams, the ticket status, the match Id and the server details\n * when applicable, etc. Only servers can get the ticket.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ticket includes the players, their attributes, their teams, the ticket status, the match Id and the server details\nwhen applicable, etc. Only servers can get the ticket." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetServerBackfillTicketRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_EscapeObject_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/**\n     * Determines whether the matchmaking attributes will be returned as an escaped JSON string or as an un-escaped JSON\n     * object.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Determines whether the matchmaking attributes will be returned as an escaped JSON string or as an un-escaped JSON\nobject." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_EscapeObject_SetBit(void* Obj)
	{
		((FMultiplayerGetServerBackfillTicketRequest*)Obj)->EscapeObject = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_EscapeObject = { "EscapeObject", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerGetServerBackfillTicketRequest), &Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_EscapeObject_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_EscapeObject_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_EscapeObject_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue to find a match for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_QueueName_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_TicketId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of the ticket to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of the ticket to find a match for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_TicketId = { "TicketId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketRequest, TicketId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_TicketId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_TicketId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_EscapeObject,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_QueueName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_TicketId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetServerBackfillTicketRequest",
		sizeof(FMultiplayerGetServerBackfillTicketRequest),
		alignof(FMultiplayerGetServerBackfillTicketRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetServerBackfillTicketRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetServerBackfillTicketRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetServerBackfillTicketRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetServerBackfillTicketResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetServerBackfillTicketResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetServerBackfillTicketResult;
class UScriptStruct* FMultiplayerGetServerBackfillTicketResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetServerBackfillTicketResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetServerBackfillTicketResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetServerBackfillTicketResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetServerBackfillTicketResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetServerBackfillTicketResult>()
{
	return FMultiplayerGetServerBackfillTicketResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CancellationReasonString_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_CancellationReasonString;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Created_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Created;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GiveUpAfterSeconds_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_GiveUpAfterSeconds;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MatchId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_MatchId;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Members_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Members_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_Members;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_QueueName;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerDetails_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_ServerDetails;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Status_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Status;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_TicketId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_TicketId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetServerBackfillTicketResult>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_CancellationReasonString_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The reason why the current ticket was canceled. This field is only set if the ticket is in canceled state. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The reason why the current ticket was canceled. This field is only set if the ticket is in canceled state." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_CancellationReasonString = { "CancellationReasonString", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketResult, CancellationReasonString), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_CancellationReasonString_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_CancellationReasonString_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Created_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The server date and time at which ticket was created. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The server date and time at which ticket was created." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Created = { "Created", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketResult, Created), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Created_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Created_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_GiveUpAfterSeconds_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** How long to attempt matching this ticket in seconds. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "How long to attempt matching this ticket in seconds." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_GiveUpAfterSeconds = { "GiveUpAfterSeconds", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketResult, GiveUpAfterSeconds), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_GiveUpAfterSeconds_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_GiveUpAfterSeconds_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_MatchId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of a match. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of a match." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_MatchId = { "MatchId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketResult, MatchId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_MatchId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_MatchId_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Members_Inner = { "Members", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Members_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** A list of Users that are part of this ticket, along with their team assignments. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A list of Users that are part of this ticket, along with their team assignments." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Members = { "Members", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketResult, Members), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Members_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Members_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of a match queue. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of a match queue." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketResult, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_QueueName_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_ServerDetails_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The details of the server the members are connected to. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The details of the server the members are connected to." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_ServerDetails = { "ServerDetails", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketResult, ServerDetails), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_ServerDetails_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_ServerDetails_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Status_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The current ticket status. Possible values are: WaitingForMatch, Canceled and Matched. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The current ticket status. Possible values are: WaitingForMatch, Canceled and Matched." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Status = { "Status", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketResult, Status), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Status_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Status_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_TicketId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of the ticket to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of the ticket to find a match for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_TicketId = { "TicketId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketResult, TicketId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_TicketId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_TicketId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_CancellationReasonString,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Created,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_GiveUpAfterSeconds,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_MatchId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Members_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Members,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_QueueName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_ServerDetails,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Status,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_TicketId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetServerBackfillTicketResult",
		sizeof(FMultiplayerGetServerBackfillTicketResult),
		alignof(FMultiplayerGetServerBackfillTicketResult),
		Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetServerBackfillTicketResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetServerBackfillTicketResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetServerBackfillTicketResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerJoinMatchmakingTicketRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerJoinMatchmakingTicketRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerJoinMatchmakingTicketRequest;
class UScriptStruct* FMultiplayerJoinMatchmakingTicketRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerJoinMatchmakingTicketRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerJoinMatchmakingTicketRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerJoinMatchmakingTicketRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerJoinMatchmakingTicketRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerJoinMatchmakingTicketRequest>()
{
	return FMultiplayerJoinMatchmakingTicketRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Member_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Member;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_QueueName;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_TicketId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_TicketId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Add the player to a matchmaking ticket and specify all of its matchmaking attributes. Players can join a ticket if and\n * only if their EntityKeys are already listed in the ticket's Members list. The matchmaking service automatically starts\n * matching the ticket against other matchmaking tickets once all players have joined the ticket. It is not possible to\n * join a ticket once it has started matching.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Add the player to a matchmaking ticket and specify all of its matchmaking attributes. Players can join a ticket if and\nonly if their EntityKeys are already listed in the ticket's Members list. The matchmaking service automatically starts\nmatching the ticket against other matchmaking tickets once all players have joined the ticket. It is not possible to\njoin a ticket once it has started matching." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerJoinMatchmakingTicketRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinMatchmakingTicketRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_Member_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The User who wants to join the ticket. Their Id must be listed in PlayFabIdsToMatchWith. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The User who wants to join the ticket. Their Id must be listed in PlayFabIdsToMatchWith." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_Member = { "Member", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinMatchmakingTicketRequest, Member), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_Member_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_Member_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue to join. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue to join." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinMatchmakingTicketRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_TicketId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of the ticket to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of the ticket to find a match for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_TicketId = { "TicketId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerJoinMatchmakingTicketRequest, TicketId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_TicketId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_TicketId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_Member,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_QueueName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_TicketId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerJoinMatchmakingTicketRequest",
		sizeof(FMultiplayerJoinMatchmakingTicketRequest),
		alignof(FMultiplayerJoinMatchmakingTicketRequest),
		Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerJoinMatchmakingTicketRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerJoinMatchmakingTicketRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerJoinMatchmakingTicketRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerJoinMatchmakingTicketResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerJoinMatchmakingTicketResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerJoinMatchmakingTicketResult;
class UScriptStruct* FMultiplayerJoinMatchmakingTicketResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerJoinMatchmakingTicketResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerJoinMatchmakingTicketResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerJoinMatchmakingTicketResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerJoinMatchmakingTicketResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerJoinMatchmakingTicketResult>()
{
	return FMultiplayerJoinMatchmakingTicketResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerJoinMatchmakingTicketResult>();
	}
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerJoinMatchmakingTicketResult",
		sizeof(FMultiplayerJoinMatchmakingTicketResult),
		alignof(FMultiplayerJoinMatchmakingTicketResult),
		nullptr,
		0,
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerJoinMatchmakingTicketResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerJoinMatchmakingTicketResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerJoinMatchmakingTicketResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListMatchmakingTicketsForPlayerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListMatchmakingTicketsForPlayerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListMatchmakingTicketsForPlayerRequest;
class UScriptStruct* FMultiplayerListMatchmakingTicketsForPlayerRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListMatchmakingTicketsForPlayerRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListMatchmakingTicketsForPlayerRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListMatchmakingTicketsForPlayerRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListMatchmakingTicketsForPlayerRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListMatchmakingTicketsForPlayerRequest>()
{
	return FMultiplayerListMatchmakingTicketsForPlayerRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Entity_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Entity;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_QueueName;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * If the caller is a title, the EntityKey in the request is required. If the caller is a player, then it is optional. If\n * it is provided it must match the caller's entity.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "If the caller is a title, the EntityKey in the request is required. If the caller is a player, then it is optional. If\nit is provided it must match the caller's entity." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListMatchmakingTicketsForPlayerRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListMatchmakingTicketsForPlayerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The entity key for which to find the ticket Ids. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The entity key for which to find the ticket Ids." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity = { "Entity", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListMatchmakingTicketsForPlayerRequest, Entity), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue to find a match for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListMatchmakingTicketsForPlayerRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListMatchmakingTicketsForPlayerRequest",
		sizeof(FMultiplayerListMatchmakingTicketsForPlayerRequest),
		alignof(FMultiplayerListMatchmakingTicketsForPlayerRequest),
		Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListMatchmakingTicketsForPlayerRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListMatchmakingTicketsForPlayerRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListMatchmakingTicketsForPlayerRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListMatchmakingTicketsForPlayerResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListMatchmakingTicketsForPlayerResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListMatchmakingTicketsForPlayerResult;
class UScriptStruct* FMultiplayerListMatchmakingTicketsForPlayerResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListMatchmakingTicketsForPlayerResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListMatchmakingTicketsForPlayerResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListMatchmakingTicketsForPlayerResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListMatchmakingTicketsForPlayerResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListMatchmakingTicketsForPlayerResult>()
{
	return FMultiplayerListMatchmakingTicketsForPlayerResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_TicketIds_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_TicketIds;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListMatchmakingTicketsForPlayerResult>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::NewProp_TicketIds_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The list of ticket Ids the user is a member of. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of ticket Ids the user is a member of." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::NewProp_TicketIds = { "TicketIds", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListMatchmakingTicketsForPlayerResult, TicketIds), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::NewProp_TicketIds_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::NewProp_TicketIds_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::NewProp_TicketIds,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListMatchmakingTicketsForPlayerResult",
		sizeof(FMultiplayerListMatchmakingTicketsForPlayerResult),
		alignof(FMultiplayerListMatchmakingTicketsForPlayerResult),
		Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListMatchmakingTicketsForPlayerResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListMatchmakingTicketsForPlayerResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListMatchmakingTicketsForPlayerResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListServerBackfillTicketsForPlayerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListServerBackfillTicketsForPlayerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListServerBackfillTicketsForPlayerRequest;
class UScriptStruct* FMultiplayerListServerBackfillTicketsForPlayerRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListServerBackfillTicketsForPlayerRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListServerBackfillTicketsForPlayerRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListServerBackfillTicketsForPlayerRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListServerBackfillTicketsForPlayerRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListServerBackfillTicketsForPlayerRequest>()
{
	return FMultiplayerListServerBackfillTicketsForPlayerRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Entity_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Entity;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_QueueName;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** List all server backfill ticket Ids the user is a member of. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "List all server backfill ticket Ids the user is a member of." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListServerBackfillTicketsForPlayerRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListServerBackfillTicketsForPlayerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The entity key for which to find the ticket Ids. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The entity key for which to find the ticket Ids." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity = { "Entity", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListServerBackfillTicketsForPlayerRequest, Entity), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue the tickets are in. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue the tickets are in." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListServerBackfillTicketsForPlayerRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListServerBackfillTicketsForPlayerRequest",
		sizeof(FMultiplayerListServerBackfillTicketsForPlayerRequest),
		alignof(FMultiplayerListServerBackfillTicketsForPlayerRequest),
		Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListServerBackfillTicketsForPlayerRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListServerBackfillTicketsForPlayerRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListServerBackfillTicketsForPlayerRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListServerBackfillTicketsForPlayerResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListServerBackfillTicketsForPlayerResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListServerBackfillTicketsForPlayerResult;
class UScriptStruct* FMultiplayerListServerBackfillTicketsForPlayerResult::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListServerBackfillTicketsForPlayerResult.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListServerBackfillTicketsForPlayerResult.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListServerBackfillTicketsForPlayerResult"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListServerBackfillTicketsForPlayerResult.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListServerBackfillTicketsForPlayerResult>()
{
	return FMultiplayerListServerBackfillTicketsForPlayerResult::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_TicketIds_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_TicketIds;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListServerBackfillTicketsForPlayerResult>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::NewProp_TicketIds_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The list of backfill ticket Ids the user is a member of. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of backfill ticket Ids the user is a member of." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::NewProp_TicketIds = { "TicketIds", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListServerBackfillTicketsForPlayerResult, TicketIds), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::NewProp_TicketIds_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::NewProp_TicketIds_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::NewProp_TicketIds,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListServerBackfillTicketsForPlayerResult",
		sizeof(FMultiplayerListServerBackfillTicketsForPlayerResult),
		alignof(FMultiplayerListServerBackfillTicketsForPlayerResult),
		Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListServerBackfillTicketsForPlayerResult.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListServerBackfillTicketsForPlayerResult.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListServerBackfillTicketsForPlayerResult.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerBuildAliasDetailsResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerBuildAliasDetailsResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerBuildAliasDetailsResponse;
class UScriptStruct* FMultiplayerBuildAliasDetailsResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerBuildAliasDetailsResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerBuildAliasDetailsResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerBuildAliasDetailsResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerBuildAliasDetailsResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerBuildAliasDetailsResponse>()
{
	return FMultiplayerBuildAliasDetailsResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AliasId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_AliasId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AliasName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_AliasName;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_BuildSelectionCriteria_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildSelectionCriteria_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_BuildSelectionCriteria;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "///////////////////////////////////////////////////////\n// MultiplayerServer\n//////////////////////////////////////////////////////\n" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "/\n MultiplayerServer" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerBuildAliasDetailsResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string alias Id of the alias to be created or updated. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string alias Id of the alias to be created or updated." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasId = { "AliasId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerBuildAliasDetailsResponse, AliasId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The alias name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The alias name." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasName = { "AliasName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerBuildAliasDetailsResponse, AliasName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasName_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_BuildSelectionCriteria_Inner = { "BuildSelectionCriteria", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_BuildSelectionCriteria_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Array of build selection criteria. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Array of build selection criteria." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_BuildSelectionCriteria = { "BuildSelectionCriteria", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerBuildAliasDetailsResponse, BuildSelectionCriteria), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_BuildSelectionCriteria_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_BuildSelectionCriteria_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_BuildSelectionCriteria_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_BuildSelectionCriteria,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerBuildAliasDetailsResponse",
		sizeof(FMultiplayerBuildAliasDetailsResponse),
		alignof(FMultiplayerBuildAliasDetailsResponse),
		Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerBuildAliasDetailsResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerBuildAliasDetailsResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerBuildAliasDetailsResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCreateBuildAliasRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCreateBuildAliasRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildAliasRequest;
class UScriptStruct* FMultiplayerCreateBuildAliasRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildAliasRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildAliasRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateBuildAliasRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildAliasRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateBuildAliasRequest>()
{
	return FMultiplayerCreateBuildAliasRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AliasName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_AliasName;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_BuildSelectionCriteria_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildSelectionCriteria_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_BuildSelectionCriteria;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Creates a multiplayer server build alias and returns the created alias. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Creates a multiplayer server build alias and returns the created alias." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateBuildAliasRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_AliasName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The alias name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The alias name." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_AliasName = { "AliasName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildAliasRequest, AliasName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_AliasName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_AliasName_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_Inner = { "BuildSelectionCriteria", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Array of build selection criteria. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Array of build selection criteria." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria = { "BuildSelectionCriteria", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildAliasRequest, BuildSelectionCriteria), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildAliasRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_AliasName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_CustomTags,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCreateBuildAliasRequest",
		sizeof(FMultiplayerCreateBuildAliasRequest),
		alignof(FMultiplayerCreateBuildAliasRequest),
		Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildAliasRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildAliasRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildAliasRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCreateBuildWithCustomContainerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCreateBuildWithCustomContainerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithCustomContainerRequest;
class UScriptStruct* FMultiplayerCreateBuildWithCustomContainerRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithCustomContainerRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithCustomContainerRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateBuildWithCustomContainerRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithCustomContainerRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateBuildWithCustomContainerRequest>()
{
	return FMultiplayerCreateBuildWithCustomContainerRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AreAssetsReadonly_MetaData[];
#endif
		static void NewProp_AreAssetsReadonly_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_AreAssetsReadonly;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildName;
		static const UECodeGen_Private::FBytePropertyParams NewProp_ContainerFlavor_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ContainerFlavor_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_ContainerFlavor;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ContainerImageReference_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_ContainerImageReference;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ContainerRunCommand_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ContainerRunCommand;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_GameAssetReferences_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GameAssetReferences_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_GameAssetReferences;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_GameCertificateReferences_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GameCertificateReferences_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_GameCertificateReferences;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_LinuxInstrumentationConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_LinuxInstrumentationConfiguration;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Metadata_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Metadata;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MonitoringApplicationConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_MonitoringApplicationConfiguration;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MultiplayerServerCountPerVm_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_MultiplayerServerCountPerVm;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Ports_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Ports_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_Ports;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_RegionConfigurations_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_RegionConfigurations_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_RegionConfigurations;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerResourceConstraints_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_ServerResourceConstraints;
		static const UECodeGen_Private::FBytePropertyParams NewProp_VmSize_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VmSize_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_VmSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VmStartupScriptConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_VmStartupScriptConfiguration;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Creates a multiplayer server build with a custom container and returns information about the build creation request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Creates a multiplayer server build with a custom container and returns information about the build creation request." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateBuildWithCustomContainerRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_AreAssetsReadonly_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\n     * will have the same assets mounted in the container.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\nwill have the same assets mounted in the container." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_AreAssetsReadonly_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithCustomContainerRequest*)Obj)->AreAssetsReadonly = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_AreAssetsReadonly = { "AreAssetsReadonly", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerCreateBuildWithCustomContainerRequest), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_AreAssetsReadonly_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_AreAssetsReadonly_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_AreAssetsReadonly_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_BuildName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The build name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The build name." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_BuildName = { "BuildName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, BuildName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_BuildName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_BuildName_MetaData)) };
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerFlavor_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerFlavor_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The flavor of container to create a build from. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The flavor of container to create a build from." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerFlavor = { "ContainerFlavor", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, ContainerFlavor), Z_Construct_UEnum_PlayFab_EContainerFlavor, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerFlavor_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerFlavor_MetaData)) }; // 2931123663
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerImageReference_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The container reference, consisting of the image name and tag. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The container reference, consisting of the image name and tag." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerImageReference = { "ContainerImageReference", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, ContainerImageReference), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerImageReference_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerImageReference_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerRunCommand_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The container command to run when the multiplayer server has been allocated, including any arguments. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The container command to run when the multiplayer server has been allocated, including any arguments." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerRunCommand = { "ContainerRunCommand", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, ContainerRunCommand), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerRunCommand_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerRunCommand_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameAssetReferences_Inner = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameAssetReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of game assets related to the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of game assets related to the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameAssetReferences = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, GameAssetReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameAssetReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameAssetReferences_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameCertificateReferences_Inner = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameCertificateReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game certificates for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game certificates for the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameCertificateReferences = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, GameCertificateReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameCertificateReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameCertificateReferences_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_LinuxInstrumentationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The Linux instrumentation configuration for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Linux instrumentation configuration for the build." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_LinuxInstrumentationConfiguration = { "LinuxInstrumentationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, LinuxInstrumentationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_LinuxInstrumentationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_LinuxInstrumentationConfiguration_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Metadata_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * Metadata to tag the build. The keys are case insensitive. The build metadata is made available to the server through\n     * Game Server SDK (GSDK).Constraints: Maximum number of keys: 30, Maximum key length: 50, Maximum value length: 100\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Metadata to tag the build. The keys are case insensitive. The build metadata is made available to the server through\nGame Server SDK (GSDK).Constraints: Maximum number of keys: 30, Maximum key length: 50, Maximum value length: 100" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Metadata = { "Metadata", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, Metadata), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Metadata_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Metadata_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_MonitoringApplicationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The configuration for the monitoring application on the build */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The configuration for the monitoring application on the build" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_MonitoringApplicationConfiguration = { "MonitoringApplicationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, MonitoringApplicationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_MonitoringApplicationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_MonitoringApplicationConfiguration_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The number of multiplayer servers to host on a single VM. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The number of multiplayer servers to host on a single VM." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm = { "MultiplayerServerCountPerVm", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, MultiplayerServerCountPerVm), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Ports_Inner = { "Ports", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Ports_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The ports to map the build on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ports to map the build on." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Ports = { "Ports", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, Ports), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Ports_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Ports_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_RegionConfigurations_Inner = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_RegionConfigurations_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region configurations for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region configurations for the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_RegionConfigurations = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, RegionConfigurations), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_RegionConfigurations_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_RegionConfigurations_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ServerResourceConstraints_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The resource constraints to apply to each server on the VM (EXPERIMENTAL API) */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The resource constraints to apply to each server on the VM (EXPERIMENTAL API)" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ServerResourceConstraints = { "ServerResourceConstraints", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, ServerResourceConstraints), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ServerResourceConstraints_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ServerResourceConstraints_MetaData)) };
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_VmSize_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_VmSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The VM size to create the build on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The VM size to create the build on." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_VmSize = { "VmSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, VmSize), Z_Construct_UEnum_PlayFab_EAzureVmSize, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_VmSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_VmSize_MetaData)) }; // 2933196177
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_VmStartupScriptConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The configuration for the VmStartupScript for the build */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The configuration for the VmStartupScript for the build" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_VmStartupScriptConfiguration = { "VmStartupScriptConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, VmStartupScriptConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_VmStartupScriptConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_VmStartupScriptConfiguration_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_AreAssetsReadonly,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_BuildName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerFlavor_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerFlavor,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerImageReference,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerRunCommand,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameAssetReferences_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameAssetReferences,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameCertificateReferences_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameCertificateReferences,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_LinuxInstrumentationConfiguration,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Metadata,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_MonitoringApplicationConfiguration,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Ports_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Ports,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_RegionConfigurations_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_RegionConfigurations,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ServerResourceConstraints,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_VmSize_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_VmSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_VmStartupScriptConfiguration,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCreateBuildWithCustomContainerRequest",
		sizeof(FMultiplayerCreateBuildWithCustomContainerRequest),
		alignof(FMultiplayerCreateBuildWithCustomContainerRequest),
		Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithCustomContainerRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithCustomContainerRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithCustomContainerRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCreateBuildWithCustomContainerResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCreateBuildWithCustomContainerResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithCustomContainerResponse;
class UScriptStruct* FMultiplayerCreateBuildWithCustomContainerResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithCustomContainerResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithCustomContainerResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateBuildWithCustomContainerResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithCustomContainerResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateBuildWithCustomContainerResponse>()
{
	return FMultiplayerCreateBuildWithCustomContainerResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AreAssetsReadonly_MetaData[];
#endif
		static void NewProp_AreAssetsReadonly_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_AreAssetsReadonly;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildName;
		static const UECodeGen_Private::FBytePropertyParams NewProp_ContainerFlavor_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ContainerFlavor_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_ContainerFlavor;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ContainerRunCommand_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ContainerRunCommand;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CreationTime_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_CreationTime;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomGameContainerImage_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomGameContainerImage;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_GameAssetReferences_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GameAssetReferences_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_GameAssetReferences;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_GameCertificateReferences_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GameCertificateReferences_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_GameCertificateReferences;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_LinuxInstrumentationConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_LinuxInstrumentationConfiguration;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Metadata_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Metadata;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MonitoringApplicationConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_MonitoringApplicationConfiguration;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MultiplayerServerCountPerVm_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_MultiplayerServerCountPerVm;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_OsPlatform_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_OsPlatform;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Ports_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Ports_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_Ports;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_RegionConfigurations_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_RegionConfigurations_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_RegionConfigurations;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerResourceConstraints_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_ServerResourceConstraints;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerType_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ServerType;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_UseStreamingForAssetDownloads_MetaData[];
#endif
		static void NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_UseStreamingForAssetDownloads;
		static const UECodeGen_Private::FBytePropertyParams NewProp_VmSize_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VmSize_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_VmSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VmStartupScriptConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_VmStartupScriptConfiguration;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateBuildWithCustomContainerResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_AreAssetsReadonly_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\n     * will have the same assets mounted in the container.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\nwill have the same assets mounted in the container." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_AreAssetsReadonly_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithCustomContainerResponse*)Obj)->AreAssetsReadonly = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_AreAssetsReadonly = { "AreAssetsReadonly", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerCreateBuildWithCustomContainerResponse), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_AreAssetsReadonly_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_AreAssetsReadonly_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_AreAssetsReadonly_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID. Must be unique for every build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID. Must be unique for every build." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The build name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The build name." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildName = { "BuildName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, BuildName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildName_MetaData)) };
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerFlavor_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerFlavor_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The flavor of container of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The flavor of container of the build." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerFlavor = { "ContainerFlavor", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, ContainerFlavor), Z_Construct_UEnum_PlayFab_EContainerFlavor, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerFlavor_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerFlavor_MetaData)) }; // 2931123663
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerRunCommand_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The container command to run when the multiplayer server has been allocated, including any arguments. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The container command to run when the multiplayer server has been allocated, including any arguments." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerRunCommand = { "ContainerRunCommand", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, ContainerRunCommand), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerRunCommand_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerRunCommand_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CreationTime_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The time the build was created in UTC. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The time the build was created in UTC." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CreationTime = { "CreationTime", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, CreationTime), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CreationTime_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CreationTime_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CustomGameContainerImage_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The custom game container image reference information. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The custom game container image reference information." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CustomGameContainerImage = { "CustomGameContainerImage", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, CustomGameContainerImage), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CustomGameContainerImage_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CustomGameContainerImage_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameAssetReferences_Inner = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameAssetReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game assets for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game assets for the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameAssetReferences = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, GameAssetReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameAssetReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameAssetReferences_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameCertificateReferences_Inner = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameCertificateReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game certificates for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game certificates for the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameCertificateReferences = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, GameCertificateReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameCertificateReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameCertificateReferences_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_LinuxInstrumentationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The Linux instrumentation configuration for this build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Linux instrumentation configuration for this build." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_LinuxInstrumentationConfiguration = { "LinuxInstrumentationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, LinuxInstrumentationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_LinuxInstrumentationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_LinuxInstrumentationConfiguration_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Metadata_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The metadata of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The metadata of the build." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Metadata = { "Metadata", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, Metadata), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Metadata_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Metadata_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_MonitoringApplicationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The configuration for the monitoring application for the build */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The configuration for the monitoring application for the build" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_MonitoringApplicationConfiguration = { "MonitoringApplicationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, MonitoringApplicationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_MonitoringApplicationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_MonitoringApplicationConfiguration_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The number of multiplayer servers to host on a single VM of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The number of multiplayer servers to host on a single VM of the build." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm = { "MultiplayerServerCountPerVm", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, MultiplayerServerCountPerVm), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_OsPlatform_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The OS platform used for running the game process. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The OS platform used for running the game process." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_OsPlatform = { "OsPlatform", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, OsPlatform), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_OsPlatform_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_OsPlatform_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Ports_Inner = { "Ports", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Ports_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The ports the build is mapped on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ports the build is mapped on." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Ports = { "Ports", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, Ports), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Ports_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Ports_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_RegionConfigurations_Inner = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_RegionConfigurations_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region configuration for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region configuration for the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_RegionConfigurations = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, RegionConfigurations), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_RegionConfigurations_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_RegionConfigurations_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ServerResourceConstraints_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The resource constraints to apply to each server on the VM (EXPERIMENTAL API) */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The resource constraints to apply to each server on the VM (EXPERIMENTAL API)" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ServerResourceConstraints = { "ServerResourceConstraints", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, ServerResourceConstraints), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ServerResourceConstraints_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ServerResourceConstraints_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ServerType_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The type of game server being hosted. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The type of game server being hosted." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ServerType = { "ServerType", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, ServerType), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ServerType_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ServerType_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\n     * disc.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\ndisc." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithCustomContainerResponse*)Obj)->UseStreamingForAssetDownloads = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads = { "UseStreamingForAssetDownloads", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerCreateBuildWithCustomContainerResponse), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData)) };
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_VmSize_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_VmSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The VM size the build was created on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The VM size the build was created on." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_VmSize = { "VmSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, VmSize), Z_Construct_UEnum_PlayFab_EAzureVmSize, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_VmSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_VmSize_MetaData)) }; // 2933196177
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_VmStartupScriptConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The configuration for the VmStartupScript feature for the build */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The configuration for the VmStartupScript feature for the build" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_VmStartupScriptConfiguration = { "VmStartupScriptConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, VmStartupScriptConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_VmStartupScriptConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_VmStartupScriptConfiguration_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_AreAssetsReadonly,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerFlavor_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerFlavor,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerRunCommand,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CreationTime,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CustomGameContainerImage,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameAssetReferences_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameAssetReferences,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameCertificateReferences_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameCertificateReferences,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_LinuxInstrumentationConfiguration,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Metadata,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_MonitoringApplicationConfiguration,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_OsPlatform,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Ports_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Ports,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_RegionConfigurations_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_RegionConfigurations,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ServerResourceConstraints,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ServerType,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_VmSize_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_VmSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_VmStartupScriptConfiguration,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCreateBuildWithCustomContainerResponse",
		sizeof(FMultiplayerCreateBuildWithCustomContainerResponse),
		alignof(FMultiplayerCreateBuildWithCustomContainerResponse),
		Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithCustomContainerResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithCustomContainerResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithCustomContainerResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCreateBuildWithManagedContainerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCreateBuildWithManagedContainerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithManagedContainerRequest;
class UScriptStruct* FMultiplayerCreateBuildWithManagedContainerRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithManagedContainerRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithManagedContainerRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateBuildWithManagedContainerRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithManagedContainerRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateBuildWithManagedContainerRequest>()
{
	return FMultiplayerCreateBuildWithManagedContainerRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AreAssetsReadonly_MetaData[];
#endif
		static void NewProp_AreAssetsReadonly_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_AreAssetsReadonly;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildName;
		static const UECodeGen_Private::FBytePropertyParams NewProp_ContainerFlavor_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ContainerFlavor_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_ContainerFlavor;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_GameAssetReferences_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GameAssetReferences_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_GameAssetReferences;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_GameCertificateReferences_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GameCertificateReferences_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_GameCertificateReferences;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GameWorkingDirectory_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_GameWorkingDirectory;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_InstrumentationConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_InstrumentationConfiguration;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Metadata_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Metadata;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MonitoringApplicationConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_MonitoringApplicationConfiguration;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MultiplayerServerCountPerVm_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_MultiplayerServerCountPerVm;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Ports_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Ports_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_Ports;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_RegionConfigurations_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_RegionConfigurations_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_RegionConfigurations;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerResourceConstraints_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_ServerResourceConstraints;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_StartMultiplayerServerCommand_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_StartMultiplayerServerCommand;
		static const UECodeGen_Private::FBytePropertyParams NewProp_VmSize_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VmSize_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_VmSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VmStartupScriptConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_VmStartupScriptConfiguration;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_WindowsCrashDumpConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_WindowsCrashDumpConfiguration;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Creates a multiplayer server build with a managed container and returns information about the build creation request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Creates a multiplayer server build with a managed container and returns information about the build creation request." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateBuildWithManagedContainerRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_AreAssetsReadonly_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\n     * will have the same assets mounted in the container.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\nwill have the same assets mounted in the container." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_AreAssetsReadonly_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithManagedContainerRequest*)Obj)->AreAssetsReadonly = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_AreAssetsReadonly = { "AreAssetsReadonly", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerCreateBuildWithManagedContainerRequest), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_AreAssetsReadonly_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_AreAssetsReadonly_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_AreAssetsReadonly_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_BuildName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The build name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The build name." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_BuildName = { "BuildName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, BuildName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_BuildName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_BuildName_MetaData)) };
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_ContainerFlavor_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_ContainerFlavor_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The flavor of container to create a build from. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The flavor of container to create a build from." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_ContainerFlavor = { "ContainerFlavor", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, ContainerFlavor), Z_Construct_UEnum_PlayFab_EContainerFlavor, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_ContainerFlavor_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_ContainerFlavor_MetaData)) }; // 2931123663
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameAssetReferences_Inner = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameAssetReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of game assets related to the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of game assets related to the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameAssetReferences = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, GameAssetReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameAssetReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameAssetReferences_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameCertificateReferences_Inner = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameCertificateReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game certificates for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game certificates for the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameCertificateReferences = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, GameCertificateReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameCertificateReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameCertificateReferences_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameWorkingDirectory_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The directory containing the game executable. This would be the start path of the game assets that contain the main game\n     * server executable. If not provided, a best effort will be made to extract it from the start game command.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The directory containing the game executable. This would be the start path of the game assets that contain the main game\nserver executable. If not provided, a best effort will be made to extract it from the start game command." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameWorkingDirectory = { "GameWorkingDirectory", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, GameWorkingDirectory), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameWorkingDirectory_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameWorkingDirectory_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_InstrumentationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The instrumentation configuration for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The instrumentation configuration for the build." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_InstrumentationConfiguration = { "InstrumentationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, InstrumentationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_InstrumentationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_InstrumentationConfiguration_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Metadata_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * Metadata to tag the build. The keys are case insensitive. The build metadata is made available to the server through\n     * Game Server SDK (GSDK).Constraints: Maximum number of keys: 30, Maximum key length: 50, Maximum value length: 100\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Metadata to tag the build. The keys are case insensitive. The build metadata is made available to the server through\nGame Server SDK (GSDK).Constraints: Maximum number of keys: 30, Maximum key length: 50, Maximum value length: 100" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Metadata = { "Metadata", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, Metadata), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Metadata_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Metadata_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_MonitoringApplicationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The configuration for the monitoring application on the build */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The configuration for the monitoring application on the build" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_MonitoringApplicationConfiguration = { "MonitoringApplicationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, MonitoringApplicationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_MonitoringApplicationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_MonitoringApplicationConfiguration_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The number of multiplayer servers to host on a single VM. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The number of multiplayer servers to host on a single VM." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm = { "MultiplayerServerCountPerVm", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, MultiplayerServerCountPerVm), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Ports_Inner = { "Ports", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Ports_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The ports to map the build on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ports to map the build on." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Ports = { "Ports", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, Ports), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Ports_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Ports_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_RegionConfigurations_Inner = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_RegionConfigurations_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region configurations for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region configurations for the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_RegionConfigurations = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, RegionConfigurations), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_RegionConfigurations_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_RegionConfigurations_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_ServerResourceConstraints_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The resource constraints to apply to each server on the VM (EXPERIMENTAL API) */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The resource constraints to apply to each server on the VM (EXPERIMENTAL API)" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_ServerResourceConstraints = { "ServerResourceConstraints", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, ServerResourceConstraints), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_ServerResourceConstraints_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_ServerResourceConstraints_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_StartMultiplayerServerCommand_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The command to run when the multiplayer server is started, including any arguments. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The command to run when the multiplayer server is started, including any arguments." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_StartMultiplayerServerCommand = { "StartMultiplayerServerCommand", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, StartMultiplayerServerCommand), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_StartMultiplayerServerCommand_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_StartMultiplayerServerCommand_MetaData)) };
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_VmSize_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_VmSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The VM size to create the build on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The VM size to create the build on." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_VmSize = { "VmSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, VmSize), Z_Construct_UEnum_PlayFab_EAzureVmSize, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_VmSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_VmSize_MetaData)) }; // 2933196177
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_VmStartupScriptConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The configuration for the VmStartupScript for the build */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The configuration for the VmStartupScript for the build" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_VmStartupScriptConfiguration = { "VmStartupScriptConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, VmStartupScriptConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_VmStartupScriptConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_VmStartupScriptConfiguration_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_WindowsCrashDumpConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The crash dump configuration for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The crash dump configuration for the build." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_WindowsCrashDumpConfiguration = { "WindowsCrashDumpConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, WindowsCrashDumpConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_WindowsCrashDumpConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_WindowsCrashDumpConfiguration_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_AreAssetsReadonly,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_BuildName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_ContainerFlavor_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_ContainerFlavor,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameAssetReferences_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameAssetReferences,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameCertificateReferences_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameCertificateReferences,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameWorkingDirectory,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_InstrumentationConfiguration,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Metadata,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_MonitoringApplicationConfiguration,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Ports_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Ports,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_RegionConfigurations_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_RegionConfigurations,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_ServerResourceConstraints,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_StartMultiplayerServerCommand,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_VmSize_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_VmSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_VmStartupScriptConfiguration,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_WindowsCrashDumpConfiguration,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCreateBuildWithManagedContainerRequest",
		sizeof(FMultiplayerCreateBuildWithManagedContainerRequest),
		alignof(FMultiplayerCreateBuildWithManagedContainerRequest),
		Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithManagedContainerRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithManagedContainerRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithManagedContainerRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCreateBuildWithManagedContainerResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCreateBuildWithManagedContainerResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithManagedContainerResponse;
class UScriptStruct* FMultiplayerCreateBuildWithManagedContainerResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithManagedContainerResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithManagedContainerResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateBuildWithManagedContainerResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithManagedContainerResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateBuildWithManagedContainerResponse>()
{
	return FMultiplayerCreateBuildWithManagedContainerResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AreAssetsReadonly_MetaData[];
#endif
		static void NewProp_AreAssetsReadonly_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_AreAssetsReadonly;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildName;
		static const UECodeGen_Private::FBytePropertyParams NewProp_ContainerFlavor_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ContainerFlavor_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_ContainerFlavor;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CreationTime_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_CreationTime;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_GameAssetReferences_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GameAssetReferences_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_GameAssetReferences;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_GameCertificateReferences_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GameCertificateReferences_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_GameCertificateReferences;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GameWorkingDirectory_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_GameWorkingDirectory;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_InstrumentationConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_InstrumentationConfiguration;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Metadata_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Metadata;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MonitoringApplicationConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_MonitoringApplicationConfiguration;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MultiplayerServerCountPerVm_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_MultiplayerServerCountPerVm;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_OsPlatform_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_OsPlatform;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Ports_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Ports_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_Ports;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_RegionConfigurations_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_RegionConfigurations_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_RegionConfigurations;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerResourceConstraints_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_ServerResourceConstraints;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerType_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ServerType;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_StartMultiplayerServerCommand_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_StartMultiplayerServerCommand;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_UseStreamingForAssetDownloads_MetaData[];
#endif
		static void NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_UseStreamingForAssetDownloads;
		static const UECodeGen_Private::FBytePropertyParams NewProp_VmSize_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VmSize_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_VmSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VmStartupScriptConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_VmStartupScriptConfiguration;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateBuildWithManagedContainerResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_AreAssetsReadonly_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\n     * will have the same assets mounted in the container.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\nwill have the same assets mounted in the container." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_AreAssetsReadonly_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithManagedContainerResponse*)Obj)->AreAssetsReadonly = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_AreAssetsReadonly = { "AreAssetsReadonly", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerCreateBuildWithManagedContainerResponse), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_AreAssetsReadonly_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_AreAssetsReadonly_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_AreAssetsReadonly_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID. Must be unique for every build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID. Must be unique for every build." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The build name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The build name." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildName = { "BuildName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, BuildName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildName_MetaData)) };
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ContainerFlavor_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ContainerFlavor_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The flavor of container of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The flavor of container of the build." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ContainerFlavor = { "ContainerFlavor", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, ContainerFlavor), Z_Construct_UEnum_PlayFab_EContainerFlavor, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ContainerFlavor_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ContainerFlavor_MetaData)) }; // 2931123663
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_CreationTime_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The time the build was created in UTC. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The time the build was created in UTC." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_CreationTime = { "CreationTime", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, CreationTime), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_CreationTime_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_CreationTime_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameAssetReferences_Inner = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameAssetReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game assets for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game assets for the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameAssetReferences = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, GameAssetReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameAssetReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameAssetReferences_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameCertificateReferences_Inner = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameCertificateReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game certificates for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game certificates for the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameCertificateReferences = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, GameCertificateReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameCertificateReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameCertificateReferences_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameWorkingDirectory_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The directory containing the game executable. This would be the start path of the game assets that contain the main game\n     * server executable. If not provided, a best effort will be made to extract it from the start game command.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The directory containing the game executable. This would be the start path of the game assets that contain the main game\nserver executable. If not provided, a best effort will be made to extract it from the start game command." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameWorkingDirectory = { "GameWorkingDirectory", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, GameWorkingDirectory), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameWorkingDirectory_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameWorkingDirectory_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_InstrumentationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The instrumentation configuration for this build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The instrumentation configuration for this build." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_InstrumentationConfiguration = { "InstrumentationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, InstrumentationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_InstrumentationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_InstrumentationConfiguration_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Metadata_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The metadata of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The metadata of the build." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Metadata = { "Metadata", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, Metadata), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Metadata_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Metadata_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_MonitoringApplicationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The configuration for the monitoring application for the build */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The configuration for the monitoring application for the build" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_MonitoringApplicationConfiguration = { "MonitoringApplicationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, MonitoringApplicationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_MonitoringApplicationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_MonitoringApplicationConfiguration_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The number of multiplayer servers to host on a single VM of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The number of multiplayer servers to host on a single VM of the build." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm = { "MultiplayerServerCountPerVm", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, MultiplayerServerCountPerVm), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_OsPlatform_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The OS platform used for running the game process. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The OS platform used for running the game process." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_OsPlatform = { "OsPlatform", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, OsPlatform), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_OsPlatform_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_OsPlatform_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Ports_Inner = { "Ports", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Ports_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The ports the build is mapped on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ports the build is mapped on." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Ports = { "Ports", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, Ports), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Ports_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Ports_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_RegionConfigurations_Inner = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_RegionConfigurations_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region configuration for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region configuration for the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_RegionConfigurations = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, RegionConfigurations), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_RegionConfigurations_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_RegionConfigurations_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ServerResourceConstraints_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The resource constraints to apply to each server on the VM (EXPERIMENTAL API) */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The resource constraints to apply to each server on the VM (EXPERIMENTAL API)" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ServerResourceConstraints = { "ServerResourceConstraints", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, ServerResourceConstraints), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ServerResourceConstraints_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ServerResourceConstraints_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ServerType_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The type of game server being hosted. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The type of game server being hosted." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ServerType = { "ServerType", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, ServerType), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ServerType_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ServerType_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_StartMultiplayerServerCommand_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The command to run when the multiplayer server has been allocated, including any arguments. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The command to run when the multiplayer server has been allocated, including any arguments." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_StartMultiplayerServerCommand = { "StartMultiplayerServerCommand", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, StartMultiplayerServerCommand), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_StartMultiplayerServerCommand_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_StartMultiplayerServerCommand_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\n     * disc.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\ndisc." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithManagedContainerResponse*)Obj)->UseStreamingForAssetDownloads = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads = { "UseStreamingForAssetDownloads", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerCreateBuildWithManagedContainerResponse), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData)) };
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_VmSize_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_VmSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The VM size the build was created on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The VM size the build was created on." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_VmSize = { "VmSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, VmSize), Z_Construct_UEnum_PlayFab_EAzureVmSize, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_VmSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_VmSize_MetaData)) }; // 2933196177
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_VmStartupScriptConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The configuration for the VmStartupScript feature for the build */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The configuration for the VmStartupScript feature for the build" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_VmStartupScriptConfiguration = { "VmStartupScriptConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, VmStartupScriptConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_VmStartupScriptConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_VmStartupScriptConfiguration_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_AreAssetsReadonly,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ContainerFlavor_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ContainerFlavor,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_CreationTime,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameAssetReferences_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameAssetReferences,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameCertificateReferences_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameCertificateReferences,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameWorkingDirectory,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_InstrumentationConfiguration,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Metadata,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_MonitoringApplicationConfiguration,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_OsPlatform,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Ports_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Ports,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_RegionConfigurations_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_RegionConfigurations,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ServerResourceConstraints,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ServerType,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_StartMultiplayerServerCommand,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_VmSize_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_VmSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_VmStartupScriptConfiguration,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCreateBuildWithManagedContainerResponse",
		sizeof(FMultiplayerCreateBuildWithManagedContainerResponse),
		alignof(FMultiplayerCreateBuildWithManagedContainerResponse),
		Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithManagedContainerResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithManagedContainerResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithManagedContainerResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCreateBuildWithProcessBasedServerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCreateBuildWithProcessBasedServerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithProcessBasedServerRequest;
class UScriptStruct* FMultiplayerCreateBuildWithProcessBasedServerRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithProcessBasedServerRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithProcessBasedServerRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateBuildWithProcessBasedServerRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithProcessBasedServerRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateBuildWithProcessBasedServerRequest>()
{
	return FMultiplayerCreateBuildWithProcessBasedServerRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AreAssetsReadonly_MetaData[];
#endif
		static void NewProp_AreAssetsReadonly_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_AreAssetsReadonly;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildName;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_GameAssetReferences_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GameAssetReferences_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_GameAssetReferences;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_GameCertificateReferences_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GameCertificateReferences_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_GameCertificateReferences;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GameWorkingDirectory_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_GameWorkingDirectory;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_InstrumentationConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_InstrumentationConfiguration;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_IsOSPreview_MetaData[];
#endif
		static void NewProp_IsOSPreview_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_IsOSPreview;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Metadata_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Metadata;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MonitoringApplicationConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_MonitoringApplicationConfiguration;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MultiplayerServerCountPerVm_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_MultiplayerServerCountPerVm;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_OsPlatform_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_OsPlatform;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Ports_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Ports_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_Ports;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_RegionConfigurations_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_RegionConfigurations_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_RegionConfigurations;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_StartMultiplayerServerCommand_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_StartMultiplayerServerCommand;
		static const UECodeGen_Private::FBytePropertyParams NewProp_VmSize_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VmSize_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_VmSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VmStartupScriptConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_VmStartupScriptConfiguration;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Creates a multiplayer server build with the game server running as a process and returns information about the build\n * creation request.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Creates a multiplayer server build with the game server running as a process and returns information about the build\ncreation request." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateBuildWithProcessBasedServerRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_AreAssetsReadonly_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\n     * will have the same assets mounted in the container.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\nwill have the same assets mounted in the container." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_AreAssetsReadonly_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithProcessBasedServerRequest*)Obj)->AreAssetsReadonly = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_AreAssetsReadonly = { "AreAssetsReadonly", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerCreateBuildWithProcessBasedServerRequest), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_AreAssetsReadonly_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_AreAssetsReadonly_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_AreAssetsReadonly_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_BuildName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The build name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The build name." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_BuildName = { "BuildName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, BuildName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_BuildName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_BuildName_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameAssetReferences_Inner = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameAssetReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of game assets related to the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of game assets related to the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameAssetReferences = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, GameAssetReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameAssetReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameAssetReferences_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameCertificateReferences_Inner = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameCertificateReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game certificates for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game certificates for the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameCertificateReferences = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, GameCertificateReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameCertificateReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameCertificateReferences_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameWorkingDirectory_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The working directory for the game process. If this is not provided, the working directory will be set based on the\n     * mount path of the game server executable.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The working directory for the game process. If this is not provided, the working directory will be set based on the\nmount path of the game server executable." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameWorkingDirectory = { "GameWorkingDirectory", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, GameWorkingDirectory), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameWorkingDirectory_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameWorkingDirectory_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_InstrumentationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The instrumentation configuration for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The instrumentation configuration for the build." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_InstrumentationConfiguration = { "InstrumentationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, InstrumentationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_InstrumentationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_InstrumentationConfiguration_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_IsOSPreview_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * Indicates whether this build will be created using the OS Preview versionPreview OS is recommended for dev builds to\n     * detect any breaking changes before they are released to retail. Retail builds should set this value to false.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Indicates whether this build will be created using the OS Preview versionPreview OS is recommended for dev builds to\ndetect any breaking changes before they are released to retail. Retail builds should set this value to false." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_IsOSPreview_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithProcessBasedServerRequest*)Obj)->IsOSPreview = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_IsOSPreview = { "IsOSPreview", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerCreateBuildWithProcessBasedServerRequest), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_IsOSPreview_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_IsOSPreview_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_IsOSPreview_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Metadata_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * Metadata to tag the build. The keys are case insensitive. The build metadata is made available to the server through\n     * Game Server SDK (GSDK).Constraints: Maximum number of keys: 30, Maximum key length: 50, Maximum value length: 100\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Metadata to tag the build. The keys are case insensitive. The build metadata is made available to the server through\nGame Server SDK (GSDK).Constraints: Maximum number of keys: 30, Maximum key length: 50, Maximum value length: 100" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Metadata = { "Metadata", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, Metadata), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Metadata_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Metadata_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_MonitoringApplicationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The configuration for the monitoring application on the build */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The configuration for the monitoring application on the build" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_MonitoringApplicationConfiguration = { "MonitoringApplicationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, MonitoringApplicationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_MonitoringApplicationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_MonitoringApplicationConfiguration_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_MultiplayerServerCountPerVm_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The number of multiplayer servers to host on a single VM. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The number of multiplayer servers to host on a single VM." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_MultiplayerServerCountPerVm = { "MultiplayerServerCountPerVm", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, MultiplayerServerCountPerVm), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_MultiplayerServerCountPerVm_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_MultiplayerServerCountPerVm_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_OsPlatform_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The OS platform used for running the game process. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The OS platform used for running the game process." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_OsPlatform = { "OsPlatform", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, OsPlatform), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_OsPlatform_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_OsPlatform_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Ports_Inner = { "Ports", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Ports_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The ports to map the build on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ports to map the build on." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Ports = { "Ports", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, Ports), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Ports_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Ports_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_RegionConfigurations_Inner = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_RegionConfigurations_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region configurations for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region configurations for the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_RegionConfigurations = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, RegionConfigurations), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_RegionConfigurations_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_RegionConfigurations_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_StartMultiplayerServerCommand_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The command to run when the multiplayer server is started, including any arguments. The path to any executable should be\n     * relative to the root asset folder when unzipped.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The command to run when the multiplayer server is started, including any arguments. The path to any executable should be\nrelative to the root asset folder when unzipped." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_StartMultiplayerServerCommand = { "StartMultiplayerServerCommand", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, StartMultiplayerServerCommand), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_StartMultiplayerServerCommand_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_StartMultiplayerServerCommand_MetaData)) };
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_VmSize_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_VmSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The VM size to create the build on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The VM size to create the build on." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_VmSize = { "VmSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, VmSize), Z_Construct_UEnum_PlayFab_EAzureVmSize, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_VmSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_VmSize_MetaData)) }; // 2933196177
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_VmStartupScriptConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The configuration for the VmStartupScript for the build */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The configuration for the VmStartupScript for the build" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_VmStartupScriptConfiguration = { "VmStartupScriptConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, VmStartupScriptConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_VmStartupScriptConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_VmStartupScriptConfiguration_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_AreAssetsReadonly,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_BuildName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameAssetReferences_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameAssetReferences,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameCertificateReferences_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameCertificateReferences,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameWorkingDirectory,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_InstrumentationConfiguration,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_IsOSPreview,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Metadata,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_MonitoringApplicationConfiguration,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_MultiplayerServerCountPerVm,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_OsPlatform,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Ports_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Ports,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_RegionConfigurations_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_RegionConfigurations,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_StartMultiplayerServerCommand,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_VmSize_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_VmSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_VmStartupScriptConfiguration,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCreateBuildWithProcessBasedServerRequest",
		sizeof(FMultiplayerCreateBuildWithProcessBasedServerRequest),
		alignof(FMultiplayerCreateBuildWithProcessBasedServerRequest),
		Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithProcessBasedServerRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithProcessBasedServerRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithProcessBasedServerRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCreateBuildWithProcessBasedServerResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCreateBuildWithProcessBasedServerResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithProcessBasedServerResponse;
class UScriptStruct* FMultiplayerCreateBuildWithProcessBasedServerResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithProcessBasedServerResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithProcessBasedServerResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateBuildWithProcessBasedServerResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithProcessBasedServerResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateBuildWithProcessBasedServerResponse>()
{
	return FMultiplayerCreateBuildWithProcessBasedServerResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AreAssetsReadonly_MetaData[];
#endif
		static void NewProp_AreAssetsReadonly_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_AreAssetsReadonly;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildName;
		static const UECodeGen_Private::FBytePropertyParams NewProp_ContainerFlavor_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ContainerFlavor_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_ContainerFlavor;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CreationTime_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_CreationTime;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_GameAssetReferences_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GameAssetReferences_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_GameAssetReferences;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_GameCertificateReferences_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GameCertificateReferences_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_GameCertificateReferences;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GameWorkingDirectory_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_GameWorkingDirectory;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_InstrumentationConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_InstrumentationConfiguration;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_IsOSPreview_MetaData[];
#endif
		static void NewProp_IsOSPreview_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_IsOSPreview;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Metadata_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Metadata;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MonitoringApplicationConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_MonitoringApplicationConfiguration;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MultiplayerServerCountPerVm_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_MultiplayerServerCountPerVm;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_OsPlatform_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_OsPlatform;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Ports_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Ports_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_Ports;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_RegionConfigurations_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_RegionConfigurations_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_RegionConfigurations;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerType_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ServerType;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_StartMultiplayerServerCommand_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_StartMultiplayerServerCommand;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_UseStreamingForAssetDownloads_MetaData[];
#endif
		static void NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_UseStreamingForAssetDownloads;
		static const UECodeGen_Private::FBytePropertyParams NewProp_VmSize_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VmSize_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_VmSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VmStartupScriptConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_VmStartupScriptConfiguration;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateBuildWithProcessBasedServerResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_AreAssetsReadonly_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\n     * will have the same assets mounted in the container.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\nwill have the same assets mounted in the container." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_AreAssetsReadonly_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithProcessBasedServerResponse*)Obj)->AreAssetsReadonly = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_AreAssetsReadonly = { "AreAssetsReadonly", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerCreateBuildWithProcessBasedServerResponse), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_AreAssetsReadonly_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_AreAssetsReadonly_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_AreAssetsReadonly_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID. Must be unique for every build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID. Must be unique for every build." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The build name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The build name." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildName = { "BuildName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, BuildName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildName_MetaData)) };
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ContainerFlavor_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ContainerFlavor_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The flavor of container of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The flavor of container of the build." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ContainerFlavor = { "ContainerFlavor", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, ContainerFlavor), Z_Construct_UEnum_PlayFab_EContainerFlavor, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ContainerFlavor_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ContainerFlavor_MetaData)) }; // 2931123663
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_CreationTime_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The time the build was created in UTC. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The time the build was created in UTC." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_CreationTime = { "CreationTime", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, CreationTime), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_CreationTime_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_CreationTime_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameAssetReferences_Inner = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameAssetReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game assets for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game assets for the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameAssetReferences = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, GameAssetReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameAssetReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameAssetReferences_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameCertificateReferences_Inner = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameCertificateReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game certificates for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game certificates for the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameCertificateReferences = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, GameCertificateReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameCertificateReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameCertificateReferences_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameWorkingDirectory_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The working directory for the game process. If this is not provided, the working directory will be set based on the\n     * mount path of the game server executable.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The working directory for the game process. If this is not provided, the working directory will be set based on the\nmount path of the game server executable." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameWorkingDirectory = { "GameWorkingDirectory", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, GameWorkingDirectory), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameWorkingDirectory_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameWorkingDirectory_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_InstrumentationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The instrumentation configuration for this build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The instrumentation configuration for this build." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_InstrumentationConfiguration = { "InstrumentationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, InstrumentationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_InstrumentationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_InstrumentationConfiguration_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_IsOSPreview_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * Indicates whether this build will be created using the OS Preview versionPreview OS is recommended for dev builds to\n     * detect any breaking changes before they are released to retail. Retail builds should set this value to false.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Indicates whether this build will be created using the OS Preview versionPreview OS is recommended for dev builds to\ndetect any breaking changes before they are released to retail. Retail builds should set this value to false." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_IsOSPreview_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithProcessBasedServerResponse*)Obj)->IsOSPreview = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_IsOSPreview = { "IsOSPreview", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerCreateBuildWithProcessBasedServerResponse), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_IsOSPreview_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_IsOSPreview_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_IsOSPreview_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Metadata_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The metadata of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The metadata of the build." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Metadata = { "Metadata", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, Metadata), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Metadata_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Metadata_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_MonitoringApplicationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The configuration for the monitoring application for the build */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The configuration for the monitoring application for the build" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_MonitoringApplicationConfiguration = { "MonitoringApplicationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, MonitoringApplicationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_MonitoringApplicationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_MonitoringApplicationConfiguration_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The number of multiplayer servers to host on a single VM of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The number of multiplayer servers to host on a single VM of the build." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_MultiplayerServerCountPerVm = { "MultiplayerServerCountPerVm", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, MultiplayerServerCountPerVm), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_OsPlatform_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The OS platform used for running the game process. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The OS platform used for running the game process." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_OsPlatform = { "OsPlatform", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, OsPlatform), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_OsPlatform_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_OsPlatform_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Ports_Inner = { "Ports", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Ports_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The ports the build is mapped on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ports the build is mapped on." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Ports = { "Ports", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, Ports), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Ports_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Ports_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_RegionConfigurations_Inner = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_RegionConfigurations_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region configuration for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region configuration for the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_RegionConfigurations = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, RegionConfigurations), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_RegionConfigurations_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_RegionConfigurations_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ServerType_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The type of game server being hosted. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The type of game server being hosted." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ServerType = { "ServerType", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, ServerType), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ServerType_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ServerType_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_StartMultiplayerServerCommand_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The command to run when the multiplayer server is started, including any arguments. The path to any executable is\n     * relative to the root asset folder when unzipped.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The command to run when the multiplayer server is started, including any arguments. The path to any executable is\nrelative to the root asset folder when unzipped." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_StartMultiplayerServerCommand = { "StartMultiplayerServerCommand", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, StartMultiplayerServerCommand), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_StartMultiplayerServerCommand_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_StartMultiplayerServerCommand_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\n     * disc.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\ndisc." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithProcessBasedServerResponse*)Obj)->UseStreamingForAssetDownloads = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_UseStreamingForAssetDownloads = { "UseStreamingForAssetDownloads", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerCreateBuildWithProcessBasedServerResponse), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_UseStreamingForAssetDownloads_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData)) };
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_VmSize_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_VmSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The VM size the build was created on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The VM size the build was created on." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_VmSize = { "VmSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, VmSize), Z_Construct_UEnum_PlayFab_EAzureVmSize, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_VmSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_VmSize_MetaData)) }; // 2933196177
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_VmStartupScriptConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The configuration for the VmStartupScript feature for the build */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The configuration for the VmStartupScript feature for the build" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_VmStartupScriptConfiguration = { "VmStartupScriptConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, VmStartupScriptConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_VmStartupScriptConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_VmStartupScriptConfiguration_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_AreAssetsReadonly,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ContainerFlavor_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ContainerFlavor,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_CreationTime,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameAssetReferences_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameAssetReferences,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameCertificateReferences_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameCertificateReferences,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameWorkingDirectory,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_InstrumentationConfiguration,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_IsOSPreview,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Metadata,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_MonitoringApplicationConfiguration,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_MultiplayerServerCountPerVm,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_OsPlatform,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Ports_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Ports,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_RegionConfigurations_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_RegionConfigurations,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ServerType,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_StartMultiplayerServerCommand,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_UseStreamingForAssetDownloads,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_VmSize_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_VmSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_VmStartupScriptConfiguration,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCreateBuildWithProcessBasedServerResponse",
		sizeof(FMultiplayerCreateBuildWithProcessBasedServerResponse),
		alignof(FMultiplayerCreateBuildWithProcessBasedServerResponse),
		Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithProcessBasedServerResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithProcessBasedServerResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithProcessBasedServerResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCreateRemoteUserRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCreateRemoteUserRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCreateRemoteUserRequest;
class UScriptStruct* FMultiplayerCreateRemoteUserRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateRemoteUserRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCreateRemoteUserRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateRemoteUserRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCreateRemoteUserRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateRemoteUserRequest>()
{
	return FMultiplayerCreateRemoteUserRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ExpirationTime_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ExpirationTime;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Region_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Region;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Username_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Username;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VmId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_VmId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Creates a remote user to log on to a VM for a multiplayer server build in a specific region. Returns user credential\n * information necessary to log on.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Creates a remote user to log on to a VM for a multiplayer server build in a specific region. Returns user credential\ninformation necessary to log on." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateRemoteUserRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of to create the remote user for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of to create the remote user for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateRemoteUserRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateRemoteUserRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_ExpirationTime_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The expiration time for the remote user created. Defaults to expiring in one day if not specified. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The expiration time for the remote user created. Defaults to expiring in one day if not specified." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_ExpirationTime = { "ExpirationTime", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateRemoteUserRequest, ExpirationTime), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_ExpirationTime_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_ExpirationTime_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Region_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region of virtual machine to create the remote user for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region of virtual machine to create the remote user for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Region = { "Region", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateRemoteUserRequest, Region), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Region_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Region_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Username_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The username to create the remote user with. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The username to create the remote user with." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Username = { "Username", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateRemoteUserRequest, Username), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Username_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Username_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_VmId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The virtual machine ID the multiplayer server is located on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The virtual machine ID the multiplayer server is located on." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_VmId = { "VmId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateRemoteUserRequest, VmId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_VmId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_VmId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_BuildId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_ExpirationTime,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Region,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Username,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_VmId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCreateRemoteUserRequest",
		sizeof(FMultiplayerCreateRemoteUserRequest),
		alignof(FMultiplayerCreateRemoteUserRequest),
		Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateRemoteUserRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCreateRemoteUserRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCreateRemoteUserRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCreateRemoteUserResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCreateRemoteUserResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCreateRemoteUserResponse;
class UScriptStruct* FMultiplayerCreateRemoteUserResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateRemoteUserResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCreateRemoteUserResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateRemoteUserResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCreateRemoteUserResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateRemoteUserResponse>()
{
	return FMultiplayerCreateRemoteUserResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ExpirationTime_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ExpirationTime;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Password_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Password;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Username_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Username;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateRemoteUserResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_ExpirationTime_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The expiration time for the remote user created. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The expiration time for the remote user created." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_ExpirationTime = { "ExpirationTime", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateRemoteUserResponse, ExpirationTime), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_ExpirationTime_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_ExpirationTime_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Password_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The generated password for the remote user that was created. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The generated password for the remote user that was created." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Password = { "Password", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateRemoteUserResponse, Password), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Password_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Password_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Username_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The username for the remote user that was created. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The username for the remote user that was created." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Username = { "Username", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateRemoteUserResponse, Username), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Username_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Username_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_ExpirationTime,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Password,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Username,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCreateRemoteUserResponse",
		sizeof(FMultiplayerCreateRemoteUserResponse),
		alignof(FMultiplayerCreateRemoteUserResponse),
		Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateRemoteUserResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCreateRemoteUserResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCreateRemoteUserResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCreateTitleMultiplayerServersQuotaChangeRequest;
class UScriptStruct* FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateTitleMultiplayerServersQuotaChangeRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCreateTitleMultiplayerServersQuotaChangeRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateTitleMultiplayerServersQuotaChangeRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCreateTitleMultiplayerServersQuotaChangeRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest>()
{
	return FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ChangeDescription_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ChangeDescription;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Changes_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Changes_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_Changes;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ContactEmail_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ContactEmail;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Notes_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Notes;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_StartDate_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_StartDate;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Creates a request to change a title's multiplayer server quotas. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Creates a request to change a title's multiplayer server quotas." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ChangeDescription_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** A brief description of the requested changes. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A brief description of the requested changes." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ChangeDescription = { "ChangeDescription", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, ChangeDescription), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ChangeDescription_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ChangeDescription_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Changes_Inner = { "Changes", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Changes_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Changes to make to the titles cores quota. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Changes to make to the titles cores quota." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Changes = { "Changes", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, Changes), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Changes_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Changes_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ContactEmail_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Email to be contacted by our team about this request. Only required when a request is not approved. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Email to be contacted by our team about this request. Only required when a request is not approved." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ContactEmail = { "ContactEmail", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, ContactEmail), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ContactEmail_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ContactEmail_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Notes_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Additional information about this request that our team can use to better understand the requirements. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Additional information about this request that our team can use to better understand the requirements." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Notes = { "Notes", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, Notes), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Notes_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Notes_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_StartDate_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** When these changes would need to be in effect. Only required when a request is not approved. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When these changes would need to be in effect. Only required when a request is not approved." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_StartDate = { "StartDate", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, StartDate), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_StartDate_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_StartDate_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ChangeDescription,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Changes_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Changes,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ContactEmail,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Notes,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_StartDate,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCreateTitleMultiplayerServersQuotaChangeRequest",
		sizeof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest),
		alignof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest),
		Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateTitleMultiplayerServersQuotaChangeRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCreateTitleMultiplayerServersQuotaChangeRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCreateTitleMultiplayerServersQuotaChangeRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerCreateTitleMultiplayerServersQuotaChangeResponse;
class UScriptStruct* FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateTitleMultiplayerServersQuotaChangeResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerCreateTitleMultiplayerServersQuotaChangeResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateTitleMultiplayerServersQuotaChangeResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerCreateTitleMultiplayerServersQuotaChangeResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse>()
{
	return FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_RequestId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_RequestId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_WasApproved_MetaData[];
#endif
		static void NewProp_WasApproved_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_WasApproved;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_RequestId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Id of the change request that was created. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Id of the change request that was created." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_RequestId = { "RequestId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse, RequestId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_RequestId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_RequestId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_WasApproved_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Determines if the request was approved or not. When false, our team is reviewing and may respond within 2 business days. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Determines if the request was approved or not. When false, our team is reviewing and may respond within 2 business days." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_WasApproved_SetBit(void* Obj)
	{
		((FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse*)Obj)->WasApproved = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_WasApproved = { "WasApproved", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse), &Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_WasApproved_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_WasApproved_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_WasApproved_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_RequestId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_WasApproved,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCreateTitleMultiplayerServersQuotaChangeResponse",
		sizeof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse),
		alignof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse),
		Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerCreateTitleMultiplayerServersQuotaChangeResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerCreateTitleMultiplayerServersQuotaChangeResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerCreateTitleMultiplayerServersQuotaChangeResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerDeleteAssetRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerDeleteAssetRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerDeleteAssetRequest;
class UScriptStruct* FMultiplayerDeleteAssetRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerDeleteAssetRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerDeleteAssetRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerDeleteAssetRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerDeleteAssetRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerDeleteAssetRequest>()
{
	return FMultiplayerDeleteAssetRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_FileName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_FileName;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Deletes a multiplayer server game asset for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Deletes a multiplayer server game asset for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerDeleteAssetRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteAssetRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_FileName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The filename of the asset to delete. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The filename of the asset to delete." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_FileName = { "FileName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteAssetRequest, FileName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_FileName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_FileName_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_FileName,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerDeleteAssetRequest",
		sizeof(FMultiplayerDeleteAssetRequest),
		alignof(FMultiplayerDeleteAssetRequest),
		Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerDeleteAssetRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerDeleteAssetRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerDeleteAssetRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerEmptyResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerEmptyResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerEmptyResponse;
class UScriptStruct* FMultiplayerEmptyResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerEmptyResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerEmptyResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerEmptyResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerEmptyResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerEmptyResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerEmptyResponse>()
{
	return FMultiplayerEmptyResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerEmptyResponse>();
	}
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerEmptyResponse",
		sizeof(FMultiplayerEmptyResponse),
		alignof(FMultiplayerEmptyResponse),
		nullptr,
		0,
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerEmptyResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerEmptyResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerEmptyResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerEmptyResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerDeleteBuildRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerDeleteBuildRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildRequest;
class UScriptStruct* FMultiplayerDeleteBuildRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerDeleteBuildRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerDeleteBuildRequest>()
{
	return FMultiplayerDeleteBuildRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Deletes a multiplayer server build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Deletes a multiplayer server build." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerDeleteBuildRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of the build to delete. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of the build to delete." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteBuildRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteBuildRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_BuildId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_CustomTags,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerDeleteBuildRequest",
		sizeof(FMultiplayerDeleteBuildRequest),
		alignof(FMultiplayerDeleteBuildRequest),
		Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerDeleteBuildAliasRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerDeleteBuildAliasRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildAliasRequest;
class UScriptStruct* FMultiplayerDeleteBuildAliasRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildAliasRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildAliasRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerDeleteBuildAliasRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildAliasRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerDeleteBuildAliasRequest>()
{
	return FMultiplayerDeleteBuildAliasRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AliasId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_AliasId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Deletes a multiplayer server build alias. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Deletes a multiplayer server build alias." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerDeleteBuildAliasRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_AliasId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string alias ID of the alias to perform the action on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string alias ID of the alias to perform the action on." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_AliasId = { "AliasId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteBuildAliasRequest, AliasId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_AliasId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_AliasId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteBuildAliasRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_AliasId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_CustomTags,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerDeleteBuildAliasRequest",
		sizeof(FMultiplayerDeleteBuildAliasRequest),
		alignof(FMultiplayerDeleteBuildAliasRequest),
		Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildAliasRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildAliasRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildAliasRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerDeleteBuildRegionRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerDeleteBuildRegionRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildRegionRequest;
class UScriptStruct* FMultiplayerDeleteBuildRegionRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildRegionRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildRegionRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerDeleteBuildRegionRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildRegionRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerDeleteBuildRegionRequest>()
{
	return FMultiplayerDeleteBuildRegionRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Region_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Region;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Removes a multiplayer server build's region. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Removes a multiplayer server build's region." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerDeleteBuildRegionRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string ID of the build we want to update regions for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string ID of the build we want to update regions for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteBuildRegionRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteBuildRegionRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_Region_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The build region to delete. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The build region to delete." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_Region = { "Region", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteBuildRegionRequest, Region), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_Region_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_Region_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_BuildId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_Region,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerDeleteBuildRegionRequest",
		sizeof(FMultiplayerDeleteBuildRegionRequest),
		alignof(FMultiplayerDeleteBuildRegionRequest),
		Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildRegionRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildRegionRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildRegionRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerDeleteCertificateRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerDeleteCertificateRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerDeleteCertificateRequest;
class UScriptStruct* FMultiplayerDeleteCertificateRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerDeleteCertificateRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerDeleteCertificateRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerDeleteCertificateRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerDeleteCertificateRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerDeleteCertificateRequest>()
{
	return FMultiplayerDeleteCertificateRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Name_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Name;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Deletes a multiplayer server game certificate. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Deletes a multiplayer server game certificate." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerDeleteCertificateRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteCertificateRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_Name_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The name of the certificate. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the certificate." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_Name = { "Name", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteCertificateRequest, Name), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_Name_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_Name_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_Name,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerDeleteCertificateRequest",
		sizeof(FMultiplayerDeleteCertificateRequest),
		alignof(FMultiplayerDeleteCertificateRequest),
		Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerDeleteCertificateRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerDeleteCertificateRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerDeleteCertificateRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerDeleteContainerImageRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerDeleteContainerImageRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerDeleteContainerImageRequest;
class UScriptStruct* FMultiplayerDeleteContainerImageRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerDeleteContainerImageRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerDeleteContainerImageRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerDeleteContainerImageRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerDeleteContainerImageRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerDeleteContainerImageRequest>()
{
	return FMultiplayerDeleteContainerImageRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ImageName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ImageName;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Removes the specified container image repository. After this operation, a 'docker pull' will fail for all the tags of\n * the specified image. Morever, ListContainerImages will not return the specified image.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Removes the specified container image repository. After this operation, a 'docker pull' will fail for all the tags of\nthe specified image. Morever, ListContainerImages will not return the specified image." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerDeleteContainerImageRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteContainerImageRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_ImageName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The container image repository we want to delete. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The container image repository we want to delete." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_ImageName = { "ImageName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteContainerImageRequest, ImageName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_ImageName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_ImageName_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_ImageName,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerDeleteContainerImageRequest",
		sizeof(FMultiplayerDeleteContainerImageRequest),
		alignof(FMultiplayerDeleteContainerImageRequest),
		Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerDeleteContainerImageRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerDeleteContainerImageRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerDeleteContainerImageRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerDeleteRemoteUserRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerDeleteRemoteUserRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerDeleteRemoteUserRequest;
class UScriptStruct* FMultiplayerDeleteRemoteUserRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerDeleteRemoteUserRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerDeleteRemoteUserRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerDeleteRemoteUserRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerDeleteRemoteUserRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerDeleteRemoteUserRequest>()
{
	return FMultiplayerDeleteRemoteUserRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Region_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Region;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Username_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Username;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VmId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_VmId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Deletes a remote user to log on to a VM for a multiplayer server build in a specific region. Returns user credential\n * information necessary to log on.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Deletes a remote user to log on to a VM for a multiplayer server build in a specific region. Returns user credential\ninformation necessary to log on." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerDeleteRemoteUserRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of the multiplayer server where the remote user is to delete. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of the multiplayer server where the remote user is to delete." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteRemoteUserRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteRemoteUserRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Region_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region of the multiplayer server where the remote user is to delete. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region of the multiplayer server where the remote user is to delete." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Region = { "Region", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteRemoteUserRequest, Region), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Region_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Region_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Username_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The username of the remote user to delete. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The username of the remote user to delete." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Username = { "Username", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteRemoteUserRequest, Username), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Username_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Username_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_VmId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The virtual machine ID the multiplayer server is located on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The virtual machine ID the multiplayer server is located on." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_VmId = { "VmId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerDeleteRemoteUserRequest, VmId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_VmId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_VmId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_BuildId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Region,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Username,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_VmId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerDeleteRemoteUserRequest",
		sizeof(FMultiplayerDeleteRemoteUserRequest),
		alignof(FMultiplayerDeleteRemoteUserRequest),
		Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerDeleteRemoteUserRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerDeleteRemoteUserRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerDeleteRemoteUserRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerEnableMultiplayerServersForTitleRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerEnableMultiplayerServersForTitleRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerEnableMultiplayerServersForTitleRequest;
class UScriptStruct* FMultiplayerEnableMultiplayerServersForTitleRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerEnableMultiplayerServersForTitleRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerEnableMultiplayerServersForTitleRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerEnableMultiplayerServersForTitleRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerEnableMultiplayerServersForTitleRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerEnableMultiplayerServersForTitleRequest>()
{
	return FMultiplayerEnableMultiplayerServersForTitleRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Enables the multiplayer server feature for a title and returns the enabled status. The enabled status can be\n * Initializing, Enabled, and Disabled. It can up to 20 minutes or more for the title to be enabled for the feature. On\n * average, it can take up to 20 minutes for the title to be enabled for the feature.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Enables the multiplayer server feature for a title and returns the enabled status. The enabled status can be\nInitializing, Enabled, and Disabled. It can up to 20 minutes or more for the title to be enabled for the feature. On\naverage, it can take up to 20 minutes for the title to be enabled for the feature." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerEnableMultiplayerServersForTitleRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerEnableMultiplayerServersForTitleRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::NewProp_CustomTags,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerEnableMultiplayerServersForTitleRequest",
		sizeof(FMultiplayerEnableMultiplayerServersForTitleRequest),
		alignof(FMultiplayerEnableMultiplayerServersForTitleRequest),
		Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerEnableMultiplayerServersForTitleRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerEnableMultiplayerServersForTitleRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerEnableMultiplayerServersForTitleRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerEnableMultiplayerServersForTitleResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerEnableMultiplayerServersForTitleResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerEnableMultiplayerServersForTitleResponse;
class UScriptStruct* FMultiplayerEnableMultiplayerServersForTitleResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerEnableMultiplayerServersForTitleResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerEnableMultiplayerServersForTitleResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerEnableMultiplayerServersForTitleResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerEnableMultiplayerServersForTitleResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerEnableMultiplayerServersForTitleResponse>()
{
	return FMultiplayerEnableMultiplayerServersForTitleResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FBytePropertyParams NewProp_Status_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Status_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_Status;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerEnableMultiplayerServersForTitleResponse>();
	}
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::NewProp_Status_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::NewProp_Status_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The enabled status for the multiplayer server features for the title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The enabled status for the multiplayer server features for the title." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::NewProp_Status = { "Status", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerEnableMultiplayerServersForTitleResponse, Status), Z_Construct_UEnum_PlayFab_ETitleMultiplayerServerEnabledStatus, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::NewProp_Status_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::NewProp_Status_MetaData)) }; // 3235126045
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::NewProp_Status_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::NewProp_Status,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerEnableMultiplayerServersForTitleResponse",
		sizeof(FMultiplayerEnableMultiplayerServersForTitleResponse),
		alignof(FMultiplayerEnableMultiplayerServersForTitleResponse),
		Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerEnableMultiplayerServersForTitleResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerEnableMultiplayerServersForTitleResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerEnableMultiplayerServersForTitleResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetAssetDownloadUrlRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetAssetDownloadUrlRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetAssetDownloadUrlRequest;
class UScriptStruct* FMultiplayerGetAssetDownloadUrlRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetAssetDownloadUrlRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetAssetDownloadUrlRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetAssetDownloadUrlRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetAssetDownloadUrlRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetAssetDownloadUrlRequest>()
{
	return FMultiplayerGetAssetDownloadUrlRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_FileName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_FileName;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Gets a URL that can be used to download the specified asset. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets a URL that can be used to download the specified asset." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetAssetDownloadUrlRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetAssetDownloadUrlRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_FileName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The asset's file name to get the download URL for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The asset's file name to get the download URL for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_FileName = { "FileName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetAssetDownloadUrlRequest, FileName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_FileName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_FileName_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_FileName,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetAssetDownloadUrlRequest",
		sizeof(FMultiplayerGetAssetDownloadUrlRequest),
		alignof(FMultiplayerGetAssetDownloadUrlRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetAssetDownloadUrlRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetAssetDownloadUrlRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetAssetDownloadUrlRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetAssetDownloadUrlResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetAssetDownloadUrlResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetAssetDownloadUrlResponse;
class UScriptStruct* FMultiplayerGetAssetDownloadUrlResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetAssetDownloadUrlResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetAssetDownloadUrlResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetAssetDownloadUrlResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetAssetDownloadUrlResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetAssetDownloadUrlResponse>()
{
	return FMultiplayerGetAssetDownloadUrlResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AssetDownloadUrl_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_AssetDownloadUrl;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_FileName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_FileName;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetAssetDownloadUrlResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_AssetDownloadUrl_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The asset's download URL. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The asset's download URL." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_AssetDownloadUrl = { "AssetDownloadUrl", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetAssetDownloadUrlResponse, AssetDownloadUrl), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_AssetDownloadUrl_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_AssetDownloadUrl_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_FileName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The asset's file name to get the download URL for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The asset's file name to get the download URL for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_FileName = { "FileName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetAssetDownloadUrlResponse, FileName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_FileName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_FileName_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_AssetDownloadUrl,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_FileName,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetAssetDownloadUrlResponse",
		sizeof(FMultiplayerGetAssetDownloadUrlResponse),
		alignof(FMultiplayerGetAssetDownloadUrlResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetAssetDownloadUrlResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetAssetDownloadUrlResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetAssetDownloadUrlResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetAssetUploadUrlRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetAssetUploadUrlRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetAssetUploadUrlRequest;
class UScriptStruct* FMultiplayerGetAssetUploadUrlRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetAssetUploadUrlRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetAssetUploadUrlRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetAssetUploadUrlRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetAssetUploadUrlRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetAssetUploadUrlRequest>()
{
	return FMultiplayerGetAssetUploadUrlRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_FileName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_FileName;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Gets the URL to upload assets to. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets the URL to upload assets to." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetAssetUploadUrlRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetAssetUploadUrlRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_FileName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The asset's file name to get the upload URL for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The asset's file name to get the upload URL for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_FileName = { "FileName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetAssetUploadUrlRequest, FileName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_FileName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_FileName_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_FileName,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetAssetUploadUrlRequest",
		sizeof(FMultiplayerGetAssetUploadUrlRequest),
		alignof(FMultiplayerGetAssetUploadUrlRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetAssetUploadUrlRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetAssetUploadUrlRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetAssetUploadUrlRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetAssetUploadUrlResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetAssetUploadUrlResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetAssetUploadUrlResponse;
class UScriptStruct* FMultiplayerGetAssetUploadUrlResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetAssetUploadUrlResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetAssetUploadUrlResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetAssetUploadUrlResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetAssetUploadUrlResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetAssetUploadUrlResponse>()
{
	return FMultiplayerGetAssetUploadUrlResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AssetUploadUrl_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_AssetUploadUrl;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_FileName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_FileName;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetAssetUploadUrlResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_AssetUploadUrl_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The asset's upload URL. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The asset's upload URL." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_AssetUploadUrl = { "AssetUploadUrl", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetAssetUploadUrlResponse, AssetUploadUrl), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_AssetUploadUrl_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_AssetUploadUrl_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_FileName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The asset's file name to get the upload URL for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The asset's file name to get the upload URL for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_FileName = { "FileName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetAssetUploadUrlResponse, FileName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_FileName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_FileName_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_AssetUploadUrl,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_FileName,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetAssetUploadUrlResponse",
		sizeof(FMultiplayerGetAssetUploadUrlResponse),
		alignof(FMultiplayerGetAssetUploadUrlResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetAssetUploadUrlResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetAssetUploadUrlResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetAssetUploadUrlResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetBuildRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetBuildRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetBuildRequest;
class UScriptStruct* FMultiplayerGetBuildRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetBuildRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetBuildRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetBuildRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetBuildRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetBuildRequest>()
{
	return FMultiplayerGetBuildRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns the details about a multiplayer server build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns the details about a multiplayer server build." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetBuildRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of the build to get. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of the build to get." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_BuildId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_CustomTags,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetBuildRequest",
		sizeof(FMultiplayerGetBuildRequest),
		alignof(FMultiplayerGetBuildRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetBuildRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetBuildRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetBuildRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetBuildResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetBuildResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetBuildResponse;
class UScriptStruct* FMultiplayerGetBuildResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetBuildResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetBuildResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetBuildResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetBuildResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetBuildResponse>()
{
	return FMultiplayerGetBuildResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AreAssetsReadonly_MetaData[];
#endif
		static void NewProp_AreAssetsReadonly_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_AreAssetsReadonly;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildName;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildStatus_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildStatus;
		static const UECodeGen_Private::FBytePropertyParams NewProp_ContainerFlavor_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ContainerFlavor_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_ContainerFlavor;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ContainerRunCommand_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ContainerRunCommand;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CreationTime_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_CreationTime;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomGameContainerImage_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomGameContainerImage;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_GameAssetReferences_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GameAssetReferences_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_GameAssetReferences;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_GameCertificateReferences_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GameCertificateReferences_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_GameCertificateReferences;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_InstrumentationConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_InstrumentationConfiguration;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Metadata_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Metadata;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MultiplayerServerCountPerVm_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_MultiplayerServerCountPerVm;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_OsPlatform_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_OsPlatform;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Ports_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Ports_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_Ports;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_RegionConfigurations_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_RegionConfigurations_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_RegionConfigurations;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerResourceConstraints_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_ServerResourceConstraints;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerType_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ServerType;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_StartMultiplayerServerCommand_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_StartMultiplayerServerCommand;
		static const UECodeGen_Private::FBytePropertyParams NewProp_VmSize_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VmSize_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_VmSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VmStartupScriptConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_VmStartupScriptConfiguration;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetBuildResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_AreAssetsReadonly_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\n     * will have the same assets mounted in the container.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\nwill have the same assets mounted in the container." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_AreAssetsReadonly_SetBit(void* Obj)
	{
		((FMultiplayerGetBuildResponse*)Obj)->AreAssetsReadonly = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_AreAssetsReadonly = { "AreAssetsReadonly", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerGetBuildResponse), &Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_AreAssetsReadonly_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_AreAssetsReadonly_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_AreAssetsReadonly_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of the build." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The build name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The build name." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildName = { "BuildName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, BuildName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildName_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildStatus_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The current build status. Valid values are - Deploying, Deployed, DeletingRegion, Unhealthy. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The current build status. Valid values are - Deploying, Deployed, DeletingRegion, Unhealthy." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildStatus = { "BuildStatus", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, BuildStatus), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildStatus_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildStatus_MetaData)) };
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerFlavor_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerFlavor_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The flavor of container of he build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The flavor of container of he build." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerFlavor = { "ContainerFlavor", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, ContainerFlavor), Z_Construct_UEnum_PlayFab_EContainerFlavor, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerFlavor_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerFlavor_MetaData)) }; // 2931123663
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerRunCommand_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The container command to run when the multiplayer server has been allocated, including any arguments. This only applies\n     * to custom builds. If the build is a managed build, this field will be null.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The container command to run when the multiplayer server has been allocated, including any arguments. This only applies\nto custom builds. If the build is a managed build, this field will be null." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerRunCommand = { "ContainerRunCommand", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, ContainerRunCommand), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerRunCommand_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerRunCommand_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CreationTime_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The time the build was created in UTC. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The time the build was created in UTC." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CreationTime = { "CreationTime", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, CreationTime), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CreationTime_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CreationTime_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CustomGameContainerImage_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The custom game container image for a custom build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The custom game container image for a custom build." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CustomGameContainerImage = { "CustomGameContainerImage", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, CustomGameContainerImage), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CustomGameContainerImage_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CustomGameContainerImage_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameAssetReferences_Inner = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameAssetReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game assets for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game assets for the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameAssetReferences = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, GameAssetReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameAssetReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameAssetReferences_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameCertificateReferences_Inner = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameCertificateReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game certificates for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game certificates for the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameCertificateReferences = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, GameCertificateReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameCertificateReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameCertificateReferences_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_InstrumentationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The instrumentation configuration of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The instrumentation configuration of the build." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_InstrumentationConfiguration = { "InstrumentationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, InstrumentationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_InstrumentationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_InstrumentationConfiguration_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Metadata_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * Metadata of the build. The keys are case insensitive. The build metadata is made available to the server through Game\n     * Server SDK (GSDK).\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Metadata of the build. The keys are case insensitive. The build metadata is made available to the server through Game\nServer SDK (GSDK)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Metadata = { "Metadata", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, Metadata), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Metadata_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Metadata_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The number of multiplayer servers to hosted on a single VM of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The number of multiplayer servers to hosted on a single VM of the build." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_MultiplayerServerCountPerVm = { "MultiplayerServerCountPerVm", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, MultiplayerServerCountPerVm), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_OsPlatform_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The OS platform used for running the game process. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The OS platform used for running the game process." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_OsPlatform = { "OsPlatform", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, OsPlatform), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_OsPlatform_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_OsPlatform_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Ports_Inner = { "Ports", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Ports_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The ports the build is mapped on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ports the build is mapped on." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Ports = { "Ports", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, Ports), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Ports_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Ports_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_RegionConfigurations_Inner = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_RegionConfigurations_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region configuration for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region configuration for the build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_RegionConfigurations = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, RegionConfigurations), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_RegionConfigurations_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_RegionConfigurations_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ServerResourceConstraints_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The resource constraints to apply to each server on the VM. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The resource constraints to apply to each server on the VM." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ServerResourceConstraints = { "ServerResourceConstraints", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, ServerResourceConstraints), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ServerResourceConstraints_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ServerResourceConstraints_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ServerType_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The type of game server being hosted. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The type of game server being hosted." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ServerType = { "ServerType", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, ServerType), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ServerType_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ServerType_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_StartMultiplayerServerCommand_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The command to run when the multiplayer server has been allocated, including any arguments. This only applies to managed\n     * builds. If the build is a custom build, this field will be null.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The command to run when the multiplayer server has been allocated, including any arguments. This only applies to managed\nbuilds. If the build is a custom build, this field will be null." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_StartMultiplayerServerCommand = { "StartMultiplayerServerCommand", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, StartMultiplayerServerCommand), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_StartMultiplayerServerCommand_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_StartMultiplayerServerCommand_MetaData)) };
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_VmSize_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_VmSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The VM size the build was created on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The VM size the build was created on." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_VmSize = { "VmSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, VmSize), Z_Construct_UEnum_PlayFab_EAzureVmSize, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_VmSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_VmSize_MetaData)) }; // 2933196177
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_VmStartupScriptConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The configuration for the VmStartupScript feature for the build */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The configuration for the VmStartupScript feature for the build" },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_VmStartupScriptConfiguration = { "VmStartupScriptConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildResponse, VmStartupScriptConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_VmStartupScriptConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_VmStartupScriptConfiguration_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_AreAssetsReadonly,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildStatus,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerFlavor_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerFlavor,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerRunCommand,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CreationTime,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CustomGameContainerImage,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameAssetReferences_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameAssetReferences,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameCertificateReferences_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameCertificateReferences,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_InstrumentationConfiguration,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Metadata,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_MultiplayerServerCountPerVm,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_OsPlatform,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Ports_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Ports,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_RegionConfigurations_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_RegionConfigurations,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ServerResourceConstraints,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ServerType,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_StartMultiplayerServerCommand,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_VmSize_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_VmSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_VmStartupScriptConfiguration,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetBuildResponse",
		sizeof(FMultiplayerGetBuildResponse),
		alignof(FMultiplayerGetBuildResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetBuildResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetBuildResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetBuildResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetBuildAliasRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetBuildAliasRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetBuildAliasRequest;
class UScriptStruct* FMultiplayerGetBuildAliasRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetBuildAliasRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetBuildAliasRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetBuildAliasRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetBuildAliasRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetBuildAliasRequest>()
{
	return FMultiplayerGetBuildAliasRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AliasId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_AliasId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns the details about a multiplayer server build alias. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns the details about a multiplayer server build alias." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetBuildAliasRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_AliasId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string alias ID of the alias to perform the action on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string alias ID of the alias to perform the action on." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_AliasId = { "AliasId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildAliasRequest, AliasId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_AliasId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_AliasId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetBuildAliasRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_AliasId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_CustomTags,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetBuildAliasRequest",
		sizeof(FMultiplayerGetBuildAliasRequest),
		alignof(FMultiplayerGetBuildAliasRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetBuildAliasRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetBuildAliasRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetBuildAliasRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetContainerRegistryCredentialsRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetContainerRegistryCredentialsRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetContainerRegistryCredentialsRequest;
class UScriptStruct* FMultiplayerGetContainerRegistryCredentialsRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetContainerRegistryCredentialsRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetContainerRegistryCredentialsRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetContainerRegistryCredentialsRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetContainerRegistryCredentialsRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetContainerRegistryCredentialsRequest>()
{
	return FMultiplayerGetContainerRegistryCredentialsRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Gets credentials to the container registry where game developers can upload custom container images to before creating a\n * new build.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets credentials to the container registry where game developers can upload custom container images to before creating a\nnew build." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetContainerRegistryCredentialsRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetContainerRegistryCredentialsRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetContainerRegistryCredentialsRequest",
		sizeof(FMultiplayerGetContainerRegistryCredentialsRequest),
		alignof(FMultiplayerGetContainerRegistryCredentialsRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetContainerRegistryCredentialsRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetContainerRegistryCredentialsRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetContainerRegistryCredentialsRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetContainerRegistryCredentialsResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetContainerRegistryCredentialsResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetContainerRegistryCredentialsResponse;
class UScriptStruct* FMultiplayerGetContainerRegistryCredentialsResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetContainerRegistryCredentialsResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetContainerRegistryCredentialsResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetContainerRegistryCredentialsResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetContainerRegistryCredentialsResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetContainerRegistryCredentialsResponse>()
{
	return FMultiplayerGetContainerRegistryCredentialsResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_DnsName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_DnsName;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Password_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Password;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Username_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Username;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetContainerRegistryCredentialsResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_DnsName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The url of the container registry. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The url of the container registry." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_DnsName = { "DnsName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetContainerRegistryCredentialsResponse, DnsName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_DnsName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_DnsName_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Password_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The password for accessing the container registry. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The password for accessing the container registry." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Password = { "Password", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetContainerRegistryCredentialsResponse, Password), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Password_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Password_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Username_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The username for accessing the container registry. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The username for accessing the container registry." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Username = { "Username", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetContainerRegistryCredentialsResponse, Username), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Username_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Username_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_DnsName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Password,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Username,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetContainerRegistryCredentialsResponse",
		sizeof(FMultiplayerGetContainerRegistryCredentialsResponse),
		alignof(FMultiplayerGetContainerRegistryCredentialsResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetContainerRegistryCredentialsResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetContainerRegistryCredentialsResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetContainerRegistryCredentialsResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetMultiplayerServerDetailsRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetMultiplayerServerDetailsRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerDetailsRequest;
class UScriptStruct* FMultiplayerGetMultiplayerServerDetailsRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerDetailsRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerDetailsRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetMultiplayerServerDetailsRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerDetailsRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetMultiplayerServerDetailsRequest>()
{
	return FMultiplayerGetMultiplayerServerDetailsRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SessionId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SessionId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Gets multiplayer server session details for a build in a specific region. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets multiplayer server session details for a build in a specific region." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetMultiplayerServerDetailsRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_SessionId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The title generated guid string session ID of the multiplayer server to get details for. This is to keep track of\n     * multiplayer server sessions.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The title generated guid string session ID of the multiplayer server to get details for. This is to keep track of\nmultiplayer server sessions." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_SessionId = { "SessionId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsRequest, SessionId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_SessionId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_SessionId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_SessionId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetMultiplayerServerDetailsRequest",
		sizeof(FMultiplayerGetMultiplayerServerDetailsRequest),
		alignof(FMultiplayerGetMultiplayerServerDetailsRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerDetailsRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerDetailsRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerDetailsRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetMultiplayerServerDetailsResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetMultiplayerServerDetailsResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerDetailsResponse;
class UScriptStruct* FMultiplayerGetMultiplayerServerDetailsResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerDetailsResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerDetailsResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetMultiplayerServerDetailsResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerDetailsResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetMultiplayerServerDetailsResponse>()
{
	return FMultiplayerGetMultiplayerServerDetailsResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildId;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_ConnectedPlayers_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ConnectedPlayers_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_ConnectedPlayers;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_FQDN_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_FQDN;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_IPV4Address_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_IPV4Address;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_LastStateTransitionTime_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_LastStateTransitionTime;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Ports_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Ports_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_Ports;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_PublicIPV4Addresses_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PublicIPV4Addresses_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_PublicIPV4Addresses;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Region_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Region;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ServerId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SessionId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SessionId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_State_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_State;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VmId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_VmId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetMultiplayerServerDetailsResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The identity of the build in which the server was allocated. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The identity of the build in which the server was allocated." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_BuildId_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ConnectedPlayers_Inner = { "ConnectedPlayers", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ConnectedPlayers_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The connected players in the multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The connected players in the multiplayer server." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ConnectedPlayers = { "ConnectedPlayers", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, ConnectedPlayers), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ConnectedPlayers_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ConnectedPlayers_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_FQDN_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The fully qualified domain name of the virtual machine that is hosting this multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The fully qualified domain name of the virtual machine that is hosting this multiplayer server." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_FQDN = { "FQDN", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, FQDN), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_FQDN_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_FQDN_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_IPV4Address_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The public IPv4 address of the virtual machine that is hosting this multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The public IPv4 address of the virtual machine that is hosting this multiplayer server." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_IPV4Address = { "IPV4Address", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, IPV4Address), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_IPV4Address_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_IPV4Address_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_LastStateTransitionTime_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The time (UTC) at which a change in the multiplayer server state was observed. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The time (UTC) at which a change in the multiplayer server state was observed." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_LastStateTransitionTime = { "LastStateTransitionTime", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, LastStateTransitionTime), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_LastStateTransitionTime_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_LastStateTransitionTime_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Ports_Inner = { "Ports", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Ports_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The ports the multiplayer server uses. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ports the multiplayer server uses." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Ports = { "Ports", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, Ports), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Ports_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Ports_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_PublicIPV4Addresses_Inner = { "PublicIPV4Addresses", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_PublicIPV4Addresses_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of public Ipv4 addresses associated with the server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of public Ipv4 addresses associated with the server." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_PublicIPV4Addresses = { "PublicIPV4Addresses", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, PublicIPV4Addresses), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_PublicIPV4Addresses_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_PublicIPV4Addresses_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Region_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region the multiplayer server is located in. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region the multiplayer server is located in." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Region = { "Region", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, Region), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Region_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Region_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ServerId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The string server ID of the multiplayer server generated by PlayFab. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The string server ID of the multiplayer server generated by PlayFab." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ServerId = { "ServerId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, ServerId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ServerId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ServerId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_SessionId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string session ID of the multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string session ID of the multiplayer server." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_SessionId = { "SessionId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, SessionId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_SessionId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_SessionId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_State_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The state of the multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The state of the multiplayer server." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_State = { "State", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, State), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_State_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_State_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_VmId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The virtual machine ID that the multiplayer server is located on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The virtual machine ID that the multiplayer server is located on." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_VmId = { "VmId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, VmId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_VmId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_VmId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_BuildId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ConnectedPlayers_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ConnectedPlayers,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_FQDN,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_IPV4Address,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_LastStateTransitionTime,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Ports_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Ports,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_PublicIPV4Addresses_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_PublicIPV4Addresses,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Region,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ServerId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_SessionId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_State,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_VmId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetMultiplayerServerDetailsResponse",
		sizeof(FMultiplayerGetMultiplayerServerDetailsResponse),
		alignof(FMultiplayerGetMultiplayerServerDetailsResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerDetailsResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerDetailsResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerDetailsResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetMultiplayerServerLogsRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetMultiplayerServerLogsRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerLogsRequest;
class UScriptStruct* FMultiplayerGetMultiplayerServerLogsRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerLogsRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerLogsRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetMultiplayerServerLogsRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerLogsRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetMultiplayerServerLogsRequest>()
{
	return FMultiplayerGetMultiplayerServerLogsRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ServerId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Gets multiplayer server logs for a specific server id in a region. The logs are available only after a server has\n * terminated.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets multiplayer server logs for a specific server id in a region. The logs are available only after a server has\nterminated." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetMultiplayerServerLogsRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerLogsRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_ServerId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The server ID of multiplayer server to get logs for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The server ID of multiplayer server to get logs for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_ServerId = { "ServerId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerLogsRequest, ServerId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_ServerId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_ServerId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_ServerId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetMultiplayerServerLogsRequest",
		sizeof(FMultiplayerGetMultiplayerServerLogsRequest),
		alignof(FMultiplayerGetMultiplayerServerLogsRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerLogsRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerLogsRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerLogsRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetMultiplayerServerLogsResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetMultiplayerServerLogsResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerLogsResponse;
class UScriptStruct* FMultiplayerGetMultiplayerServerLogsResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerLogsResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerLogsResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetMultiplayerServerLogsResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerLogsResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetMultiplayerServerLogsResponse>()
{
	return FMultiplayerGetMultiplayerServerLogsResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_LogDownloadUrl_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_LogDownloadUrl;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetMultiplayerServerLogsResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::NewProp_LogDownloadUrl_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** URL for logs download. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "URL for logs download." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::NewProp_LogDownloadUrl = { "LogDownloadUrl", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerLogsResponse, LogDownloadUrl), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::NewProp_LogDownloadUrl_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::NewProp_LogDownloadUrl_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::NewProp_LogDownloadUrl,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetMultiplayerServerLogsResponse",
		sizeof(FMultiplayerGetMultiplayerServerLogsResponse),
		alignof(FMultiplayerGetMultiplayerServerLogsResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerLogsResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerLogsResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerLogsResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerSessionLogsBySessionIdRequest;
class UScriptStruct* FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerSessionLogsBySessionIdRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerSessionLogsBySessionIdRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetMultiplayerSessionLogsBySessionIdRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerSessionLogsBySessionIdRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest>()
{
	return FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SessionId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SessionId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Gets multiplayer server logs for a specific server id in a region. The logs are available only after a server has\n * terminated.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets multiplayer server logs for a specific server id in a region. The logs are available only after a server has\nterminated." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_SessionId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The server ID of multiplayer server to get logs for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The server ID of multiplayer server to get logs for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_SessionId = { "SessionId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest, SessionId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_SessionId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_SessionId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_SessionId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetMultiplayerSessionLogsBySessionIdRequest",
		sizeof(FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest),
		alignof(FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerSessionLogsBySessionIdRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerSessionLogsBySessionIdRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerSessionLogsBySessionIdRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetRemoteLoginEndpointRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetRemoteLoginEndpointRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetRemoteLoginEndpointRequest;
class UScriptStruct* FMultiplayerGetRemoteLoginEndpointRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetRemoteLoginEndpointRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetRemoteLoginEndpointRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetRemoteLoginEndpointRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetRemoteLoginEndpointRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetRemoteLoginEndpointRequest>()
{
	return FMultiplayerGetRemoteLoginEndpointRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Region_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Region;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VmId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_VmId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Gets a remote login endpoint to a VM that is hosting a multiplayer server build in a specific region. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets a remote login endpoint to a VM that is hosting a multiplayer server build in a specific region." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetRemoteLoginEndpointRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of the multiplayer server to get remote login information for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of the multiplayer server to get remote login information for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetRemoteLoginEndpointRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetRemoteLoginEndpointRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_Region_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region of the multiplayer server to get remote login information for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region of the multiplayer server to get remote login information for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_Region = { "Region", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetRemoteLoginEndpointRequest, Region), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_Region_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_Region_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_VmId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The virtual machine ID the multiplayer server is located on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The virtual machine ID the multiplayer server is located on." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_VmId = { "VmId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetRemoteLoginEndpointRequest, VmId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_VmId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_VmId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_BuildId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_Region,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_VmId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetRemoteLoginEndpointRequest",
		sizeof(FMultiplayerGetRemoteLoginEndpointRequest),
		alignof(FMultiplayerGetRemoteLoginEndpointRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetRemoteLoginEndpointRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetRemoteLoginEndpointRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetRemoteLoginEndpointRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetRemoteLoginEndpointResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetRemoteLoginEndpointResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetRemoteLoginEndpointResponse;
class UScriptStruct* FMultiplayerGetRemoteLoginEndpointResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetRemoteLoginEndpointResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetRemoteLoginEndpointResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetRemoteLoginEndpointResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetRemoteLoginEndpointResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetRemoteLoginEndpointResponse>()
{
	return FMultiplayerGetRemoteLoginEndpointResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_IPV4Address_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_IPV4Address;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Port_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_Port;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetRemoteLoginEndpointResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_IPV4Address_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The remote login IPV4 address of multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The remote login IPV4 address of multiplayer server." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_IPV4Address = { "IPV4Address", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetRemoteLoginEndpointResponse, IPV4Address), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_IPV4Address_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_IPV4Address_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_Port_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The remote login port of multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The remote login port of multiplayer server." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_Port = { "Port", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetRemoteLoginEndpointResponse, Port), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_Port_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_Port_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_IPV4Address,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_Port,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetRemoteLoginEndpointResponse",
		sizeof(FMultiplayerGetRemoteLoginEndpointResponse),
		alignof(FMultiplayerGetRemoteLoginEndpointResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetRemoteLoginEndpointResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetRemoteLoginEndpointResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetRemoteLoginEndpointResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetTitleEnabledForMultiplayerServersStatusRequest;
class UScriptStruct* FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetTitleEnabledForMultiplayerServersStatusRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetTitleEnabledForMultiplayerServersStatusRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetTitleEnabledForMultiplayerServersStatusRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetTitleEnabledForMultiplayerServersStatusRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest>()
{
	return FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Gets the status of whether a title is enabled for the multiplayer server feature. The enabled status can be\n * Initializing, Enabled, and Disabled.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets the status of whether a title is enabled for the multiplayer server feature. The enabled status can be\nInitializing, Enabled, and Disabled." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::NewProp_CustomTags,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetTitleEnabledForMultiplayerServersStatusRequest",
		sizeof(FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest),
		alignof(FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetTitleEnabledForMultiplayerServersStatusRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetTitleEnabledForMultiplayerServersStatusRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetTitleEnabledForMultiplayerServersStatusRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetTitleEnabledForMultiplayerServersStatusResponse;
class UScriptStruct* FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetTitleEnabledForMultiplayerServersStatusResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetTitleEnabledForMultiplayerServersStatusResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetTitleEnabledForMultiplayerServersStatusResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetTitleEnabledForMultiplayerServersStatusResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse>()
{
	return FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FBytePropertyParams NewProp_Status_Underlying;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Status_MetaData[];
#endif
		static const UECodeGen_Private::FEnumPropertyParams NewProp_Status;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse>();
	}
	const UECodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::NewProp_Status_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::NewProp_Status_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The enabled status for the multiplayer server features for the title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The enabled status for the multiplayer server features for the title." },
	};
#endif
	const UECodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::NewProp_Status = { "Status", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse, Status), Z_Construct_UEnum_PlayFab_ETitleMultiplayerServerEnabledStatus, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::NewProp_Status_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::NewProp_Status_MetaData)) }; // 3235126045
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::NewProp_Status_Underlying,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::NewProp_Status,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetTitleEnabledForMultiplayerServersStatusResponse",
		sizeof(FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse),
		alignof(FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetTitleEnabledForMultiplayerServersStatusResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetTitleEnabledForMultiplayerServersStatusResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetTitleEnabledForMultiplayerServersStatusResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotaChangeRequest;
class UScriptStruct* FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotaChangeRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotaChangeRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetTitleMultiplayerServersQuotaChangeRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotaChangeRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest>()
{
	return FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_RequestId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_RequestId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Gets a title's server quota change request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets a title's server quota change request." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_RequestId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Id of the change request to get. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Id of the change request to get." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_RequestId = { "RequestId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest, RequestId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_RequestId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_RequestId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_RequestId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetTitleMultiplayerServersQuotaChangeRequest",
		sizeof(FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest),
		alignof(FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotaChangeRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotaChangeRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotaChangeRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotaChangeResponse;
class UScriptStruct* FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotaChangeResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotaChangeResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetTitleMultiplayerServersQuotaChangeResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotaChangeResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse>()
{
	return FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Change_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Change;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_Change_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The change request for this title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The change request for this title." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_Change = { "Change", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse, Change), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_Change_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_Change_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_Change,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetTitleMultiplayerServersQuotaChangeResponse",
		sizeof(FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse),
		alignof(FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotaChangeResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotaChangeResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotaChangeResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetTitleMultiplayerServersQuotasRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetTitleMultiplayerServersQuotasRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotasRequest;
class UScriptStruct* FMultiplayerGetTitleMultiplayerServersQuotasRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotasRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotasRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetTitleMultiplayerServersQuotasRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotasRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetTitleMultiplayerServersQuotasRequest>()
{
	return FMultiplayerGetTitleMultiplayerServersQuotasRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Gets the quotas for a title in relation to multiplayer servers. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets the quotas for a title in relation to multiplayer servers." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetTitleMultiplayerServersQuotasRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetTitleMultiplayerServersQuotasRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::NewProp_CustomTags,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetTitleMultiplayerServersQuotasRequest",
		sizeof(FMultiplayerGetTitleMultiplayerServersQuotasRequest),
		alignof(FMultiplayerGetTitleMultiplayerServersQuotasRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotasRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotasRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotasRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerGetTitleMultiplayerServersQuotasResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetTitleMultiplayerServersQuotasResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotasResponse;
class UScriptStruct* FMultiplayerGetTitleMultiplayerServersQuotasResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotasResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotasResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetTitleMultiplayerServersQuotasResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotasResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetTitleMultiplayerServersQuotasResponse>()
{
	return FMultiplayerGetTitleMultiplayerServersQuotasResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Quotas_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Quotas;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetTitleMultiplayerServersQuotasResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::NewProp_Quotas_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The various quotas for multiplayer servers for the title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The various quotas for multiplayer servers for the title." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::NewProp_Quotas = { "Quotas", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerGetTitleMultiplayerServersQuotasResponse, Quotas), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::NewProp_Quotas_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::NewProp_Quotas_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::NewProp_Quotas,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetTitleMultiplayerServersQuotasResponse",
		sizeof(FMultiplayerGetTitleMultiplayerServersQuotasResponse),
		alignof(FMultiplayerGetTitleMultiplayerServersQuotasResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotasResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotasResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotasResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListMultiplayerServersRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListMultiplayerServersRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListMultiplayerServersRequest;
class UScriptStruct* FMultiplayerListMultiplayerServersRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListMultiplayerServersRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListMultiplayerServersRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListMultiplayerServersRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListMultiplayerServersRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListMultiplayerServersRequest>()
{
	return FMultiplayerListMultiplayerServersRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Region_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Region;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of multiplayer servers for a build in a specific region. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of multiplayer servers for a build in a specific region." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListMultiplayerServersRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of the multiplayer servers to list. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of the multiplayer servers to list." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListMultiplayerServersRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListMultiplayerServersRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size for the request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size for the request." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListMultiplayerServersRequest, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_Region_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region the multiplayer servers to list. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region the multiplayer servers to list." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_Region = { "Region", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListMultiplayerServersRequest, Region), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_Region_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_Region_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged request." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListMultiplayerServersRequest, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_SkipToken_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_BuildId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_PageSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_Region,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_SkipToken,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListMultiplayerServersRequest",
		sizeof(FMultiplayerListMultiplayerServersRequest),
		alignof(FMultiplayerListMultiplayerServersRequest),
		Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListMultiplayerServersRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListMultiplayerServersRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListMultiplayerServersRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListMultiplayerServersResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListMultiplayerServersResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListMultiplayerServersResponse;
class UScriptStruct* FMultiplayerListMultiplayerServersResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListMultiplayerServersResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListMultiplayerServersResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListMultiplayerServersResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListMultiplayerServersResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListMultiplayerServersResponse>()
{
	return FMultiplayerListMultiplayerServersResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FObjectPropertyParams NewProp_MultiplayerServerSummaries_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_MultiplayerServerSummaries_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_MultiplayerServerSummaries;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListMultiplayerServersResponse>();
	}
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_MultiplayerServerSummaries_Inner = { "MultiplayerServerSummaries", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_MultiplayerServerSummaries_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of multiplayer server summary details. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of multiplayer server summary details." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_MultiplayerServerSummaries = { "MultiplayerServerSummaries", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListMultiplayerServersResponse, MultiplayerServerSummaries), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_MultiplayerServerSummaries_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_MultiplayerServerSummaries_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size on the response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size on the response." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListMultiplayerServersResponse, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged response." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListMultiplayerServersResponse, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_SkipToken_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_MultiplayerServerSummaries_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_MultiplayerServerSummaries,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_PageSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_SkipToken,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListMultiplayerServersResponse",
		sizeof(FMultiplayerListMultiplayerServersResponse),
		alignof(FMultiplayerListMultiplayerServersResponse),
		Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListMultiplayerServersResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListMultiplayerServersResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListMultiplayerServersResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListAssetSummariesRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListAssetSummariesRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListAssetSummariesRequest;
class UScriptStruct* FMultiplayerListAssetSummariesRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListAssetSummariesRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListAssetSummariesRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListAssetSummariesRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListAssetSummariesRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListAssetSummariesRequest>()
{
	return FMultiplayerListAssetSummariesRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of multiplayer server game asset summaries for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of multiplayer server game asset summaries for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListAssetSummariesRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListAssetSummariesRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size for the request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size for the request." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListAssetSummariesRequest, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged request." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListAssetSummariesRequest, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_SkipToken_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_PageSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_SkipToken,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListAssetSummariesRequest",
		sizeof(FMultiplayerListAssetSummariesRequest),
		alignof(FMultiplayerListAssetSummariesRequest),
		Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListAssetSummariesRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListAssetSummariesRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListAssetSummariesRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListAssetSummariesResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListAssetSummariesResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListAssetSummariesResponse;
class UScriptStruct* FMultiplayerListAssetSummariesResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListAssetSummariesResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListAssetSummariesResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListAssetSummariesResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListAssetSummariesResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListAssetSummariesResponse>()
{
	return FMultiplayerListAssetSummariesResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FObjectPropertyParams NewProp_AssetSummaries_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AssetSummaries_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_AssetSummaries;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListAssetSummariesResponse>();
	}
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_AssetSummaries_Inner = { "AssetSummaries", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_AssetSummaries_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of asset summaries. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of asset summaries." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_AssetSummaries = { "AssetSummaries", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListAssetSummariesResponse, AssetSummaries), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_AssetSummaries_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_AssetSummaries_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size on the response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size on the response." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListAssetSummariesResponse, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged response." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListAssetSummariesResponse, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_SkipToken_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_AssetSummaries_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_AssetSummaries,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_PageSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_SkipToken,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListAssetSummariesResponse",
		sizeof(FMultiplayerListAssetSummariesResponse),
		alignof(FMultiplayerListAssetSummariesResponse),
		Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListAssetSummariesResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListAssetSummariesResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListAssetSummariesResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListBuildAliasesRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListBuildAliasesRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListBuildAliasesRequest;
class UScriptStruct* FMultiplayerListBuildAliasesRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListBuildAliasesRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListBuildAliasesRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListBuildAliasesRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListBuildAliasesRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListBuildAliasesRequest>()
{
	return FMultiplayerListBuildAliasesRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of summarized details of all multiplayer server builds for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of summarized details of all multiplayer server builds for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListBuildAliasesRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListBuildAliasesRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size for the request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size for the request." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListBuildAliasesRequest, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged request." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListBuildAliasesRequest, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_SkipToken_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_PageSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_SkipToken,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListBuildAliasesRequest",
		sizeof(FMultiplayerListBuildAliasesRequest),
		alignof(FMultiplayerListBuildAliasesRequest),
		Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListBuildAliasesRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListBuildAliasesRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListBuildAliasesRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListBuildAliasesResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListBuildAliasesResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListBuildAliasesResponse;
class UScriptStruct* FMultiplayerListBuildAliasesResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListBuildAliasesResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListBuildAliasesResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListBuildAliasesResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListBuildAliasesResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListBuildAliasesResponse>()
{
	return FMultiplayerListBuildAliasesResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FObjectPropertyParams NewProp_BuildAliases_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildAliases_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_BuildAliases;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListBuildAliasesResponse>();
	}
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_BuildAliases_Inner = { "BuildAliases", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_BuildAliases_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of build aliases for the title */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of build aliases for the title" },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_BuildAliases = { "BuildAliases", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListBuildAliasesResponse, BuildAliases), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_BuildAliases_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_BuildAliases_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size on the response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size on the response." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListBuildAliasesResponse, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged response." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListBuildAliasesResponse, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_SkipToken_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_BuildAliases_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_BuildAliases,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_PageSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_SkipToken,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListBuildAliasesResponse",
		sizeof(FMultiplayerListBuildAliasesResponse),
		alignof(FMultiplayerListBuildAliasesResponse),
		Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListBuildAliasesResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListBuildAliasesResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListBuildAliasesResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListBuildSummariesRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListBuildSummariesRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListBuildSummariesRequest;
class UScriptStruct* FMultiplayerListBuildSummariesRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListBuildSummariesRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListBuildSummariesRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListBuildSummariesRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListBuildSummariesRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListBuildSummariesRequest>()
{
	return FMultiplayerListBuildSummariesRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of summarized details of all multiplayer server builds for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of summarized details of all multiplayer server builds for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListBuildSummariesRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListBuildSummariesRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size for the request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size for the request." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListBuildSummariesRequest, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged request." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListBuildSummariesRequest, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_SkipToken_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_PageSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_SkipToken,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListBuildSummariesRequest",
		sizeof(FMultiplayerListBuildSummariesRequest),
		alignof(FMultiplayerListBuildSummariesRequest),
		Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListBuildSummariesRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListBuildSummariesRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListBuildSummariesRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListBuildSummariesResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListBuildSummariesResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListBuildSummariesResponse;
class UScriptStruct* FMultiplayerListBuildSummariesResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListBuildSummariesResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListBuildSummariesResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListBuildSummariesResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListBuildSummariesResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListBuildSummariesResponse>()
{
	return FMultiplayerListBuildSummariesResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FObjectPropertyParams NewProp_BuildSummaries_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildSummaries_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_BuildSummaries;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListBuildSummariesResponse>();
	}
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_BuildSummaries_Inner = { "BuildSummaries", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_BuildSummaries_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of build summaries for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of build summaries for a title." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_BuildSummaries = { "BuildSummaries", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListBuildSummariesResponse, BuildSummaries), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_BuildSummaries_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_BuildSummaries_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size on the response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size on the response." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListBuildSummariesResponse, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged response." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListBuildSummariesResponse, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_SkipToken_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_BuildSummaries_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_BuildSummaries,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_PageSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_SkipToken,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListBuildSummariesResponse",
		sizeof(FMultiplayerListBuildSummariesResponse),
		alignof(FMultiplayerListBuildSummariesResponse),
		Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListBuildSummariesResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListBuildSummariesResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListBuildSummariesResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListCertificateSummariesRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListCertificateSummariesRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListCertificateSummariesRequest;
class UScriptStruct* FMultiplayerListCertificateSummariesRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListCertificateSummariesRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListCertificateSummariesRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListCertificateSummariesRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListCertificateSummariesRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListCertificateSummariesRequest>()
{
	return FMultiplayerListCertificateSummariesRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of multiplayer server game certificates for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of multiplayer server game certificates for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListCertificateSummariesRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListCertificateSummariesRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size for the request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size for the request." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListCertificateSummariesRequest, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged request." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListCertificateSummariesRequest, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_SkipToken_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_PageSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_SkipToken,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListCertificateSummariesRequest",
		sizeof(FMultiplayerListCertificateSummariesRequest),
		alignof(FMultiplayerListCertificateSummariesRequest),
		Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListCertificateSummariesRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListCertificateSummariesRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListCertificateSummariesRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListCertificateSummariesResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListCertificateSummariesResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListCertificateSummariesResponse;
class UScriptStruct* FMultiplayerListCertificateSummariesResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListCertificateSummariesResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListCertificateSummariesResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListCertificateSummariesResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListCertificateSummariesResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListCertificateSummariesResponse>()
{
	return FMultiplayerListCertificateSummariesResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CertificateSummaries_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CertificateSummaries_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_CertificateSummaries;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListCertificateSummariesResponse>();
	}
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_CertificateSummaries_Inner = { "CertificateSummaries", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_CertificateSummaries_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of game certificates. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of game certificates." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_CertificateSummaries = { "CertificateSummaries", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListCertificateSummariesResponse, CertificateSummaries), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_CertificateSummaries_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_CertificateSummaries_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size on the response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size on the response." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListCertificateSummariesResponse, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged response." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListCertificateSummariesResponse, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_SkipToken_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_CertificateSummaries_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_CertificateSummaries,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_PageSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_SkipToken,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListCertificateSummariesResponse",
		sizeof(FMultiplayerListCertificateSummariesResponse),
		alignof(FMultiplayerListCertificateSummariesResponse),
		Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListCertificateSummariesResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListCertificateSummariesResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListCertificateSummariesResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListContainerImagesRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListContainerImagesRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListContainerImagesRequest;
class UScriptStruct* FMultiplayerListContainerImagesRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListContainerImagesRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListContainerImagesRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListContainerImagesRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListContainerImagesRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListContainerImagesRequest>()
{
	return FMultiplayerListContainerImagesRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of the container images that have been uploaded to the container registry for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of the container images that have been uploaded to the container registry for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListContainerImagesRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListContainerImagesRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size for the request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size for the request." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListContainerImagesRequest, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged request." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListContainerImagesRequest, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_SkipToken_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_PageSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_SkipToken,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListContainerImagesRequest",
		sizeof(FMultiplayerListContainerImagesRequest),
		alignof(FMultiplayerListContainerImagesRequest),
		Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListContainerImagesRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListContainerImagesRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListContainerImagesRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListContainerImagesResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListContainerImagesResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListContainerImagesResponse;
class UScriptStruct* FMultiplayerListContainerImagesResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListContainerImagesResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListContainerImagesResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListContainerImagesResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListContainerImagesResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListContainerImagesResponse>()
{
	return FMultiplayerListContainerImagesResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Images_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Images;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListContainerImagesResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_Images_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of container images. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of container images." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_Images = { "Images", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListContainerImagesResponse, Images), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_Images_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_Images_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size on the response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size on the response." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListContainerImagesResponse, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged response." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListContainerImagesResponse, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_SkipToken_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_Images,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_PageSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_SkipToken,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListContainerImagesResponse",
		sizeof(FMultiplayerListContainerImagesResponse),
		alignof(FMultiplayerListContainerImagesResponse),
		Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListContainerImagesResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListContainerImagesResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListContainerImagesResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListContainerImageTagsRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListContainerImageTagsRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListContainerImageTagsRequest;
class UScriptStruct* FMultiplayerListContainerImageTagsRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListContainerImageTagsRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListContainerImageTagsRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListContainerImageTagsRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListContainerImageTagsRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListContainerImageTagsRequest>()
{
	return FMultiplayerListContainerImageTagsRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ImageName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ImageName;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of the tags for a particular container image that exists in the container registry for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of the tags for a particular container image that exists in the container registry for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListContainerImageTagsRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListContainerImageTagsRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_ImageName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The container images we want to list tags for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The container images we want to list tags for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_ImageName = { "ImageName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListContainerImageTagsRequest, ImageName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_ImageName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_ImageName_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size for the request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size for the request." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListContainerImageTagsRequest, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged request." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListContainerImageTagsRequest, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_SkipToken_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_ImageName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_PageSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_SkipToken,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListContainerImageTagsRequest",
		sizeof(FMultiplayerListContainerImageTagsRequest),
		alignof(FMultiplayerListContainerImageTagsRequest),
		Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListContainerImageTagsRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListContainerImageTagsRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListContainerImageTagsRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListContainerImageTagsResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListContainerImageTagsResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListContainerImageTagsResponse;
class UScriptStruct* FMultiplayerListContainerImageTagsResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListContainerImageTagsResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListContainerImageTagsResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListContainerImageTagsResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListContainerImageTagsResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListContainerImageTagsResponse>()
{
	return FMultiplayerListContainerImageTagsResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SkipToken;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Tags_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Tags;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListContainerImageTagsResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size on the response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size on the response." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListContainerImageTagsResponse, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged response." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListContainerImageTagsResponse, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_SkipToken_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_Tags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of tags for a particular container image. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of tags for a particular container image." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_Tags = { "Tags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListContainerImageTagsResponse, Tags), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_Tags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_Tags_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_PageSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_SkipToken,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_Tags,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListContainerImageTagsResponse",
		sizeof(FMultiplayerListContainerImageTagsResponse),
		alignof(FMultiplayerListContainerImageTagsResponse),
		Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListContainerImageTagsResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListContainerImageTagsResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListContainerImageTagsResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListPartyQosServersRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListPartyQosServersRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListPartyQosServersRequest;
class UScriptStruct* FMultiplayerListPartyQosServersRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListPartyQosServersRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListPartyQosServersRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListPartyQosServersRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListPartyQosServersRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListPartyQosServersRequest>()
{
	return FMultiplayerListPartyQosServersRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of quality of service servers for party. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of quality of service servers for party." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListPartyQosServersRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListPartyQosServersRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::NewProp_CustomTags,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListPartyQosServersRequest",
		sizeof(FMultiplayerListPartyQosServersRequest),
		alignof(FMultiplayerListPartyQosServersRequest),
		Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListPartyQosServersRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListPartyQosServersRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListPartyQosServersRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListPartyQosServersResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListPartyQosServersResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListPartyQosServersResponse;
class UScriptStruct* FMultiplayerListPartyQosServersResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListPartyQosServersResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListPartyQosServersResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListPartyQosServersResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListPartyQosServersResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListPartyQosServersResponse>()
{
	return FMultiplayerListPartyQosServersResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_PageSize;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_QosServers_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_QosServers_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_QosServers;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListPartyQosServersResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size on the response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size on the response." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListPartyQosServersResponse, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_PageSize_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_QosServers_Inner = { "QosServers", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_QosServers_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of QoS servers. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of QoS servers." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_QosServers = { "QosServers", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListPartyQosServersResponse, QosServers), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_QosServers_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_QosServers_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged response." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListPartyQosServersResponse, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_SkipToken_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_PageSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_QosServers_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_QosServers,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_SkipToken,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListPartyQosServersResponse",
		sizeof(FMultiplayerListPartyQosServersResponse),
		alignof(FMultiplayerListPartyQosServersResponse),
		Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListPartyQosServersResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListPartyQosServersResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListPartyQosServersResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListQosServersForTitleRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListQosServersForTitleRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListQosServersForTitleRequest;
class UScriptStruct* FMultiplayerListQosServersForTitleRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListQosServersForTitleRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListQosServersForTitleRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListQosServersForTitleRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListQosServersForTitleRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListQosServersForTitleRequest>()
{
	return FMultiplayerListQosServersForTitleRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_IncludeAllRegions_MetaData[];
#endif
		static void NewProp_IncludeAllRegions_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_IncludeAllRegions;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_RoutingPreference_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_RoutingPreference;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of quality of service servers for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of quality of service servers for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListQosServersForTitleRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListQosServersForTitleRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_IncludeAllRegions_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * Indicates that the response should contain Qos servers for all regions, including those where there are no builds\n     * deployed for the title.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Indicates that the response should contain Qos servers for all regions, including those where there are no builds\ndeployed for the title." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_IncludeAllRegions_SetBit(void* Obj)
	{
		((FMultiplayerListQosServersForTitleRequest*)Obj)->IncludeAllRegions = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_IncludeAllRegions = { "IncludeAllRegions", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerListQosServersForTitleRequest), &Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_IncludeAllRegions_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_IncludeAllRegions_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_IncludeAllRegions_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_RoutingPreference_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Indicates the Routing Preference used by the Qos servers. The default Routing Preference is Microsoft */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Indicates the Routing Preference used by the Qos servers. The default Routing Preference is Microsoft" },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_RoutingPreference = { "RoutingPreference", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListQosServersForTitleRequest, RoutingPreference), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_RoutingPreference_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_RoutingPreference_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_IncludeAllRegions,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_RoutingPreference,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListQosServersForTitleRequest",
		sizeof(FMultiplayerListQosServersForTitleRequest),
		alignof(FMultiplayerListQosServersForTitleRequest),
		Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListQosServersForTitleRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListQosServersForTitleRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListQosServersForTitleRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListQosServersForTitleResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListQosServersForTitleResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListQosServersForTitleResponse;
class UScriptStruct* FMultiplayerListQosServersForTitleResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListQosServersForTitleResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListQosServersForTitleResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListQosServersForTitleResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListQosServersForTitleResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListQosServersForTitleResponse>()
{
	return FMultiplayerListQosServersForTitleResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_PageSize;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_QosServers_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_QosServers_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_QosServers;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListQosServersForTitleResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size on the response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size on the response." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListQosServersForTitleResponse, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_PageSize_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_QosServers_Inner = { "QosServers", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_QosServers_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of QoS servers. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of QoS servers." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_QosServers = { "QosServers", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListQosServersForTitleResponse, QosServers), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_QosServers_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_QosServers_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged response." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListQosServersForTitleResponse, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_SkipToken_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_PageSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_QosServers_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_QosServers,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_SkipToken,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListQosServersForTitleResponse",
		sizeof(FMultiplayerListQosServersForTitleResponse),
		alignof(FMultiplayerListQosServersForTitleResponse),
		Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListQosServersForTitleResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListQosServersForTitleResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListQosServersForTitleResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListTitleMultiplayerServersQuotaChangesRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListTitleMultiplayerServersQuotaChangesRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListTitleMultiplayerServersQuotaChangesRequest;
class UScriptStruct* FMultiplayerListTitleMultiplayerServersQuotaChangesRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListTitleMultiplayerServersQuotaChangesRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListTitleMultiplayerServersQuotaChangesRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListTitleMultiplayerServersQuotaChangesRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListTitleMultiplayerServersQuotaChangesRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListTitleMultiplayerServersQuotaChangesRequest>()
{
	return FMultiplayerListTitleMultiplayerServersQuotaChangesRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** List all server quota change requests for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "List all server quota change requests for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListTitleMultiplayerServersQuotaChangesRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListTitleMultiplayerServersQuotaChangesRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::NewProp_CustomTags,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListTitleMultiplayerServersQuotaChangesRequest",
		sizeof(FMultiplayerListTitleMultiplayerServersQuotaChangesRequest),
		alignof(FMultiplayerListTitleMultiplayerServersQuotaChangesRequest),
		Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListTitleMultiplayerServersQuotaChangesRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListTitleMultiplayerServersQuotaChangesRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListTitleMultiplayerServersQuotaChangesRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListTitleMultiplayerServersQuotaChangesResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListTitleMultiplayerServersQuotaChangesResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListTitleMultiplayerServersQuotaChangesResponse;
class UScriptStruct* FMultiplayerListTitleMultiplayerServersQuotaChangesResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListTitleMultiplayerServersQuotaChangesResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListTitleMultiplayerServersQuotaChangesResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListTitleMultiplayerServersQuotaChangesResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListTitleMultiplayerServersQuotaChangesResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListTitleMultiplayerServersQuotaChangesResponse>()
{
	return FMultiplayerListTitleMultiplayerServersQuotaChangesResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Changes_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Changes_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_Changes;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListTitleMultiplayerServersQuotaChangesResponse>();
	}
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::NewProp_Changes_Inner = { "Changes", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::NewProp_Changes_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** All change requests for this title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "All change requests for this title." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::NewProp_Changes = { "Changes", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListTitleMultiplayerServersQuotaChangesResponse, Changes), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::NewProp_Changes_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::NewProp_Changes_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::NewProp_Changes_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::NewProp_Changes,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListTitleMultiplayerServersQuotaChangesResponse",
		sizeof(FMultiplayerListTitleMultiplayerServersQuotaChangesResponse),
		alignof(FMultiplayerListTitleMultiplayerServersQuotaChangesResponse),
		Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListTitleMultiplayerServersQuotaChangesResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListTitleMultiplayerServersQuotaChangesResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListTitleMultiplayerServersQuotaChangesResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListVirtualMachineSummariesRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListVirtualMachineSummariesRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListVirtualMachineSummariesRequest;
class UScriptStruct* FMultiplayerListVirtualMachineSummariesRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListVirtualMachineSummariesRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListVirtualMachineSummariesRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListVirtualMachineSummariesRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListVirtualMachineSummariesRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListVirtualMachineSummariesRequest>()
{
	return FMultiplayerListVirtualMachineSummariesRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Region_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Region;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of virtual machines for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of virtual machines for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListVirtualMachineSummariesRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of the virtual machines to list. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of the virtual machines to list." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListVirtualMachineSummariesRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListVirtualMachineSummariesRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size for the request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size for the request." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListVirtualMachineSummariesRequest, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_Region_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region of the virtual machines to list. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region of the virtual machines to list." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_Region = { "Region", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListVirtualMachineSummariesRequest, Region), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_Region_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_Region_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged request." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListVirtualMachineSummariesRequest, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_SkipToken_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_BuildId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_PageSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_Region,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_SkipToken,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListVirtualMachineSummariesRequest",
		sizeof(FMultiplayerListVirtualMachineSummariesRequest),
		alignof(FMultiplayerListVirtualMachineSummariesRequest),
		Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListVirtualMachineSummariesRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListVirtualMachineSummariesRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListVirtualMachineSummariesRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerListVirtualMachineSummariesResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListVirtualMachineSummariesResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerListVirtualMachineSummariesResponse;
class UScriptStruct* FMultiplayerListVirtualMachineSummariesResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerListVirtualMachineSummariesResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerListVirtualMachineSummariesResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListVirtualMachineSummariesResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerListVirtualMachineSummariesResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListVirtualMachineSummariesResponse>()
{
	return FMultiplayerListVirtualMachineSummariesResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UECodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_VirtualMachines_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VirtualMachines_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_VirtualMachines;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListVirtualMachineSummariesResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size on the response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size on the response." },
	};
#endif
	const UECodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListVirtualMachineSummariesResponse, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged response." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListVirtualMachineSummariesResponse, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_SkipToken_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_VirtualMachines_Inner = { "VirtualMachines", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_VirtualMachines_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of virtual machine summaries. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of virtual machine summaries." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_VirtualMachines = { "VirtualMachines", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerListVirtualMachineSummariesResponse, VirtualMachines), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_VirtualMachines_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_VirtualMachines_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_PageSize,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_SkipToken,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_VirtualMachines_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_VirtualMachines,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListVirtualMachineSummariesResponse",
		sizeof(FMultiplayerListVirtualMachineSummariesResponse),
		alignof(FMultiplayerListVirtualMachineSummariesResponse),
		Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerListVirtualMachineSummariesResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerListVirtualMachineSummariesResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerListVirtualMachineSummariesResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerRequestMultiplayerServerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerRequestMultiplayerServerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerRequestMultiplayerServerRequest;
class UScriptStruct* FMultiplayerRequestMultiplayerServerRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerRequestMultiplayerServerRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerRequestMultiplayerServerRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerRequestMultiplayerServerRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerRequestMultiplayerServerRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerRequestMultiplayerServerRequest>()
{
	return FMultiplayerRequestMultiplayerServerRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildAliasParams_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_BuildAliasParams;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_InitialPlayers_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_InitialPlayers;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PreferredRegions_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_PreferredRegions;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SessionCookie_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SessionCookie;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SessionId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SessionId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Requests a multiplayer server session from a particular build in any of the given preferred regions. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Requests a multiplayer server session from a particular build in any of the given preferred regions." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerRequestMultiplayerServerRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildAliasParams_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The identifiers of the build alias to use for the request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The identifiers of the build alias to use for the request." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildAliasParams = { "BuildAliasParams", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerRequest, BuildAliasParams), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildAliasParams_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildAliasParams_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of the multiplayer server to request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of the multiplayer server to request." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_InitialPlayers_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * Initial list of players (potentially matchmade) allowed to connect to the game. This list is passed to the game server\n     * when requested (via GSDK) and can be used to validate players connecting to it.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Initial list of players (potentially matchmade) allowed to connect to the game. This list is passed to the game server\nwhen requested (via GSDK) and can be used to validate players connecting to it." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_InitialPlayers = { "InitialPlayers", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerRequest, InitialPlayers), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_InitialPlayers_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_InitialPlayers_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_PreferredRegions_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The preferred regions to request a multiplayer server from. The Multiplayer Service will iterate through the regions in\n     * the specified order and allocate a server from the first one that has servers available.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The preferred regions to request a multiplayer server from. The Multiplayer Service will iterate through the regions in\nthe specified order and allocate a server from the first one that has servers available." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_PreferredRegions = { "PreferredRegions", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerRequest, PreferredRegions), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_PreferredRegions_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_PreferredRegions_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionCookie_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * Data encoded as a string that is passed to the game server when requested. This can be used to to communicate\n     * information such as game mode or map through the request flow.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Data encoded as a string that is passed to the game server when requested. This can be used to to communicate\ninformation such as game mode or map through the request flow." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionCookie = { "SessionCookie", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerRequest, SessionCookie), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionCookie_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionCookie_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** A guid string session ID created track the multiplayer server session over its life. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A guid string session ID created track the multiplayer server session over its life." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionId = { "SessionId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerRequest, SessionId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildAliasParams,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_InitialPlayers,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_PreferredRegions,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionCookie,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerRequestMultiplayerServerRequest",
		sizeof(FMultiplayerRequestMultiplayerServerRequest),
		alignof(FMultiplayerRequestMultiplayerServerRequest),
		Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerRequestMultiplayerServerRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerRequestMultiplayerServerRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerRequestMultiplayerServerRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerRequestMultiplayerServerResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerRequestMultiplayerServerResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerRequestMultiplayerServerResponse;
class UScriptStruct* FMultiplayerRequestMultiplayerServerResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerRequestMultiplayerServerResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerRequestMultiplayerServerResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerRequestMultiplayerServerResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerRequestMultiplayerServerResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerRequestMultiplayerServerResponse>()
{
	return FMultiplayerRequestMultiplayerServerResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildId;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_ConnectedPlayers_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ConnectedPlayers_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_ConnectedPlayers;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_FQDN_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_FQDN;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_IPV4Address_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_IPV4Address;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_LastStateTransitionTime_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_LastStateTransitionTime;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_Ports_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Ports_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_Ports;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_PublicIPV4Addresses_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PublicIPV4Addresses_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_PublicIPV4Addresses;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Region_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Region;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ServerId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ServerId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SessionId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SessionId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_State_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_State;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_VmId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_VmId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerRequestMultiplayerServerResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The identity of the build in which the server was allocated. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The identity of the build in which the server was allocated." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_BuildId_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ConnectedPlayers_Inner = { "ConnectedPlayers", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ConnectedPlayers_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The connected players in the multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The connected players in the multiplayer server." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ConnectedPlayers = { "ConnectedPlayers", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, ConnectedPlayers), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ConnectedPlayers_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ConnectedPlayers_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_FQDN_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The fully qualified domain name of the virtual machine that is hosting this multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The fully qualified domain name of the virtual machine that is hosting this multiplayer server." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_FQDN = { "FQDN", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, FQDN), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_FQDN_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_FQDN_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_IPV4Address_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The public IPv4 address of the virtual machine that is hosting this multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The public IPv4 address of the virtual machine that is hosting this multiplayer server." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_IPV4Address = { "IPV4Address", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, IPV4Address), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_IPV4Address_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_IPV4Address_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_LastStateTransitionTime_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The time (UTC) at which a change in the multiplayer server state was observed. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The time (UTC) at which a change in the multiplayer server state was observed." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_LastStateTransitionTime = { "LastStateTransitionTime", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, LastStateTransitionTime), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_LastStateTransitionTime_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_LastStateTransitionTime_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Ports_Inner = { "Ports", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Ports_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The ports the multiplayer server uses. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ports the multiplayer server uses." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Ports = { "Ports", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, Ports), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Ports_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Ports_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_PublicIPV4Addresses_Inner = { "PublicIPV4Addresses", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_PublicIPV4Addresses_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of public Ipv4 addresses associated with the server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of public Ipv4 addresses associated with the server." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_PublicIPV4Addresses = { "PublicIPV4Addresses", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, PublicIPV4Addresses), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_PublicIPV4Addresses_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_PublicIPV4Addresses_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Region_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region the multiplayer server is located in. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region the multiplayer server is located in." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Region = { "Region", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, Region), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Region_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Region_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ServerId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The string server ID of the multiplayer server generated by PlayFab. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The string server ID of the multiplayer server generated by PlayFab." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ServerId = { "ServerId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, ServerId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ServerId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ServerId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_SessionId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string session ID of the multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string session ID of the multiplayer server." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_SessionId = { "SessionId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, SessionId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_SessionId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_SessionId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_State_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The state of the multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The state of the multiplayer server." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_State = { "State", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, State), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_State_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_State_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_VmId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The virtual machine ID that the multiplayer server is located on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The virtual machine ID that the multiplayer server is located on." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_VmId = { "VmId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, VmId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_VmId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_VmId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_BuildId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ConnectedPlayers_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ConnectedPlayers,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_FQDN,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_IPV4Address,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_LastStateTransitionTime,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Ports_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Ports,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_PublicIPV4Addresses_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_PublicIPV4Addresses,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Region,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ServerId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_SessionId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_State,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_VmId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerRequestMultiplayerServerResponse",
		sizeof(FMultiplayerRequestMultiplayerServerResponse),
		alignof(FMultiplayerRequestMultiplayerServerResponse),
		Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerRequestMultiplayerServerResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerRequestMultiplayerServerResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerRequestMultiplayerServerResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerRequestPartyServiceRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerRequestPartyServiceRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerRequestPartyServiceRequest;
class UScriptStruct* FMultiplayerRequestPartyServiceRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerRequestPartyServiceRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerRequestPartyServiceRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerRequestPartyServiceRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerRequestPartyServiceRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerRequestPartyServiceRequest>()
{
	return FMultiplayerRequestPartyServiceRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_NetworkConfiguration_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_NetworkConfiguration;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PartyId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_PartyId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PreferredRegions_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_PreferredRegions;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Requests a party session from a particular set of builds if build alias params is provided, in any of the given\n * preferred regions.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Requests a party session from a particular set of builds if build alias params is provided, in any of the given\npreferred regions." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerRequestPartyServiceRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestPartyServiceRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_NetworkConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The network configuration for this request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The network configuration for this request." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_NetworkConfiguration = { "NetworkConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestPartyServiceRequest, NetworkConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_NetworkConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_NetworkConfiguration_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_PartyId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** A guid string party ID created track the party session over its life. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A guid string party ID created track the party session over its life." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_PartyId = { "PartyId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestPartyServiceRequest, PartyId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_PartyId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_PartyId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_PreferredRegions_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The preferred regions to request a party session from. The party service will iterate through the regions in the\n     * specified order and allocate a party session from the first one that is available.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The preferred regions to request a party session from. The party service will iterate through the regions in the\nspecified order and allocate a party session from the first one that is available." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_PreferredRegions = { "PreferredRegions", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestPartyServiceRequest, PreferredRegions), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_PreferredRegions_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_PreferredRegions_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_NetworkConfiguration,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_PartyId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewProp_PreferredRegions,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerRequestPartyServiceRequest",
		sizeof(FMultiplayerRequestPartyServiceRequest),
		alignof(FMultiplayerRequestPartyServiceRequest),
		Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerRequestPartyServiceRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerRequestPartyServiceRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerRequestPartyServiceRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerRequestPartyServiceResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerRequestPartyServiceResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerRequestPartyServiceResponse;
class UScriptStruct* FMultiplayerRequestPartyServiceResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerRequestPartyServiceResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerRequestPartyServiceResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerRequestPartyServiceResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerRequestPartyServiceResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerRequestPartyServiceResponse>()
{
	return FMultiplayerRequestPartyServiceResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_InvitationId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_InvitationId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_PartyId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_PartyId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SerializedNetworkDescriptor_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SerializedNetworkDescriptor;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerRequestPartyServiceResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::NewProp_InvitationId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The invitation identifier supplied in the PartyInvitationConfiguration, or the PlayFab-generated guid if none was\n     * supplied.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The invitation identifier supplied in the PartyInvitationConfiguration, or the PlayFab-generated guid if none was\nsupplied." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::NewProp_InvitationId = { "InvitationId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestPartyServiceResponse, InvitationId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::NewProp_InvitationId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::NewProp_InvitationId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::NewProp_PartyId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string party ID of the party session. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string party ID of the party session." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::NewProp_PartyId = { "PartyId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestPartyServiceResponse, PartyId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::NewProp_PartyId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::NewProp_PartyId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::NewProp_SerializedNetworkDescriptor_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** A base-64 encoded string containing the serialized network descriptor for this party. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A base-64 encoded string containing the serialized network descriptor for this party." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::NewProp_SerializedNetworkDescriptor = { "SerializedNetworkDescriptor", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRequestPartyServiceResponse, SerializedNetworkDescriptor), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::NewProp_SerializedNetworkDescriptor_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::NewProp_SerializedNetworkDescriptor_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::NewProp_InvitationId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::NewProp_PartyId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::NewProp_SerializedNetworkDescriptor,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerRequestPartyServiceResponse",
		sizeof(FMultiplayerRequestPartyServiceResponse),
		alignof(FMultiplayerRequestPartyServiceResponse),
		Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerRequestPartyServiceResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerRequestPartyServiceResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerRequestPartyServiceResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerRolloverContainerRegistryCredentialsRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerRolloverContainerRegistryCredentialsRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerRolloverContainerRegistryCredentialsRequest;
class UScriptStruct* FMultiplayerRolloverContainerRegistryCredentialsRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerRolloverContainerRegistryCredentialsRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerRolloverContainerRegistryCredentialsRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerRolloverContainerRegistryCredentialsRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerRolloverContainerRegistryCredentialsRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerRolloverContainerRegistryCredentialsRequest>()
{
	return FMultiplayerRolloverContainerRegistryCredentialsRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Gets new credentials to the container registry where game developers can upload custom container images to before\n * creating a new build.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets new credentials to the container registry where game developers can upload custom container images to before\ncreating a new build." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerRolloverContainerRegistryCredentialsRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRolloverContainerRegistryCredentialsRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerRolloverContainerRegistryCredentialsRequest",
		sizeof(FMultiplayerRolloverContainerRegistryCredentialsRequest),
		alignof(FMultiplayerRolloverContainerRegistryCredentialsRequest),
		Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerRolloverContainerRegistryCredentialsRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerRolloverContainerRegistryCredentialsRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerRolloverContainerRegistryCredentialsRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerRolloverContainerRegistryCredentialsResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerRolloverContainerRegistryCredentialsResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerRolloverContainerRegistryCredentialsResponse;
class UScriptStruct* FMultiplayerRolloverContainerRegistryCredentialsResponse::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerRolloverContainerRegistryCredentialsResponse.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerRolloverContainerRegistryCredentialsResponse.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerRolloverContainerRegistryCredentialsResponse"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerRolloverContainerRegistryCredentialsResponse.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerRolloverContainerRegistryCredentialsResponse>()
{
	return FMultiplayerRolloverContainerRegistryCredentialsResponse::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_DnsName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_DnsName;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Password_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Password;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Username_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Username;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerRolloverContainerRegistryCredentialsResponse>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_DnsName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The url of the container registry. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The url of the container registry." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_DnsName = { "DnsName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRolloverContainerRegistryCredentialsResponse, DnsName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_DnsName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_DnsName_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Password_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The password for accessing the container registry. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The password for accessing the container registry." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Password = { "Password", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRolloverContainerRegistryCredentialsResponse, Password), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Password_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Password_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Username_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The username for accessing the container registry. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The username for accessing the container registry." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Username = { "Username", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerRolloverContainerRegistryCredentialsResponse, Username), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Username_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Username_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_DnsName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Password,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Username,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerRolloverContainerRegistryCredentialsResponse",
		sizeof(FMultiplayerRolloverContainerRegistryCredentialsResponse),
		alignof(FMultiplayerRolloverContainerRegistryCredentialsResponse),
		Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerRolloverContainerRegistryCredentialsResponse.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerRolloverContainerRegistryCredentialsResponse.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerRolloverContainerRegistryCredentialsResponse.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerShutdownMultiplayerServerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerShutdownMultiplayerServerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerShutdownMultiplayerServerRequest;
class UScriptStruct* FMultiplayerShutdownMultiplayerServerRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerShutdownMultiplayerServerRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerShutdownMultiplayerServerRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerShutdownMultiplayerServerRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerShutdownMultiplayerServerRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerShutdownMultiplayerServerRequest>()
{
	return FMultiplayerShutdownMultiplayerServerRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_SessionId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_SessionId;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Executes the shutdown callback from the GSDK and terminates the multiplayer server session. The callback in the GSDK\n * will allow for graceful shutdown with a 15 minute timeoutIf graceful shutdown has not been completed before 15 minutes\n * have elapsed, the multiplayer server session will be forcefully terminated on it's own.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Executes the shutdown callback from the GSDK and terminates the multiplayer server session. The callback in the GSDK\nwill allow for graceful shutdown with a 15 minute timeoutIf graceful shutdown has not been completed before 15 minutes\nhave elapsed, the multiplayer server session will be forcefully terminated on it's own." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerShutdownMultiplayerServerRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerShutdownMultiplayerServerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_SessionId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** A guid string session ID of the multiplayer server to shut down. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A guid string session ID of the multiplayer server to shut down." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_SessionId = { "SessionId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerShutdownMultiplayerServerRequest, SessionId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_SessionId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_SessionId_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_SessionId,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerShutdownMultiplayerServerRequest",
		sizeof(FMultiplayerShutdownMultiplayerServerRequest),
		alignof(FMultiplayerShutdownMultiplayerServerRequest),
		Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerShutdownMultiplayerServerRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerShutdownMultiplayerServerRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerShutdownMultiplayerServerRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerUntagContainerImageRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerUntagContainerImageRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerUntagContainerImageRequest;
class UScriptStruct* FMultiplayerUntagContainerImageRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerUntagContainerImageRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerUntagContainerImageRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerUntagContainerImageRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerUntagContainerImageRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerUntagContainerImageRequest>()
{
	return FMultiplayerUntagContainerImageRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ImageName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_ImageName;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_Tag_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_Tag;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Removes the specified tag from the image. After this operation, a 'docker pull' will fail for the specified image and\n * tag combination. Morever, ListContainerImageTags will not return the specified tag.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Removes the specified tag from the image. After this operation, a 'docker pull' will fail for the specified image and\ntag combination. Morever, ListContainerImageTags will not return the specified tag." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerUntagContainerImageRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUntagContainerImageRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_ImageName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The container image which tag we want to remove. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The container image which tag we want to remove." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_ImageName = { "ImageName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUntagContainerImageRequest, ImageName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_ImageName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_ImageName_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_Tag_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The tag we want to remove. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The tag we want to remove." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_Tag = { "Tag", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUntagContainerImageRequest, Tag), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_Tag_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_Tag_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_ImageName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_Tag,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerUntagContainerImageRequest",
		sizeof(FMultiplayerUntagContainerImageRequest),
		alignof(FMultiplayerUntagContainerImageRequest),
		Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerUntagContainerImageRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerUntagContainerImageRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerUntagContainerImageRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerUpdateBuildAliasRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerUpdateBuildAliasRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildAliasRequest;
class UScriptStruct* FMultiplayerUpdateBuildAliasRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildAliasRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildAliasRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerUpdateBuildAliasRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildAliasRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerUpdateBuildAliasRequest>()
{
	return FMultiplayerUpdateBuildAliasRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AliasId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_AliasId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_AliasName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_AliasName;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_BuildSelectionCriteria_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildSelectionCriteria_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_BuildSelectionCriteria;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Creates a multiplayer server build alias and returns the created alias. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Creates a multiplayer server build alias and returns the created alias." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerUpdateBuildAliasRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string alias Id of the alias to be updated. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string alias Id of the alias to be updated." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasId = { "AliasId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateBuildAliasRequest, AliasId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The alias name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The alias name." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasName = { "AliasName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateBuildAliasRequest, AliasName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasName_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_Inner = { "BuildSelectionCriteria", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Array of build selection criteria. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Array of build selection criteria." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria = { "BuildSelectionCriteria", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateBuildAliasRequest, BuildSelectionCriteria), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateBuildAliasRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_CustomTags,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerUpdateBuildAliasRequest",
		sizeof(FMultiplayerUpdateBuildAliasRequest),
		alignof(FMultiplayerUpdateBuildAliasRequest),
		Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildAliasRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildAliasRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildAliasRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerUpdateBuildNameRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerUpdateBuildNameRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildNameRequest;
class UScriptStruct* FMultiplayerUpdateBuildNameRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildNameRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildNameRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerUpdateBuildNameRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildNameRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerUpdateBuildNameRequest>()
{
	return FMultiplayerUpdateBuildNameRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildName_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildName;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Updates a multiplayer server build's name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Updates a multiplayer server build's name." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerUpdateBuildNameRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string ID of the build we want to update the name of. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string ID of the build we want to update the name of." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateBuildNameRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The build name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The build name." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildName = { "BuildName", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateBuildNameRequest, BuildName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildName_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateBuildNameRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildName,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_CustomTags,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerUpdateBuildNameRequest",
		sizeof(FMultiplayerUpdateBuildNameRequest),
		alignof(FMultiplayerUpdateBuildNameRequest),
		Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildNameRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildNameRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildNameRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerUpdateBuildRegionRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerUpdateBuildRegionRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildRegionRequest;
class UScriptStruct* FMultiplayerUpdateBuildRegionRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildRegionRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildRegionRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerUpdateBuildRegionRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildRegionRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerUpdateBuildRegionRequest>()
{
	return FMultiplayerUpdateBuildRegionRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildRegion_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_BuildRegion;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Updates a multiplayer server build's region. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Updates a multiplayer server build's region." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerUpdateBuildRegionRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string ID of the build we want to update regions for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string ID of the build we want to update regions for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateBuildRegionRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildRegion_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The updated region configuration that should be applied to the specified build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The updated region configuration that should be applied to the specified build." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildRegion = { "BuildRegion", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateBuildRegionRequest, BuildRegion), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildRegion_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildRegion_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateBuildRegionRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildRegion,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_CustomTags,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerUpdateBuildRegionRequest",
		sizeof(FMultiplayerUpdateBuildRegionRequest),
		alignof(FMultiplayerUpdateBuildRegionRequest),
		Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildRegionRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildRegionRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildRegionRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerUpdateBuildRegionsRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerUpdateBuildRegionsRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildRegionsRequest;
class UScriptStruct* FMultiplayerUpdateBuildRegionsRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildRegionsRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildRegionsRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerUpdateBuildRegionsRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildRegionsRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerUpdateBuildRegionsRequest>()
{
	return FMultiplayerUpdateBuildRegionsRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UECodeGen_Private::FStrPropertyParams NewProp_BuildId;
		static const UECodeGen_Private::FObjectPropertyParams NewProp_BuildRegions_Inner;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_BuildRegions_MetaData[];
#endif
		static const UECodeGen_Private::FArrayPropertyParams NewProp_BuildRegions;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Updates a multiplayer server build's regions. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Updates a multiplayer server build's regions." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerUpdateBuildRegionsRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string ID of the build we want to update regions for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string ID of the build we want to update regions for." },
	};
#endif
	const UECodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateBuildRegionsRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildId_MetaData)) };
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildRegions_Inner = { "BuildRegions", nullptr, (EPropertyFlags)0x0000000000000000, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildRegions_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The updated region configuration that should be applied to the specified build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The updated region configuration that should be applied to the specified build." },
	};
#endif
	const UECodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildRegions = { "BuildRegions", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateBuildRegionsRequest, BuildRegions), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildRegions_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildRegions_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUpdateBuildRegionsRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildId,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildRegions_Inner,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildRegions,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_CustomTags,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerUpdateBuildRegionsRequest",
		sizeof(FMultiplayerUpdateBuildRegionsRequest),
		alignof(FMultiplayerUpdateBuildRegionsRequest),
		Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildRegionsRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildRegionsRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildRegionsRequest.InnerSingleton;
	}

static_assert(std::is_polymorphic<FMultiplayerUploadCertificateRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerUploadCertificateRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

	static FStructRegistrationInfo Z_Registration_Info_UScriptStruct_MultiplayerUploadCertificateRequest;
class UScriptStruct* FMultiplayerUploadCertificateRequest::StaticStruct()
{
	if (!Z_Registration_Info_UScriptStruct_MultiplayerUploadCertificateRequest.OuterSingleton)
	{
		Z_Registration_Info_UScriptStruct_MultiplayerUploadCertificateRequest.OuterSingleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest, (UObject*)Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerUploadCertificateRequest"));
	}
	return Z_Registration_Info_UScriptStruct_MultiplayerUploadCertificateRequest.OuterSingleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerUploadCertificateRequest>()
{
	return FMultiplayerUploadCertificateRequest::StaticStruct();
}
	struct Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics
	{
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_ForceUpdate_MetaData[];
#endif
		static void NewProp_ForceUpdate_SetBit(void* Obj);
		static const UECodeGen_Private::FBoolPropertyParams NewProp_ForceUpdate;
#if WITH_METADATA
		static const UECodeGen_Private::FMetaDataPairParam NewProp_GameCertificate_MetaData[];
#endif
		static const UECodeGen_Private::FObjectPropertyParams NewProp_GameCertificate;
		static const UECodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UECodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Uploads a multiplayer server game certificate. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Uploads a multiplayer server game certificate." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerUploadCertificateRequest>();
	}
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUploadCertificateRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_ForceUpdate_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Forces the certificate renewal if the certificate already exists. Default is false */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Forces the certificate renewal if the certificate already exists. Default is false" },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_ForceUpdate_SetBit(void* Obj)
	{
		((FMultiplayerUploadCertificateRequest*)Obj)->ForceUpdate = 1;
	}
	const UECodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_ForceUpdate = { "ForceUpdate", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Bool | UECodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, sizeof(bool), sizeof(FMultiplayerUploadCertificateRequest), &Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_ForceUpdate_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_ForceUpdate_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_ForceUpdate_MetaData)) };
#if WITH_METADATA
	const UECodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_GameCertificate_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game certificate to upload. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game certificate to upload." },
	};
#endif
	const UECodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_GameCertificate = { "GameCertificate", nullptr, (EPropertyFlags)0x0010000000000005, UECodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, nullptr, nullptr, STRUCT_OFFSET(FMultiplayerUploadCertificateRequest, GameCertificate), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_GameCertificate_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_GameCertificate_MetaData)) };
	const UECodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::PropPointers[] = {
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_CustomTags,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_ForceUpdate,
		(const UECodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_GameCertificate,
	};
	const UECodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerUploadCertificateRequest",
		sizeof(FMultiplayerUploadCertificateRequest),
		alignof(FMultiplayerUploadCertificateRequest),
		Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest()
	{
		if (!Z_Registration_Info_UScriptStruct_MultiplayerUploadCertificateRequest.InnerSingleton)
		{
			UECodeGen_Private::ConstructUScriptStruct(Z_Registration_Info_UScriptStruct_MultiplayerUploadCertificateRequest.InnerSingleton, Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::ReturnStructParams);
		}
		return Z_Registration_Info_UScriptStruct_MultiplayerUploadCertificateRequest.InnerSingleton;
	}
	struct Z_CompiledInDeferFile_FID_Users_jasfi_Documents_Unreal_Projects_LetEmCook_Plugins_PlayFabPlugin_PlayFab_Source_PlayFab_Classes_PlayFabMultiplayerModels_h_Statics
	{
		static const FStructRegisterCompiledInInfo ScriptStructInfo[];
	};
	const FStructRegisterCompiledInInfo Z_CompiledInDeferFile_FID_Users_jasfi_Documents_Unreal_Projects_LetEmCook_Plugins_PlayFabPlugin_PlayFab_Source_PlayFab_Classes_PlayFabMultiplayerModels_h_Statics::ScriptStructInfo[] = {
		{ FMultiplayerCreateLobbyRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCreateLobbyRequest_Statics::NewStructOps, TEXT("MultiplayerCreateLobbyRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerCreateLobbyRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCreateLobbyRequest), 1099300441U) },
		{ FMultiplayerCreateLobbyResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCreateLobbyResult_Statics::NewStructOps, TEXT("MultiplayerCreateLobbyResult"), &Z_Registration_Info_UScriptStruct_MultiplayerCreateLobbyResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCreateLobbyResult), 4057731244U) },
		{ FMultiplayerDeleteLobbyRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerDeleteLobbyRequest_Statics::NewStructOps, TEXT("MultiplayerDeleteLobbyRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerDeleteLobbyRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerDeleteLobbyRequest), 1277537017U) },
		{ FMultiplayerLobbyEmptyResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerLobbyEmptyResult_Statics::NewStructOps, TEXT("MultiplayerLobbyEmptyResult"), &Z_Registration_Info_UScriptStruct_MultiplayerLobbyEmptyResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerLobbyEmptyResult), 611036704U) },
		{ FMultiplayerFindFriendLobbiesRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesRequest_Statics::NewStructOps, TEXT("MultiplayerFindFriendLobbiesRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerFindFriendLobbiesRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerFindFriendLobbiesRequest), 3685691715U) },
		{ FMultiplayerFindFriendLobbiesResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerFindFriendLobbiesResult_Statics::NewStructOps, TEXT("MultiplayerFindFriendLobbiesResult"), &Z_Registration_Info_UScriptStruct_MultiplayerFindFriendLobbiesResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerFindFriendLobbiesResult), 3853627353U) },
		{ FMultiplayerFindLobbiesRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerFindLobbiesRequest_Statics::NewStructOps, TEXT("MultiplayerFindLobbiesRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerFindLobbiesRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerFindLobbiesRequest), 3058293280U) },
		{ FMultiplayerFindLobbiesResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerFindLobbiesResult_Statics::NewStructOps, TEXT("MultiplayerFindLobbiesResult"), &Z_Registration_Info_UScriptStruct_MultiplayerFindLobbiesResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerFindLobbiesResult), 664924727U) },
		{ FMultiplayerGetLobbyRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetLobbyRequest_Statics::NewStructOps, TEXT("MultiplayerGetLobbyRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerGetLobbyRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetLobbyRequest), 2505412619U) },
		{ FMultiplayerGetLobbyResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetLobbyResult_Statics::NewStructOps, TEXT("MultiplayerGetLobbyResult"), &Z_Registration_Info_UScriptStruct_MultiplayerGetLobbyResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetLobbyResult), 2743251936U) },
		{ FMultiplayerInviteToLobbyRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerInviteToLobbyRequest_Statics::NewStructOps, TEXT("MultiplayerInviteToLobbyRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerInviteToLobbyRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerInviteToLobbyRequest), 3926851290U) },
		{ FMultiplayerJoinArrangedLobbyRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerJoinArrangedLobbyRequest_Statics::NewStructOps, TEXT("MultiplayerJoinArrangedLobbyRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerJoinArrangedLobbyRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerJoinArrangedLobbyRequest), 2698506372U) },
		{ FMultiplayerJoinLobbyResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerJoinLobbyResult_Statics::NewStructOps, TEXT("MultiplayerJoinLobbyResult"), &Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerJoinLobbyResult), 3279321364U) },
		{ FMultiplayerJoinLobbyRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerJoinLobbyRequest_Statics::NewStructOps, TEXT("MultiplayerJoinLobbyRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerJoinLobbyRequest), 854168936U) },
		{ FMultiplayerJoinLobbyAsServerRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerRequest_Statics::NewStructOps, TEXT("MultiplayerJoinLobbyAsServerRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyAsServerRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerJoinLobbyAsServerRequest), 3341358537U) },
		{ FMultiplayerJoinLobbyAsServerResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerJoinLobbyAsServerResult_Statics::NewStructOps, TEXT("MultiplayerJoinLobbyAsServerResult"), &Z_Registration_Info_UScriptStruct_MultiplayerJoinLobbyAsServerResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerJoinLobbyAsServerResult), 1120890576U) },
		{ FMultiplayerLeaveLobbyRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyRequest_Statics::NewStructOps, TEXT("MultiplayerLeaveLobbyRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerLeaveLobbyRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerLeaveLobbyRequest), 1517088550U) },
		{ FMultiplayerLeaveLobbyAsServerRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerLeaveLobbyAsServerRequest_Statics::NewStructOps, TEXT("MultiplayerLeaveLobbyAsServerRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerLeaveLobbyAsServerRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerLeaveLobbyAsServerRequest), 1370434810U) },
		{ FMultiplayerRemoveMemberFromLobbyRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerRemoveMemberFromLobbyRequest_Statics::NewStructOps, TEXT("MultiplayerRemoveMemberFromLobbyRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerRemoveMemberFromLobbyRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerRemoveMemberFromLobbyRequest), 1027958979U) },
		{ FMultiplayerSubscribeToLobbyResourceRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceRequest_Statics::NewStructOps, TEXT("MultiplayerSubscribeToLobbyResourceRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerSubscribeToLobbyResourceRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerSubscribeToLobbyResourceRequest), 1628387585U) },
		{ FMultiplayerSubscribeToLobbyResourceResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerSubscribeToLobbyResourceResult_Statics::NewStructOps, TEXT("MultiplayerSubscribeToLobbyResourceResult"), &Z_Registration_Info_UScriptStruct_MultiplayerSubscribeToLobbyResourceResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerSubscribeToLobbyResourceResult), 2158574404U) },
		{ FMultiplayerUnsubscribeFromLobbyResourceRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerUnsubscribeFromLobbyResourceRequest_Statics::NewStructOps, TEXT("MultiplayerUnsubscribeFromLobbyResourceRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerUnsubscribeFromLobbyResourceRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerUnsubscribeFromLobbyResourceRequest), 4258501687U) },
		{ FMultiplayerUpdateLobbyRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyRequest_Statics::NewStructOps, TEXT("MultiplayerUpdateLobbyRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerUpdateLobbyRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerUpdateLobbyRequest), 2163667081U) },
		{ FMultiplayerUpdateLobbyAsServerRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerUpdateLobbyAsServerRequest_Statics::NewStructOps, TEXT("MultiplayerUpdateLobbyAsServerRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerUpdateLobbyAsServerRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerUpdateLobbyAsServerRequest), 1577437407U) },
		{ FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewStructOps, TEXT("MultiplayerCancelAllMatchmakingTicketsForPlayerRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerCancelAllMatchmakingTicketsForPlayerRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest), 94467777U) },
		{ FMultiplayerCancelAllMatchmakingTicketsForPlayerResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Statics::NewStructOps, TEXT("MultiplayerCancelAllMatchmakingTicketsForPlayerResult"), &Z_Registration_Info_UScriptStruct_MultiplayerCancelAllMatchmakingTicketsForPlayerResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCancelAllMatchmakingTicketsForPlayerResult), 2286442804U) },
		{ FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewStructOps, TEXT("MultiplayerCancelAllServerBackfillTicketsForPlayerRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerCancelAllServerBackfillTicketsForPlayerRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest), 779600954U) },
		{ FMultiplayerCancelAllServerBackfillTicketsForPlayerResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Statics::NewStructOps, TEXT("MultiplayerCancelAllServerBackfillTicketsForPlayerResult"), &Z_Registration_Info_UScriptStruct_MultiplayerCancelAllServerBackfillTicketsForPlayerResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCancelAllServerBackfillTicketsForPlayerResult), 2945018924U) },
		{ FMultiplayerCancelMatchmakingTicketRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewStructOps, TEXT("MultiplayerCancelMatchmakingTicketRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerCancelMatchmakingTicketRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCancelMatchmakingTicketRequest), 2053022673U) },
		{ FMultiplayerCancelMatchmakingTicketResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Statics::NewStructOps, TEXT("MultiplayerCancelMatchmakingTicketResult"), &Z_Registration_Info_UScriptStruct_MultiplayerCancelMatchmakingTicketResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCancelMatchmakingTicketResult), 3907222538U) },
		{ FMultiplayerCancelServerBackfillTicketRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewStructOps, TEXT("MultiplayerCancelServerBackfillTicketRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerCancelServerBackfillTicketRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCancelServerBackfillTicketRequest), 1015460501U) },
		{ FMultiplayerCancelServerBackfillTicketResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Statics::NewStructOps, TEXT("MultiplayerCancelServerBackfillTicketResult"), &Z_Registration_Info_UScriptStruct_MultiplayerCancelServerBackfillTicketResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCancelServerBackfillTicketResult), 3936511743U) },
		{ FMultiplayerCreateMatchmakingTicketRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewStructOps, TEXT("MultiplayerCreateMatchmakingTicketRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerCreateMatchmakingTicketRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCreateMatchmakingTicketRequest), 671891624U) },
		{ FMultiplayerCreateMatchmakingTicketResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::NewStructOps, TEXT("MultiplayerCreateMatchmakingTicketResult"), &Z_Registration_Info_UScriptStruct_MultiplayerCreateMatchmakingTicketResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCreateMatchmakingTicketResult), 148498266U) },
		{ FMultiplayerCreateServerBackfillTicketRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewStructOps, TEXT("MultiplayerCreateServerBackfillTicketRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerCreateServerBackfillTicketRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCreateServerBackfillTicketRequest), 2557890374U) },
		{ FMultiplayerCreateServerBackfillTicketResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::NewStructOps, TEXT("MultiplayerCreateServerBackfillTicketResult"), &Z_Registration_Info_UScriptStruct_MultiplayerCreateServerBackfillTicketResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCreateServerBackfillTicketResult), 2038073427U) },
		{ FMultiplayerCreateServerMatchmakingTicketRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewStructOps, TEXT("MultiplayerCreateServerMatchmakingTicketRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerCreateServerMatchmakingTicketRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCreateServerMatchmakingTicketRequest), 3328486962U) },
		{ FMultiplayerGetMatchRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewStructOps, TEXT("MultiplayerGetMatchRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerGetMatchRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetMatchRequest), 4264155378U) },
		{ FMultiplayerGetMatchResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewStructOps, TEXT("MultiplayerGetMatchResult"), &Z_Registration_Info_UScriptStruct_MultiplayerGetMatchResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetMatchResult), 3132605795U) },
		{ FMultiplayerGetMatchmakingTicketRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewStructOps, TEXT("MultiplayerGetMatchmakingTicketRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerGetMatchmakingTicketRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetMatchmakingTicketRequest), 1700482571U) },
		{ FMultiplayerGetMatchmakingTicketResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewStructOps, TEXT("MultiplayerGetMatchmakingTicketResult"), &Z_Registration_Info_UScriptStruct_MultiplayerGetMatchmakingTicketResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetMatchmakingTicketResult), 2199772703U) },
		{ FMultiplayerGetQueueStatisticsRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewStructOps, TEXT("MultiplayerGetQueueStatisticsRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerGetQueueStatisticsRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetQueueStatisticsRequest), 3375751706U) },
		{ FMultiplayerGetQueueStatisticsResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewStructOps, TEXT("MultiplayerGetQueueStatisticsResult"), &Z_Registration_Info_UScriptStruct_MultiplayerGetQueueStatisticsResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetQueueStatisticsResult), 2227443226U) },
		{ FMultiplayerGetServerBackfillTicketRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewStructOps, TEXT("MultiplayerGetServerBackfillTicketRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerGetServerBackfillTicketRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetServerBackfillTicketRequest), 2204017681U) },
		{ FMultiplayerGetServerBackfillTicketResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewStructOps, TEXT("MultiplayerGetServerBackfillTicketResult"), &Z_Registration_Info_UScriptStruct_MultiplayerGetServerBackfillTicketResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetServerBackfillTicketResult), 3614531750U) },
		{ FMultiplayerJoinMatchmakingTicketRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewStructOps, TEXT("MultiplayerJoinMatchmakingTicketRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerJoinMatchmakingTicketRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerJoinMatchmakingTicketRequest), 275255365U) },
		{ FMultiplayerJoinMatchmakingTicketResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Statics::NewStructOps, TEXT("MultiplayerJoinMatchmakingTicketResult"), &Z_Registration_Info_UScriptStruct_MultiplayerJoinMatchmakingTicketResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerJoinMatchmakingTicketResult), 1817319823U) },
		{ FMultiplayerListMatchmakingTicketsForPlayerRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewStructOps, TEXT("MultiplayerListMatchmakingTicketsForPlayerRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerListMatchmakingTicketsForPlayerRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListMatchmakingTicketsForPlayerRequest), 2780938234U) },
		{ FMultiplayerListMatchmakingTicketsForPlayerResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::NewStructOps, TEXT("MultiplayerListMatchmakingTicketsForPlayerResult"), &Z_Registration_Info_UScriptStruct_MultiplayerListMatchmakingTicketsForPlayerResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListMatchmakingTicketsForPlayerResult), 983321189U) },
		{ FMultiplayerListServerBackfillTicketsForPlayerRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewStructOps, TEXT("MultiplayerListServerBackfillTicketsForPlayerRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerListServerBackfillTicketsForPlayerRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListServerBackfillTicketsForPlayerRequest), 58064800U) },
		{ FMultiplayerListServerBackfillTicketsForPlayerResult::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::NewStructOps, TEXT("MultiplayerListServerBackfillTicketsForPlayerResult"), &Z_Registration_Info_UScriptStruct_MultiplayerListServerBackfillTicketsForPlayerResult, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListServerBackfillTicketsForPlayerResult), 294006980U) },
		{ FMultiplayerBuildAliasDetailsResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewStructOps, TEXT("MultiplayerBuildAliasDetailsResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerBuildAliasDetailsResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerBuildAliasDetailsResponse), 3095180635U) },
		{ FMultiplayerCreateBuildAliasRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewStructOps, TEXT("MultiplayerCreateBuildAliasRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildAliasRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCreateBuildAliasRequest), 4288750876U) },
		{ FMultiplayerCreateBuildWithCustomContainerRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewStructOps, TEXT("MultiplayerCreateBuildWithCustomContainerRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithCustomContainerRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCreateBuildWithCustomContainerRequest), 1284684214U) },
		{ FMultiplayerCreateBuildWithCustomContainerResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewStructOps, TEXT("MultiplayerCreateBuildWithCustomContainerResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithCustomContainerResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCreateBuildWithCustomContainerResponse), 1008413369U) },
		{ FMultiplayerCreateBuildWithManagedContainerRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewStructOps, TEXT("MultiplayerCreateBuildWithManagedContainerRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithManagedContainerRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCreateBuildWithManagedContainerRequest), 2751238687U) },
		{ FMultiplayerCreateBuildWithManagedContainerResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewStructOps, TEXT("MultiplayerCreateBuildWithManagedContainerResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithManagedContainerResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCreateBuildWithManagedContainerResponse), 3446527816U) },
		{ FMultiplayerCreateBuildWithProcessBasedServerRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewStructOps, TEXT("MultiplayerCreateBuildWithProcessBasedServerRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithProcessBasedServerRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCreateBuildWithProcessBasedServerRequest), 4099793403U) },
		{ FMultiplayerCreateBuildWithProcessBasedServerResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewStructOps, TEXT("MultiplayerCreateBuildWithProcessBasedServerResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerCreateBuildWithProcessBasedServerResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCreateBuildWithProcessBasedServerResponse), 3784317172U) },
		{ FMultiplayerCreateRemoteUserRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewStructOps, TEXT("MultiplayerCreateRemoteUserRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerCreateRemoteUserRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCreateRemoteUserRequest), 103758520U) },
		{ FMultiplayerCreateRemoteUserResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewStructOps, TEXT("MultiplayerCreateRemoteUserResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerCreateRemoteUserResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCreateRemoteUserResponse), 379835824U) },
		{ FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewStructOps, TEXT("MultiplayerCreateTitleMultiplayerServersQuotaChangeRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest), 637844397U) },
		{ FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewStructOps, TEXT("MultiplayerCreateTitleMultiplayerServersQuotaChangeResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerCreateTitleMultiplayerServersQuotaChangeResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse), 1790592925U) },
		{ FMultiplayerDeleteAssetRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewStructOps, TEXT("MultiplayerDeleteAssetRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerDeleteAssetRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerDeleteAssetRequest), 2198455189U) },
		{ FMultiplayerEmptyResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Statics::NewStructOps, TEXT("MultiplayerEmptyResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerEmptyResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerEmptyResponse), 147708032U) },
		{ FMultiplayerDeleteBuildRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewStructOps, TEXT("MultiplayerDeleteBuildRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerDeleteBuildRequest), 3697436259U) },
		{ FMultiplayerDeleteBuildAliasRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewStructOps, TEXT("MultiplayerDeleteBuildAliasRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildAliasRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerDeleteBuildAliasRequest), 3122900869U) },
		{ FMultiplayerDeleteBuildRegionRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewStructOps, TEXT("MultiplayerDeleteBuildRegionRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerDeleteBuildRegionRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerDeleteBuildRegionRequest), 3037685749U) },
		{ FMultiplayerDeleteCertificateRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewStructOps, TEXT("MultiplayerDeleteCertificateRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerDeleteCertificateRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerDeleteCertificateRequest), 319992257U) },
		{ FMultiplayerDeleteContainerImageRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewStructOps, TEXT("MultiplayerDeleteContainerImageRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerDeleteContainerImageRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerDeleteContainerImageRequest), 161773704U) },
		{ FMultiplayerDeleteRemoteUserRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewStructOps, TEXT("MultiplayerDeleteRemoteUserRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerDeleteRemoteUserRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerDeleteRemoteUserRequest), 4137426103U) },
		{ FMultiplayerEnableMultiplayerServersForTitleRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::NewStructOps, TEXT("MultiplayerEnableMultiplayerServersForTitleRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerEnableMultiplayerServersForTitleRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerEnableMultiplayerServersForTitleRequest), 1334882597U) },
		{ FMultiplayerEnableMultiplayerServersForTitleResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::NewStructOps, TEXT("MultiplayerEnableMultiplayerServersForTitleResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerEnableMultiplayerServersForTitleResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerEnableMultiplayerServersForTitleResponse), 1438497191U) },
		{ FMultiplayerGetAssetDownloadUrlRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewStructOps, TEXT("MultiplayerGetAssetDownloadUrlRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerGetAssetDownloadUrlRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetAssetDownloadUrlRequest), 103867442U) },
		{ FMultiplayerGetAssetDownloadUrlResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewStructOps, TEXT("MultiplayerGetAssetDownloadUrlResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerGetAssetDownloadUrlResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetAssetDownloadUrlResponse), 4179553051U) },
		{ FMultiplayerGetAssetUploadUrlRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewStructOps, TEXT("MultiplayerGetAssetUploadUrlRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerGetAssetUploadUrlRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetAssetUploadUrlRequest), 245286564U) },
		{ FMultiplayerGetAssetUploadUrlResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewStructOps, TEXT("MultiplayerGetAssetUploadUrlResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerGetAssetUploadUrlResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetAssetUploadUrlResponse), 2287824048U) },
		{ FMultiplayerGetBuildRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewStructOps, TEXT("MultiplayerGetBuildRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerGetBuildRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetBuildRequest), 598312279U) },
		{ FMultiplayerGetBuildResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewStructOps, TEXT("MultiplayerGetBuildResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerGetBuildResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetBuildResponse), 3388645564U) },
		{ FMultiplayerGetBuildAliasRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewStructOps, TEXT("MultiplayerGetBuildAliasRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerGetBuildAliasRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetBuildAliasRequest), 2252554595U) },
		{ FMultiplayerGetContainerRegistryCredentialsRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::NewStructOps, TEXT("MultiplayerGetContainerRegistryCredentialsRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerGetContainerRegistryCredentialsRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetContainerRegistryCredentialsRequest), 186565455U) },
		{ FMultiplayerGetContainerRegistryCredentialsResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewStructOps, TEXT("MultiplayerGetContainerRegistryCredentialsResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerGetContainerRegistryCredentialsResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetContainerRegistryCredentialsResponse), 453317317U) },
		{ FMultiplayerGetMultiplayerServerDetailsRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewStructOps, TEXT("MultiplayerGetMultiplayerServerDetailsRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerDetailsRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetMultiplayerServerDetailsRequest), 1619056305U) },
		{ FMultiplayerGetMultiplayerServerDetailsResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewStructOps, TEXT("MultiplayerGetMultiplayerServerDetailsResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerDetailsResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetMultiplayerServerDetailsResponse), 1362449184U) },
		{ FMultiplayerGetMultiplayerServerLogsRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewStructOps, TEXT("MultiplayerGetMultiplayerServerLogsRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerLogsRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetMultiplayerServerLogsRequest), 1612410312U) },
		{ FMultiplayerGetMultiplayerServerLogsResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::NewStructOps, TEXT("MultiplayerGetMultiplayerServerLogsResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerServerLogsResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetMultiplayerServerLogsResponse), 174572727U) },
		{ FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewStructOps, TEXT("MultiplayerGetMultiplayerSessionLogsBySessionIdRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerGetMultiplayerSessionLogsBySessionIdRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest), 4164470796U) },
		{ FMultiplayerGetRemoteLoginEndpointRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewStructOps, TEXT("MultiplayerGetRemoteLoginEndpointRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerGetRemoteLoginEndpointRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetRemoteLoginEndpointRequest), 3961090648U) },
		{ FMultiplayerGetRemoteLoginEndpointResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewStructOps, TEXT("MultiplayerGetRemoteLoginEndpointResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerGetRemoteLoginEndpointResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetRemoteLoginEndpointResponse), 1100539786U) },
		{ FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::NewStructOps, TEXT("MultiplayerGetTitleEnabledForMultiplayerServersStatusRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerGetTitleEnabledForMultiplayerServersStatusRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest), 1412429161U) },
		{ FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::NewStructOps, TEXT("MultiplayerGetTitleEnabledForMultiplayerServersStatusResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerGetTitleEnabledForMultiplayerServersStatusResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse), 271433254U) },
		{ FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewStructOps, TEXT("MultiplayerGetTitleMultiplayerServersQuotaChangeRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotaChangeRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest), 3099815935U) },
		{ FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::NewStructOps, TEXT("MultiplayerGetTitleMultiplayerServersQuotaChangeResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotaChangeResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse), 3222990886U) },
		{ FMultiplayerGetTitleMultiplayerServersQuotasRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::NewStructOps, TEXT("MultiplayerGetTitleMultiplayerServersQuotasRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotasRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetTitleMultiplayerServersQuotasRequest), 2745120155U) },
		{ FMultiplayerGetTitleMultiplayerServersQuotasResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::NewStructOps, TEXT("MultiplayerGetTitleMultiplayerServersQuotasResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerGetTitleMultiplayerServersQuotasResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerGetTitleMultiplayerServersQuotasResponse), 4008784837U) },
		{ FMultiplayerListMultiplayerServersRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewStructOps, TEXT("MultiplayerListMultiplayerServersRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerListMultiplayerServersRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListMultiplayerServersRequest), 3179496477U) },
		{ FMultiplayerListMultiplayerServersResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewStructOps, TEXT("MultiplayerListMultiplayerServersResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerListMultiplayerServersResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListMultiplayerServersResponse), 3029184269U) },
		{ FMultiplayerListAssetSummariesRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewStructOps, TEXT("MultiplayerListAssetSummariesRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerListAssetSummariesRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListAssetSummariesRequest), 1986970674U) },
		{ FMultiplayerListAssetSummariesResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewStructOps, TEXT("MultiplayerListAssetSummariesResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerListAssetSummariesResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListAssetSummariesResponse), 104849460U) },
		{ FMultiplayerListBuildAliasesRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewStructOps, TEXT("MultiplayerListBuildAliasesRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerListBuildAliasesRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListBuildAliasesRequest), 4066627743U) },
		{ FMultiplayerListBuildAliasesResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewStructOps, TEXT("MultiplayerListBuildAliasesResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerListBuildAliasesResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListBuildAliasesResponse), 3253160321U) },
		{ FMultiplayerListBuildSummariesRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewStructOps, TEXT("MultiplayerListBuildSummariesRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerListBuildSummariesRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListBuildSummariesRequest), 2251820554U) },
		{ FMultiplayerListBuildSummariesResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewStructOps, TEXT("MultiplayerListBuildSummariesResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerListBuildSummariesResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListBuildSummariesResponse), 3240178014U) },
		{ FMultiplayerListCertificateSummariesRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewStructOps, TEXT("MultiplayerListCertificateSummariesRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerListCertificateSummariesRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListCertificateSummariesRequest), 1649246680U) },
		{ FMultiplayerListCertificateSummariesResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewStructOps, TEXT("MultiplayerListCertificateSummariesResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerListCertificateSummariesResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListCertificateSummariesResponse), 273985129U) },
		{ FMultiplayerListContainerImagesRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewStructOps, TEXT("MultiplayerListContainerImagesRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerListContainerImagesRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListContainerImagesRequest), 3040075304U) },
		{ FMultiplayerListContainerImagesResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewStructOps, TEXT("MultiplayerListContainerImagesResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerListContainerImagesResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListContainerImagesResponse), 324752877U) },
		{ FMultiplayerListContainerImageTagsRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewStructOps, TEXT("MultiplayerListContainerImageTagsRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerListContainerImageTagsRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListContainerImageTagsRequest), 3656430252U) },
		{ FMultiplayerListContainerImageTagsResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewStructOps, TEXT("MultiplayerListContainerImageTagsResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerListContainerImageTagsResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListContainerImageTagsResponse), 912310133U) },
		{ FMultiplayerListPartyQosServersRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::NewStructOps, TEXT("MultiplayerListPartyQosServersRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerListPartyQosServersRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListPartyQosServersRequest), 756256735U) },
		{ FMultiplayerListPartyQosServersResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewStructOps, TEXT("MultiplayerListPartyQosServersResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerListPartyQosServersResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListPartyQosServersResponse), 2427703210U) },
		{ FMultiplayerListQosServersForTitleRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewStructOps, TEXT("MultiplayerListQosServersForTitleRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerListQosServersForTitleRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListQosServersForTitleRequest), 1970252234U) },
		{ FMultiplayerListQosServersForTitleResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewStructOps, TEXT("MultiplayerListQosServersForTitleResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerListQosServersForTitleResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListQosServersForTitleResponse), 1346653289U) },
		{ FMultiplayerListTitleMultiplayerServersQuotaChangesRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::NewStructOps, TEXT("MultiplayerListTitleMultiplayerServersQuotaChangesRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerListTitleMultiplayerServersQuotaChangesRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListTitleMultiplayerServersQuotaChangesRequest), 1079976558U) },
		{ FMultiplayerListTitleMultiplayerServersQuotaChangesResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::NewStructOps, TEXT("MultiplayerListTitleMultiplayerServersQuotaChangesResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerListTitleMultiplayerServersQuotaChangesResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListTitleMultiplayerServersQuotaChangesResponse), 945229859U) },
		{ FMultiplayerListVirtualMachineSummariesRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewStructOps, TEXT("MultiplayerListVirtualMachineSummariesRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerListVirtualMachineSummariesRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListVirtualMachineSummariesRequest), 165908731U) },
		{ FMultiplayerListVirtualMachineSummariesResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewStructOps, TEXT("MultiplayerListVirtualMachineSummariesResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerListVirtualMachineSummariesResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerListVirtualMachineSummariesResponse), 3033811833U) },
		{ FMultiplayerRequestMultiplayerServerRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewStructOps, TEXT("MultiplayerRequestMultiplayerServerRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerRequestMultiplayerServerRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerRequestMultiplayerServerRequest), 2536682666U) },
		{ FMultiplayerRequestMultiplayerServerResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewStructOps, TEXT("MultiplayerRequestMultiplayerServerResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerRequestMultiplayerServerResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerRequestMultiplayerServerResponse), 2217863383U) },
		{ FMultiplayerRequestPartyServiceRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceRequest_Statics::NewStructOps, TEXT("MultiplayerRequestPartyServiceRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerRequestPartyServiceRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerRequestPartyServiceRequest), 141918450U) },
		{ FMultiplayerRequestPartyServiceResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerRequestPartyServiceResponse_Statics::NewStructOps, TEXT("MultiplayerRequestPartyServiceResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerRequestPartyServiceResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerRequestPartyServiceResponse), 2092154743U) },
		{ FMultiplayerRolloverContainerRegistryCredentialsRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::NewStructOps, TEXT("MultiplayerRolloverContainerRegistryCredentialsRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerRolloverContainerRegistryCredentialsRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerRolloverContainerRegistryCredentialsRequest), 1192663634U) },
		{ FMultiplayerRolloverContainerRegistryCredentialsResponse::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewStructOps, TEXT("MultiplayerRolloverContainerRegistryCredentialsResponse"), &Z_Registration_Info_UScriptStruct_MultiplayerRolloverContainerRegistryCredentialsResponse, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerRolloverContainerRegistryCredentialsResponse), 2021095643U) },
		{ FMultiplayerShutdownMultiplayerServerRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewStructOps, TEXT("MultiplayerShutdownMultiplayerServerRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerShutdownMultiplayerServerRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerShutdownMultiplayerServerRequest), 2287430121U) },
		{ FMultiplayerUntagContainerImageRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewStructOps, TEXT("MultiplayerUntagContainerImageRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerUntagContainerImageRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerUntagContainerImageRequest), 2917502871U) },
		{ FMultiplayerUpdateBuildAliasRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewStructOps, TEXT("MultiplayerUpdateBuildAliasRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildAliasRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerUpdateBuildAliasRequest), 535676553U) },
		{ FMultiplayerUpdateBuildNameRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewStructOps, TEXT("MultiplayerUpdateBuildNameRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildNameRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerUpdateBuildNameRequest), 1675546214U) },
		{ FMultiplayerUpdateBuildRegionRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewStructOps, TEXT("MultiplayerUpdateBuildRegionRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildRegionRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerUpdateBuildRegionRequest), 4049134898U) },
		{ FMultiplayerUpdateBuildRegionsRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewStructOps, TEXT("MultiplayerUpdateBuildRegionsRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerUpdateBuildRegionsRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerUpdateBuildRegionsRequest), 2530561418U) },
		{ FMultiplayerUploadCertificateRequest::StaticStruct, Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewStructOps, TEXT("MultiplayerUploadCertificateRequest"), &Z_Registration_Info_UScriptStruct_MultiplayerUploadCertificateRequest, CONSTRUCT_RELOAD_VERSION_INFO(FStructReloadVersionInfo, sizeof(FMultiplayerUploadCertificateRequest), 1644807557U) },
	};
	static FRegisterCompiledInInfo Z_CompiledInDeferFile_FID_Users_jasfi_Documents_Unreal_Projects_LetEmCook_Plugins_PlayFabPlugin_PlayFab_Source_PlayFab_Classes_PlayFabMultiplayerModels_h_2450162892(TEXT("/Script/PlayFab"),
		nullptr, 0,
		Z_CompiledInDeferFile_FID_Users_jasfi_Documents_Unreal_Projects_LetEmCook_Plugins_PlayFabPlugin_PlayFab_Source_PlayFab_Classes_PlayFabMultiplayerModels_h_Statics::ScriptStructInfo, UE_ARRAY_COUNT(Z_CompiledInDeferFile_FID_Users_jasfi_Documents_Unreal_Projects_LetEmCook_Plugins_PlayFabPlugin_PlayFab_Source_PlayFab_Classes_PlayFabMultiplayerModels_h_Statics::ScriptStructInfo),
		nullptr, 0);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
